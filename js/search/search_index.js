var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.368,1,0.852]],["body/components/AppComponent.html",[0,0.585,1,1.27,2,1.205,3,0.2,4,0.2,5,0.946,6,0.946,7,0.946,8,0.946,9,0.174,10,2.154,11,0.777,12,3.763,13,1.614,14,0.819,15,2.313,16,2.17,17,2.056,18,1.392,19,4.464,20,1.392,21,3.763,22,0.451,23,1.392,24,1.95,25,3.763,26,1.205,27,5.67,28,3.763,29,5.485,30,0.777,31,2.559,32,1.295,33,2.251,34,2.777,35,4.04,36,3.169,37,3.763,38,3.294,39,4.464,40,3.763,41,0.94,42,3.763,43,0.819,44,0.028,45,0.921,46,1.331,47,0.763,48,3.178,49,3.763,50,3.763,51,0.852,52,0.903,53,2.559,54,2.559,55,1.392,56,1.889,57,2.484,58,3.136,59,0.304,60,0.285,61,3.763,62,3.763,63,3.763,64,3.763,65,1.186,66,3.136,67,2.154,68,0.2,69,0.076,70,0.994,71,1.018,72,0.719,73,1.888,74,1.689,75,2.559,76,2.559,77,0.528,78,4.464,79,2.559,80,0.57,81,1.295,82,2.559,83,2.559,84,2.154,85,1.689,86,1.888,87,2.559,88,2.559,89,2.559,90,2.559,91,2.559,92,2.559,93,2.559,94,1.53,95,2.154,96,2.559,97,2.559,98,2.559,99,1.398,100,2.559,101,2.559,102,1.429,103,1.285,104,2.559,105,2.559,106,4.922,107,2.154,108,2.154,109,3.763,110,1.888,111,2.154,112,2.559,113,1.53,114,1.888,115,1.689,116,2.559,117,2.559,118,2.559,119,0.66,120,1.392,121,1.205,122,0.946,123,1.82,124,0.946,125,0.946,126,0.66,127,0.946,128,0.946,129,0.66,130,0.946,131,0.71,132,0.946,133,0.71,134,0.946,135,0.66,136,0.946,137,0.66,138,0.946,139,0.66,140,0.946,141,0.71,142,0.819,143,0.946,144,0.66,145,0.946,146,0.71,147,0.946,148,0.946,149,0.946,150,0.01,151,0.015,152,0.01]],["title/modules/AppModule.html",[153,0.984,154,1.974]],["body/modules/AppModule.html",[1,1.669,3,0.254,4,0.254,9,0.22,44,0.028,59,0.446,60,0.361,68,0.254,69,0.097,86,2.388,107,2.725,119,0.835,126,1.53,131,1.645,133,1.645,135,1.53,137,1.53,150,0.013,151,0.018,152,0.013,153,0.965,154,4.058,155,1.113,156,1.625,157,2.552,158,3.039,159,3.039,160,1.5,161,2.725,162,2.725,163,2.725,164,2.725,165,2.725,166,3.545,167,2.976,168,2.976,169,3.545,170,2.66,171,1.935,172,1.935,173,3.236,174,2.061,175,4.448,176,3.745,177,1.935,178,2.061,179,2.725,180,3.236,181,2.725,182,3.236,183,3.236,184,2.725,185,4.448,186,3.236,187,2.725,188,2.725,189,2.725,190,2.136,191,2.725,192,4.448,193,2.136,194,3.236,195,2.136,196,3.236,197,3.236]],["title/classes/AppPage.html",[69,0.099,198,2.436]],["body/classes/AppPage.html",[1,1.428,3,0.355,4,0.355,9,0.308,11,0.934,17,2.473,44,0.028,51,1.056,59,0.308,68,0.355,69,0.179,70,1.232,77,1.142,80,1.008,121,1.771,150,0.019,151,0.023,152,0.019,177,2.707,198,4.082,199,2.988,200,3.812,201,5.532,202,4.527,203,6.493,204,4.527,205,4.527,206,4.527,207,4.527,208,3.812,209,4.527,210,4.527]],["title/modules/AppRoutingModule.html",[153,0.984,166,1.974]],["body/modules/AppRoutingModule.html",[0,0.634,3,0.318,4,0.318,9,0.276,41,0.775,44,0.029,59,0.43,60,0.452,65,1.88,68,0.318,69,0.121,86,2.994,126,1.334,135,1.334,137,1.334,150,0.017,151,0.021,152,0.017,155,1.396,160,1.88,166,3.09,174,1.88,178,2.394,181,3.416,184,3.416,189,3.416,190,2.678,191,3.416,211,4.057,212,3.416,213,4.35,214,3.399,215,3.09,216,3.416,217,2.217,218,5.32,219,4.057,220,4.057,221,5.167,222,5.167,223,3.416,224,4.057,225,2.678,226,4.057,227,4.057,228,4.057,229,4.057,230,4.057]],["title/guards/AuthGuard.html",[231,2.179,232,2.179]],["body/guards/AuthGuard.html",[3,0.259,4,0.259,9,0.225,11,0.931,17,1.805,22,0.582,23,1.668,24,1.136,30,0.682,35,4.161,43,1.058,44,0.028,45,0.682,46,0.985,47,0.985,51,0.861,52,0.792,57,3.644,58,1.975,59,0.393,60,0.368,65,1.53,68,0.259,69,0.099,70,0.736,72,0.981,77,0.682,94,3.072,99,2.464,102,1.767,103,1.658,150,0.014,151,0.018,152,0.014,214,2.698,231,2.978,232,2.978,233,2.437,234,2.781,235,4.511,236,4.073,237,5.52,238,3.328,239,4.865,240,3.303,241,4.865,242,5.022,243,4.865,244,3.303,245,4.511,246,3.798,247,3.301,248,4.511,249,4.073,250,1.491,251,4.511,252,4.511,253,2.764,254,1.795,255,1.795,256,1.417,257,3.157,258,2.437,259,3.303,260,1.805,261,1.975,262,1.315,263,2.437,264,2.437,265,1.164,266,1.164,267,1.164,268,1.164,269,1.252,270,3.328,271,3.328,272,3.303,273,3.303,274,1.222,275,3.303]],["title/components/AuthRedirectComponent.html",[0,0.368,126,0.852]],["body/components/AuthRedirectComponent.html",[0,0.569,1,0.618,2,1.147,3,0.188,4,0.188,5,1.887,6,0.886,7,0.886,8,0.886,9,0.244,11,0.494,14,0.767,15,2.284,16,2.124,18,1.325,20,1.325,22,0.756,23,1.325,24,1.477,26,1.147,30,0.74,32,1.477,35,2.834,38,1.767,41,0.684,44,0.028,45,0.74,48,1.958,51,0.82,52,1.284,55,1.325,59,0.347,60,0.267,65,1.11,68,0.188,69,0.072,70,0.533,72,0.91,77,0.494,80,0.533,81,0.824,94,1.432,110,3.168,111,2.017,113,2.143,114,1.767,115,1.581,119,0.618,120,1.762,121,1.526,122,0.886,123,2.11,124,0.886,125,0.886,126,1.23,127,2.11,128,0.886,129,0.618,130,0.886,131,0.665,132,0.886,133,0.665,134,0.886,135,0.618,136,0.886,137,0.618,138,0.886,139,0.618,140,0.886,141,0.665,142,0.767,143,0.886,144,0.618,145,0.886,146,0.665,147,0.886,148,0.886,149,0.886,150,0.01,151,0.015,152,0.01,190,2.834,208,2.017,217,1.308,225,1.581,247,1.432,257,2.345,258,1.767,262,1.426,263,1.767,276,3.615,277,2.017,278,3.017,279,4.765,280,2.644,281,2.365,282,2.644,283,2.365,284,2.345,285,4.293,286,3.583,287,2.603,288,3.615,289,2.395,290,2.644,291,2.208,292,3.017,293,3.583,294,2.017,295,2.395,296,2.143,297,3.145,298,1.375,299,2.644,300,2.017,301,2.644,302,2.155,303,0.953,304,2.395,305,2.395,306,2.395,307,2.395,308,2.395,309,2.395,310,1.581,311,2.644,312,2.644,313,2.017,314,1.767,315,3.583,316,2.395,317,2.395,318,2.644,319,1.767,320,3.583,321,3.017,322,2.395,323,2.395,324,3.583,325,2.395,326,2.834,327,4.305,328,2.395,329,4.012,330,2.644,331,2.644,332,2.644,333,3.017,334,2.644,335,3.017,336,3.583,337,5.941,338,5.941,339,3.583,340,3.583,341,3.583,342,2.017,343,2.017]],["title/injectables/AuthService.html",[255,1.314,257,1.804]],["body/injectables/AuthService.html",[3,0.23,4,0.23,9,0.2,11,0.858,22,0.517,23,1.536,24,1.804,26,1.33,30,1.083,32,1.429,33,2.484,34,3.065,41,1.001,43,0.94,44,0.028,45,0.606,46,1.438,47,0.875,51,1.097,52,0.997,57,2.742,59,0.377,60,0.327,68,0.23,69,0.088,70,0.653,72,1.128,77,0.858,80,1.168,81,1.009,85,2.742,94,3.765,99,2.865,102,0.94,150,0.012,151,0.017,152,0.012,167,2.086,187,2.471,236,3.065,238,3.065,249,3.87,250,0.757,253,2.917,254,2.287,255,1.653,256,1.259,257,2.27,260,1.603,261,1.755,263,3.065,265,0.757,266,0.757,267,0.757,268,0.757,269,0.814,274,1.085,278,3.498,281,2.742,282,3.065,283,2.742,298,0.94,302,3.278,303,1.168,344,1.937,345,2.471,346,3.065,347,3.065,348,4.823,349,5.244,350,4.154,351,2.934,352,4.154,353,3.498,354,4.154,355,2.934,356,3.498,357,4.154,358,2.086,359,2.086,360,1.536,361,4.154,362,4.154,363,4.154,364,4.975,365,2.165,366,2.43,367,2.934,368,2.934,369,2.934,370,3.498,371,1.755,372,2.934,373,1.009,374,2.934,375,2.934,376,2.934]],["title/modules/CoreModule.html",[153,0.984,167,1.657]],["body/modules/CoreModule.html",[3,0.344,4,0.344,9,0.299,44,0.028,47,1.309,59,0.419,60,0.49,68,0.344,69,0.131,119,1.133,150,0.018,151,0.022,152,0.018,153,1.309,155,1.511,156,2.205,157,2.205,158,2.626,159,2.626,160,2.516,167,3.313,170,3.247,171,2.626,172,2.626,174,2.516,178,2.516,193,2.899,377,3.697,378,3.697,379,3.521,380,4.391,381,5.43,382,3.24,383,4.391,384,5.894,385,3.697,386,3.24,387,3.697,388,4.391,389,3.697,390,4.391]],["title/guards/CurrentUserResolver.html",[215,1.974,231,2.179]],["body/guards/CurrentUserResolver.html",[3,0.269,4,0.269,9,0.233,11,0.956,17,1.875,22,0.605,23,1.712,30,0.708,35,3.056,36,3.898,41,1.177,43,1.099,44,0.028,45,0.708,46,1.023,47,1.023,51,0.884,59,0.398,60,0.383,65,1.59,68,0.269,69,0.103,70,0.764,72,1,77,0.708,80,1.031,99,3.426,102,1.677,103,1.723,150,0.014,151,0.019,152,0.014,215,2.769,225,4.07,233,2.532,241,4.93,242,5.079,243,4.93,247,3.688,250,1.195,253,2.795,254,1.842,255,1.842,256,1.472,261,2.052,262,1.366,265,1.195,266,1.195,267,1.195,268,1.195,269,1.284,270,3.416,271,3.416,290,3.416,303,1.366,346,3.416,358,2.324,360,1.712,391,3.898,392,2.89,393,4.63,394,4.63,395,4.63,396,4.63,397,3.432,398,3.432,399,4.63,400,4.63,401,3.865,402,3.432,403,3.432]],["title/components/DashboardComponent.html",[0,0.368,129,0.852]],["body/components/DashboardComponent.html",[0,0.627,1,0.789,2,1.369,3,0.239,4,0.239,5,1.13,6,1.13,7,1.13,8,1.13,9,0.208,11,0.631,13,2.29,14,0.979,15,2.386,16,2.22,18,1.581,20,1.581,22,0.539,26,1.369,30,0.631,32,1.471,41,0.816,44,0.028,45,0.883,51,0.816,52,0.733,55,1.581,56,2.146,59,0.291,60,0.341,68,0.239,69,0.091,70,0.952,71,1.962,72,0.816,77,0.631,81,1.051,113,1.828,115,2.018,119,0.789,120,1.581,121,1.369,122,1.13,123,1.975,124,1.13,125,1.13,126,0.789,127,1.13,128,1.13,129,1.378,130,1.13,131,0.848,132,1.13,133,0.848,134,1.13,135,0.789,136,1.13,137,0.789,138,1.13,139,0.789,140,1.13,141,0.848,142,0.979,143,1.13,144,0.789,145,1.13,146,0.848,147,1.13,148,1.13,149,1.13,150,0.013,151,0.018,152,0.013,250,1.103,262,1.701,265,1.103,266,1.103,267,1.103,268,0.789,269,1.368,284,2.694,287,1.67,291,2.285,298,1.369,310,3.525,319,2.255,358,2.681,360,1.581,373,1.696,404,2.573,405,3.6,406,3.155,407,4.275,408,3.6,409,3.6,410,4.275,411,3.155,412,3.6,413,4.275,414,4.275,415,3.482,416,4.931,417,4.275,418,4.931,419,3.057,420,3.057,421,5.34,422,3.6,423,1.67,424,2.018,425,3.057,426,1.416,427,1.828,428,1.828,429,3.057,430,3.057,431,3.057]],["title/modules/DataModule.html",[153,0.984,432,2.436]],["body/modules/DataModule.html",[3,0.38,4,0.38,9,0.33,44,0.028,59,0.392,60,0.541,68,0.38,69,0.145,150,0.02,151,0.024,152,0.02,155,1.669,157,2.436,174,2.248,178,2.672,250,1.252,265,1.252,266,1.252,267,1.252,268,1.252,269,1.346,432,4.256,433,4.851,434,3.807,435,3.202,436,4.085,437,4.085]],["title/components/FooterComponent.html",[0,0.368,131,0.916]],["body/components/FooterComponent.html",[0,0.662,1,0.922,2,1.522,3,0.28,4,0.28,5,1.321,6,1.321,7,1.321,8,1.321,9,0.243,11,0.737,13,2.039,14,1.144,15,2.443,16,2.273,18,1.758,20,1.758,41,0.908,44,0.028,45,0.981,52,0.857,59,0.243,60,0.398,68,0.28,69,0.107,70,1.059,72,0.682,81,1.229,119,0.922,120,1.758,121,1.522,122,1.321,123,2.107,124,1.321,125,1.321,126,0.922,127,1.321,128,1.321,129,0.922,130,1.321,131,1.581,132,1.321,133,0.991,134,1.321,135,0.922,136,1.321,137,0.922,138,1.321,139,0.922,140,1.321,141,0.991,142,1.144,143,1.321,144,0.922,145,1.321,146,0.991,147,1.321,148,1.321,149,1.321,150,0.015,151,0.019,152,0.015,250,1.227,262,1.892,265,1.227,266,1.227,267,1.227,268,0.922,269,1.483,284,2.92,287,1.951,298,1.522,360,1.758,373,1.839,426,1.655,427,2.136,428,2.136,438,3.007,439,5.699,440,3.508,441,5.345,442,4.755]],["title/components/HeaderComponent.html",[0,0.368,133,0.916]],["body/components/HeaderComponent.html",[0,0.675,1,0.628,2,1.16,3,0.19,4,0.19,5,0.899,6,0.899,7,0.899,8,0.899,9,0.165,11,0.748,13,1.554,14,0.779,15,2.29,16,2.183,18,1.34,20,1.34,22,0.428,24,1.247,26,1.16,30,0.991,32,1.247,41,1.261,43,0.779,44,0.028,45,0.894,46,0.725,47,0.725,51,0.98,52,0.583,55,1.775,56,2.41,59,0.247,60,0.271,68,0.19,69,0.073,70,0.807,71,1.724,72,0.827,74,2.392,77,0.748,80,0.807,81,0.836,102,0.779,113,1.454,115,2.392,119,0.628,120,1.34,121,1.16,122,0.899,123,1.775,124,0.899,125,0.899,126,0.628,127,0.899,128,0.899,129,0.628,130,0.899,131,0.675,132,0.899,133,1.332,134,0.899,135,0.628,136,0.899,137,0.628,138,0.899,139,0.628,140,0.899,141,0.675,142,0.779,143,0.899,144,0.628,145,0.899,146,0.675,147,0.899,148,0.899,149,0.899,150,0.01,151,0.015,152,0.01,195,1.605,238,2.674,250,0.628,265,0.628,266,0.628,267,0.628,268,0.628,269,0.675,274,1.991,291,2.379,298,1.537,303,0.968,310,2.392,319,2.674,326,1.605,327,2.674,332,1.794,334,2.674,358,1.819,359,2.175,360,1.775,366,1.127,373,0.836,415,2.167,437,3.647,440,2.674,443,2.047,444,3.542,445,2.392,446,2.674,447,2.674,448,4.332,449,3.624,450,2.674,451,4.332,452,3.624,453,3.196,454,3.196,455,3.647,456,3.196,457,1.794,458,2.432,459,2.047,460,3.051,461,2.432,462,2.432,463,3.647,464,1.605,465,3.647,466,3.624,467,3.624,468,1.794,469,2.674,470,2.047,471,3.051,472,2.047,473,1.328,474,2.047,475,1.605,476,1.605,477,1.794,478,1.794,479,1.794,480,2.432,481,3.624,482,2.432,483,3.051,484,3.051,485,2.432,486,3.051,487,3.624,488,2.674,489,3.624,490,3.624,491,2.047,492,2.047,493,1.605,494,4.332,495,3.624,496,3.624,497,2.432,498,2.432,499,2.432]],["title/modules/HomeModule.html",[153,0.984,500,2.179]],["body/modules/HomeModule.html",[3,0.314,4,0.314,9,0.273,44,0.028,59,0.436,60,0.447,68,0.314,69,0.12,119,1.035,129,1.626,139,1.626,144,1.626,150,0.016,151,0.021,152,0.016,153,1.196,155,1.38,156,2.014,157,2.839,158,2.399,159,2.399,160,1.858,168,3.163,170,3.067,171,2.399,172,2.399,174,2.376,178,2.376,179,3.377,188,3.377,434,3.386,435,2.648,500,4.448,501,3.377,502,3.377,503,3.377,504,3.441,505,4.011,506,4.011,507,4.011,508,4.011,509,4.011,510,2.648,511,3.377]],["title/modules/HomeRoutingModule.html",[153,0.984,504,1.804]],["body/modules/HomeRoutingModule.html",[0,0.642,3,0.326,4,0.326,9,0.283,41,0.795,44,0.028,59,0.439,60,0.464,65,1.929,68,0.326,69,0.124,73,3.072,129,1.355,139,1.355,144,1.355,150,0.017,151,0.022,152,0.017,155,1.432,160,1.929,174,1.929,178,2.433,212,3.505,213,4.421,214,3.44,215,3.14,216,3.505,217,2.274,218,4.844,225,2.748,232,3.988,239,4.844,310,2.748,415,2.489,488,3.875,504,2.869,510,2.748,511,3.505,512,4.163,513,4.163,514,4.163,515,4.163,516,4.163,517,3.072,518,4.163]],["title/components/LayoutComponent.html",[0,0.368,135,0.852]],["body/components/LayoutComponent.html",[0,0.673,1,0.707,2,1.266,3,0.214,4,0.214,5,1.012,6,1.012,7,1.012,8,1.012,9,0.186,11,0.565,13,1.696,14,0.877,15,2.342,16,2.178,18,1.462,20,1.462,22,0.482,26,1.266,30,0.816,32,1.748,41,1.171,44,0.028,45,0.816,51,0.97,52,0.657,55,1.879,56,2.551,59,0.367,60,0.305,65,1.269,68,0.214,69,0.082,70,0.88,72,0.886,77,0.816,80,0.88,99,2.944,103,1.375,119,0.707,120,1.462,121,1.266,122,1.012,123,1.879,124,1.012,125,1.012,126,0.707,127,1.012,128,1.012,129,0.707,130,1.012,131,0.76,132,1.012,133,1.41,134,1.012,135,1.312,136,1.012,137,0.707,138,1.012,139,0.707,140,1.012,141,0.76,142,0.877,143,1.012,144,0.707,145,1.012,146,0.76,147,1.012,148,1.012,149,1.012,150,0.011,151,0.016,152,0.011,247,1.637,250,1.02,253,2.798,254,1.573,256,1.174,260,1.496,262,1.573,265,1.02,266,1.02,267,1.02,268,0.707,269,1.287,284,2.535,287,1.496,291,2.602,298,1.266,299,2.917,301,2.917,303,1.09,360,1.462,371,1.637,373,1.596,426,1.269,427,1.637,428,1.637,440,3.75,444,2.02,445,3.354,457,2.02,517,2.917,519,2.305,520,4.279,521,3.954,522,2.61,523,5.082,524,3.954,525,3.954,526,4.64,527,3.954,528,2.738,529,2.738,530,2.738,531,3.954,532,3.954,533,3.954,534,2.738,535,2.738,536,2.305,537,2.738,538,2.738,539,2.738,540,2.738,541,2.305,542,2.738]],["title/components/LoginComponent.html",[0,0.368,137,0.852]],["body/components/LoginComponent.html",[0,0.602,1,0.71,2,1.27,3,0.215,4,0.215,5,1.721,6,1.017,7,1.017,8,1.017,9,0.187,11,0.568,13,2.184,14,0.881,15,2.344,16,2.212,18,1.467,20,1.467,22,0.485,26,1.27,30,0.819,32,1.857,41,0.757,44,0.028,45,0.819,48,2.167,51,0.972,52,1.116,55,1.883,56,1.992,59,0.316,60,0.307,68,0.215,69,0.082,70,0.613,71,1.851,72,0.757,74,2.619,77,0.819,80,0.613,81,0.946,110,2.03,113,1.645,114,2.03,119,0.71,120,1.883,121,1.631,122,1.017,123,2.08,124,1.017,125,1.017,126,0.71,127,1.017,128,1.017,129,0.71,130,1.017,131,0.763,132,1.017,133,0.763,134,1.017,135,0.71,136,1.017,137,1.314,138,1.017,139,0.71,140,1.017,141,0.763,142,0.881,143,1.017,144,0.71,145,1.017,146,0.763,147,1.017,148,1.017,149,1.017,150,0.011,151,0.016,152,0.011,223,4.546,250,0.71,265,0.71,266,0.71,267,0.71,268,0.71,269,0.763,281,3.564,282,3.433,283,3.071,288,3.917,291,2.156,294,2.316,296,2.372,297,3.362,298,1.631,299,2.927,300,2.316,311,2.927,312,2.927,313,2.316,314,2.03,326,1.816,327,3.758,329,3.34,330,2.927,331,2.927,332,2.03,333,2.316,334,2.03,342,2.316,343,2.316,358,2.911,360,1.467,373,0.946,405,3.34,406,2.927,408,3.34,422,3.34,423,1.503,424,1.816,493,2.619,543,2.316,544,3.967,545,3.967,546,3.967,547,3.967,548,4.653,549,3.967,550,4.653,551,2.751,552,2.751,553,2.751,554,2.751,555,3.967,556,3.967,557,2.751,558,2.751]],["title/pipes/SafeResourceUrlPipe.html",[559,1.974,560,1.974]],["body/pipes/SafeResourceUrlPipe.html",[3,0.308,4,0.308,9,0.267,11,1.045,14,1.258,23,1.453,30,0.811,43,1.258,44,0.028,45,1.156,46,1.172,47,1.172,51,0.967,59,0.344,60,0.438,68,0.308,69,0.118,71,2.354,72,0.967,77,0.811,80,0.875,102,1.258,103,1.973,150,0.016,151,0.021,152,0.016,176,3.309,177,2.35,262,1.564,291,2.903,559,3.537,560,3.027,561,3.93,562,4.262,563,5.539,564,3.309,565,5.063,566,6.266,567,4.98,568,5.063,569,6.266,570,3.309,571,5.063,572,3.93,573,5.063,574,3.93,575,5.063,576,5.063,577,5.063,578,5.063,579,5.063,580,3.93,581,3.93,582,3.93]],["title/components/ServerComponent.html",[0,0.368,139,0.852]],["body/components/ServerComponent.html",[0,0.581,1,0.876,2,1.471,3,0.266,4,0.266,5,1.255,6,1.255,7,1.255,8,1.255,9,0.231,14,1.086,15,2.425,16,2.256,18,1.699,20,1.699,22,0.598,23,1.699,30,0.948,41,0.877,44,0.028,45,0.948,51,0.648,52,1.102,59,0.231,60,0.378,68,0.266,69,0.101,72,0.994,81,1.792,119,0.876,120,1.699,121,1.471,122,1.255,123,2.064,124,1.255,125,1.255,126,0.876,127,1.255,128,1.255,129,0.876,130,1.255,131,0.941,132,1.255,133,0.941,134,1.255,135,0.876,136,1.255,137,0.876,138,1.255,139,1.441,140,1.255,141,0.941,142,1.086,143,1.255,144,0.876,145,1.255,146,0.941,147,1.255,148,1.255,149,1.255,150,0.014,151,0.019,152,0.014,250,1.186,262,1.828,265,1.186,266,1.186,267,1.186,268,0.876,269,1.445,284,2.845,287,3.049,298,1.471,373,1.792,415,3.595,426,1.572,427,2.029,428,2.029,583,2.856,584,5.208,585,4.593,586,3.392,587,3.392,588,3.867,589,4.699,590,5.581,591,4.593,592,5.581,593,4.593,594,4.593,595,4.593]],["title/modules/SharedModule.html",[153,0.984,168,1.657]],["body/modules/SharedModule.html",[3,0.293,4,0.293,9,0.254,44,0.028,59,0.428,60,0.417,68,0.293,69,0.112,119,0.965,141,1.835,146,1.835,150,0.015,151,0.02,152,0.015,153,1.114,155,1.286,156,1.877,157,2.745,158,2.236,159,2.236,160,2.533,168,3.379,170,2.93,171,2.236,172,2.236,174,2.27,178,2.27,379,3.613,385,3.148,386,2.758,387,3.148,434,3.235,435,2.468,560,3.955,596,3.148,597,3.148,598,3.738,599,3.148,600,3.738,601,5.467,602,3.738,603,3.738,604,4.9]],["title/components/ThemeChooserComponent.html",[0,0.368,141,0.916]],["body/components/ThemeChooserComponent.html",[0,0.668,1,0.564,2,1.071,3,0.171,4,0.171,5,1.502,6,0.809,7,0.809,8,0.809,9,0.149,11,0.838,14,0.7,15,2.241,16,2.085,18,1.237,20,1.237,22,0.385,24,1.565,26,1.071,30,1.067,32,1.151,41,0.987,43,1.071,44,0.028,45,0.939,46,1.541,47,0.997,48,2.219,51,0.936,52,0.802,55,1.682,59,0.228,60,0.244,68,0.171,69,0.065,70,0.745,72,0.869,77,0.939,80,1.013,81,1.151,102,1.071,119,0.564,120,1.682,121,1.071,122,0.809,123,1.682,124,0.809,125,0.809,126,0.564,127,0.809,128,0.809,129,0.564,130,0.809,131,0.607,132,0.809,133,0.607,134,0.809,135,0.564,136,0.809,137,0.564,138,0.809,139,0.564,140,0.809,141,1.434,142,2.173,143,0.809,144,0.564,145,0.809,146,0.607,147,0.809,148,0.809,149,0.809,150,0.009,151,0.014,152,0.009,195,1.443,250,1.174,254,0.87,265,1.174,266,1.174,267,1.174,268,1.174,269,1.262,274,1.912,296,2,298,0.7,303,0.87,366,1.55,373,0.752,436,3.42,445,2.208,446,2.468,447,2.468,450,2.468,453,3.618,454,2.997,456,2.997,468,1.614,469,2.468,473,1.827,475,1.443,476,1.443,477,1.614,478,1.614,520,3.831,605,4.53,606,4.53,607,1.841,608,3.345,609,3.345,610,3.345,611,2.468,612,3.345,613,3.345,614,4.062,615,3.345,616,3.345,617,4.903,618,4.062,619,3.345,620,3.345,621,4.062,622,3.42,623,4.903,624,2.187,625,3.345,626,3.345,627,4.062,628,3.42,629,2.187,630,2.187,631,3.345,632,2.816,633,1.614,634,2.187,635,3.345,636,2.816,637,3.345,638,1.841,639,3.345,640,2.187,641,2.187,642,3.345,643,3.345,644,2.816,645,3.345,646,3.345,647,2.187,648,2.187,649,3.345,650,2.816,651,3.345,652,1.841,653,2.187,654,2.187,655,2.187]],["title/injectables/ThemeService.html",[66,1.974,255,1.314]],["body/injectables/ThemeService.html",[3,0.205,4,0.205,9,0.178,11,0.79,13,1.642,17,1.431,22,0.462,23,1.416,24,2.116,26,1.226,30,1.142,32,1.317,33,2.977,43,1.226,44,0.028,45,0.79,46,1.649,47,1.141,51,0.95,52,1.194,55,1.416,58,2.977,59,0.308,60,0.292,66,2.29,68,0.205,69,0.078,72,0.95,77,0.541,80,1.179,81,1.557,102,1.226,142,2.131,150,0.011,151,0.016,152,0.011,177,2.29,253,2.453,254,1.524,255,1.524,256,1.124,261,1.567,274,0.969,296,2.29,303,1.043,344,1.729,346,2.825,347,2.825,356,3.224,359,1.315,360,1.416,364,4.458,365,1.933,366,1.214,426,1.774,463,2.206,464,2.527,522,1.729,611,2.825,628,4.809,633,1.933,644,3.224,656,2.206,657,3.829,658,3.224,659,3.829,660,4.525,661,2.62,662,3.81,663,3.829,664,4.977,665,3.829,666,5.531,667,4.525,668,4.525,669,3.829,670,3.829,671,3.829,672,3.829,673,3.829,674,3.829,675,2.62,676,3.829,677,3.829,678,5.712,679,3.829,680,2.62,681,3.829,682,4.656,683,4.977,684,5.712,685,4.525,686,3.829,687,2.62,688,2.62,689,2.62,690,2.62,691,2.62,692,2.62,693,2.62,694,2.62,695,2.62,696,2.62,697,2.62,698,2.62,699,2.206,700,2.62,701,2.62,702,2.206,703,2.62,704,2.62,705,2.62,706,2.62,707,2.62,708,2.62,709,2.62,710,2.62,711,2.62,712,2.62,713,2.62]],["title/interceptors/TokenInterceptor.html",[169,1.974,714,2.436]],["body/interceptors/TokenInterceptor.html",[3,0.259,4,0.353,9,0.225,11,0.931,22,0.582,23,1.668,30,0.682,33,2.698,43,1.058,44,0.028,45,0.682,46,0.985,47,0.985,48,3.016,51,0.861,59,0.406,60,0.368,68,0.259,69,0.099,70,0.736,71,1.315,72,0.981,77,0.682,80,0.736,102,1.444,103,1.658,150,0.014,151,0.018,152,0.014,169,2.698,193,2.18,217,1.805,250,1.576,253,2.764,254,1.795,255,1.795,256,1.417,257,2.806,258,2.437,260,1.805,262,1.315,264,2.437,265,0.853,266,0.853,267,0.853,268,0.853,269,0.916,298,1.058,302,2.579,303,1.315,360,1.668,371,1.975,373,1.136,444,4.073,714,4.073,715,3.303,716,2.781,717,4.511,718,5.52,719,5.965,720,5.52,721,5.137,722,3.303,723,5.965,724,5.779,725,3.303,726,4.511,727,6.105,728,4.511,729,4.511,730,4.511,731,3.303,732,5.137,733,4.511,734,3.303,735,3.303,736,3.303,737,3.303,738,3.303,739,3.303,740,3.303,741,3.303,742,2.781,743,3.303,744,3.303,745,3.303,746,3.303,747,3.303]],["title/classes/TokenWrapper.html",[69,0.099,302,1.657]],["body/classes/TokenWrapper.html",[3,0.158,4,0.158,9,0.137,11,0.65,22,0.555,23,1.164,24,1.86,26,1.008,30,1.172,32,1.501,33,1.882,34,2.322,43,1.514,44,0.029,45,0.976,46,1.752,47,1.41,51,1.173,52,1.047,57,2.078,58,2.312,59,0.137,68,0.158,69,0.094,70,0.972,71,2.596,72,1.122,77,1.079,80,0.701,94,3.562,102,0.647,150,0.008,151,0.013,152,0.008,199,1.334,217,2.583,236,3.858,249,3.22,250,1.126,254,1.253,264,1.491,265,1.126,266,1.126,267,1.126,268,1.126,274,2,280,2.322,283,1.334,291,2.022,292,4.217,302,2.715,347,1.491,353,2.65,359,2.191,366,1.458,370,2.65,473,2.384,475,2.88,541,4.217,567,2.65,570,3.255,658,1.702,742,3.255,748,1.702,749,3.147,750,3.147,751,4.363,752,4.363,753,3.866,754,3.147,755,4.363,756,3.866,757,3.866,758,4.729,759,3.147,760,2.021,761,3.147,762,3.147,763,3.147,764,2.021,765,2.021,766,2.021,767,2.021,768,2.021,769,2.021,770,2.021,771,2.021,772,2.021,773,2.021,774,2.021,775,4.363,776,5.68,777,2.021,778,2.021,779,2.021,780,2.021,781,3.147,782,2.021,783,2.021,784,1.702,785,3.866,786,1.491,787,2.021,788,2.021,789,4.363,790,3.866,791,4.363,792,3.866,793,3.866,794,4.363,795,3.866,796,3.147,797,2.021,798,3.866,799,3.147,800,2.021,801,2.65,802,3.147,803,2.021,804,2.021,805,3.866,806,3.147,807,2.021,808,2.021,809,2.021,810,2.65,811,2.021,812,2.021,813,3.147,814,2.021,815,2.021,816,2.021,817,3.147,818,2.021,819,2.021,820,2.021,821,2.021,822,2.021,823,2.021,824,3.147,825,2.021,826,2.021,827,2.021,828,2.021]],["title/classes/User.html",[41,0.63,69,0.099]],["body/classes/User.html",[3,0.105,4,0.105,9,0.091,11,0.276,13,0.964,22,0.235,24,2.097,26,0.72,30,1.283,32,1.175,38,0.985,41,1.116,43,1.708,44,0.029,45,1.121,46,1.836,47,1.59,51,1.234,52,1.28,55,1.263,58,3.746,59,0.091,68,0.105,69,0.04,70,1.188,71,2.62,72,1.187,77,1.139,80,1.188,150,0.005,151,0.009,152,0.005,199,0.882,246,3.886,274,2.255,280,1.659,281,1.484,291,1.349,296,2.043,358,2.075,359,2.075,423,0.73,424,0.882,464,3.277,465,3.886,473,2.915,479,3.663,484,1.893,486,4.179,522,1.922,650,1.124,699,1.893,801,5.073,810,3.21,829,1.124,830,1.335,831,4.395,832,2.912,833,2.912,834,4.395,835,2.912,836,2.912,837,3.813,838,3.701,839,4.395,840,2.912,841,2.912,842,2.912,843,2.912,844,1.335,845,1.335,846,1.335,847,1.335,848,1.335,849,1.335,850,3.813,851,2.249,852,1.335,853,1.335,854,1.335,855,1.335,856,2.249,857,2.249,858,2.249,859,1.335,860,1.335,861,1.335,862,1.335,863,1.335,864,1.335,865,1.335,866,1.335,867,1.335,868,2.249,869,1.335,870,1.335,871,1.335,872,1.335,873,2.249,874,2.249,875,2.249,876,2.249,877,1.335,878,1.335,879,1.335,880,1.335,881,2.249,882,2.249,883,1.335,884,1.335,885,1.335,886,1.335,887,2.249,888,2.249,889,1.335,890,1.335,891,1.335,892,1.335,893,1.335,894,1.335,895,1.335,896,1.335,897,1.335,898,1.335,899,1.335,900,1.335,901,1.335,902,1.335,903,1.335,904,1.335,905,2.249,906,1.335,907,1.335,908,1.335,909,1.335,910,1.335,911,1.335,912,1.335,913,1.335,914,1.335,915,1.335,916,1.335,917,2.249,918,1.335,919,3.417,920,1.335,921,2.249,922,1.335,923,1.335,924,2.249,925,1.335,926,1.335,927,2.249,928,1.335,929,1.335,930,1.335,931,1.335,932,1.335,933,2.249,934,1.335,935,1.335,936,2.249,937,1.335,938,1.335,939,2.249,940,1.335,941,1.335,942,2.249,943,1.335,944,1.335,945,2.249,946,1.335,947,1.335,948,2.249,949,1.335,950,1.335,951,2.249,952,1.335,953,1.335,954,2.249,955,2.249,956,1.335,957,1.335,958,1.335,959,1.335,960,1.335,961,2.249,962,1.335,963,1.335,964,2.249,965,1.335,966,1.335,967,1.335,968,1.335,969,1.335]],["title/modules/UserInterfaceModule.html",[153,0.984,379,1.804]],["body/modules/UserInterfaceModule.html",[0,0.619,3,0.356,4,0.356,9,0.31,11,0.939,13,2.38,44,0.028,59,0.407,60,0.507,68,0.356,69,0.136,80,1.013,150,0.019,151,0.023,152,0.019,153,1.654,155,1.565,157,2.285,160,2.108,168,2.786,174,2.108,178,2.571,379,3.032,386,3.358,434,3.663,435,3.004,636,4.672,970,4.55,971,4.55,972,5.549,973,5.549,974,5.549,975,5.549,976,5.988,977,4.55]],["title/components/UserPreferencesComponent.html",[0,0.368,144,0.852]],["body/components/UserPreferencesComponent.html",[0,0.529,1,0.734,2,1.301,3,0.223,4,0.223,5,1.052,6,1.052,7,1.052,8,1.052,9,0.193,14,0.911,15,2.357,16,2.193,18,1.503,20,1.503,22,0.501,24,1.398,26,1.301,30,0.978,41,1.164,43,0.911,44,0.028,45,0.978,47,0.848,51,0.905,52,0.975,55,1.503,56,2.04,59,0.387,60,0.317,65,1.318,66,3.271,67,2.395,68,0.223,69,0.085,70,0.905,71,1.132,72,0.987,73,4.418,77,0.839,80,0.633,81,0.978,102,1.301,119,0.734,120,1.503,121,1.301,122,1.052,123,1.912,124,1.052,125,1.052,126,0.734,127,1.052,128,1.052,129,0.734,130,1.052,131,0.789,132,1.052,133,0.789,134,1.052,135,0.734,136,1.052,137,0.734,138,1.052,139,0.734,140,1.052,141,0.789,142,1.917,143,1.052,144,1.335,145,1.052,146,0.789,147,1.052,148,1.052,149,1.052,150,0.012,151,0.017,152,0.012,247,2.43,250,1.049,253,2.636,254,1.132,256,1.22,260,1.554,262,1.617,265,1.049,266,1.049,267,1.049,268,0.734,269,1.315,274,1.052,284,2.59,287,1.554,298,1.301,301,3.498,371,1.701,373,1.631,406,3.498,426,1.318,427,1.701,428,1.701,473,1.554,488,2.998,504,2.22,510,3.414,517,2.998,536,2.395,633,2.099,638,2.395,652,2.395,978,4.354,979,2.395,980,4.74,981,4.063,982,2.844,983,2.844,984,2.844,985,2.844,986,2.844,987,2.844,988,2.844,989,2.844,990,4.063]],["title/components/UserProfileComponent.html",[0,0.368,146,0.916]],["body/components/UserProfileComponent.html",[0,0.677,1,0.72,2,1.283,3,0.219,4,0.219,5,1.032,6,1.032,7,1.032,8,1.032,9,0.19,11,0.576,14,0.893,15,2.35,16,2.186,18,1.482,20,1.482,22,0.492,24,1.379,26,1.283,30,1.058,41,1.293,43,0.893,44,0.028,45,0.968,46,0.832,47,0.832,51,0.895,52,0.669,55,1.482,56,2.012,59,0.273,60,0.311,68,0.219,69,0.083,70,0.621,72,0.765,77,0.576,80,0.621,81,1.613,102,0.893,119,0.72,120,1.482,121,1.283,122,1.032,123,1.896,124,1.032,125,1.032,126,0.72,127,1.032,128,1.032,129,0.72,130,1.032,131,0.774,132,1.032,133,0.774,134,1.032,135,0.72,136,1.032,137,0.72,138,1.032,139,0.72,140,1.032,141,0.774,142,0.893,143,1.032,144,0.72,145,1.032,146,1.422,147,1.734,148,1.032,149,1.032,150,0.011,151,0.016,152,0.011,195,1.842,250,0.72,265,0.72,266,0.72,267,0.72,268,0.72,269,0.774,274,2.09,298,0.893,303,1.11,326,1.842,359,2.355,360,1.482,366,1.293,373,0.96,446,2.957,447,2.957,450,2.957,453,3.46,454,3.46,455,3.949,456,3.46,457,2.059,459,2.349,460,3.374,468,2.059,469,2.957,470,2.349,471,3.374,472,2.349,473,1.524,474,2.349,475,1.842,476,1.842,477,2.059,478,2.059,491,2.349,492,2.349,493,1.842,838,3.374,991,4.571,992,4.571,993,2.349,994,4.69,995,4.008,996,2.79,997,4.008,998,2.79,999,4.008,1000,4.008,1001,4.008,1002,2.79,1003,2.79]],["title/injectables/UserService.html",[255,1.314,401,2.179]],["body/injectables/UserService.html",[3,0.299,4,0.299,9,0.259,17,2.082,22,0.672,23,1.835,24,1.311,30,0.787,41,1.157,44,0.028,51,0.948,59,0.43,60,0.425,68,0.299,69,0.148,70,0.849,72,1.054,77,0.787,80,0.849,99,3.194,102,1.22,103,1.913,150,0.016,151,0.02,152,0.016,193,2.516,250,0.984,253,2.879,254,1.975,255,1.975,256,1.635,260,2.082,261,2.279,265,0.984,266,0.984,267,0.984,268,0.984,269,1.057,270,2.812,271,2.812,290,3.662,303,1.517,344,2.516,358,2.491,371,2.279,373,1.707,401,3.276,412,4.178,423,2.082,424,2.516,464,2.516,479,2.812,559,2.279,784,3.209,786,2.812,1004,3.209,1005,5.846,1006,3.811,1007,5.518,1008,3.811,1009,3.811,1010,4.963,1011,3.811,1012,3.811,1013,3.811,1014,3.811,1015,3.811,1016,3.811]],["title/coverage.html",[1017,3.797]],["body/coverage.html",[0,0.725,1,0.9,9,0.237,10,2.936,41,0.666,44,0.028,46,1.039,66,2.085,69,0.158,126,0.9,129,0.9,131,0.967,133,0.967,135,0.9,137,0.9,139,0.9,141,0.967,144,0.9,146,0.967,150,0.014,151,0.019,152,0.014,169,2.085,190,2.301,198,2.573,200,2.936,215,2.085,231,3.089,232,2.301,234,2.936,255,2.102,257,1.905,276,2.936,277,2.936,297,2.301,302,1.75,318,4.344,335,5.676,345,2.936,366,1.615,382,2.573,391,2.936,392,2.936,401,2.301,404,2.936,423,1.905,438,2.936,443,2.936,493,2.301,510,2.301,519,2.936,543,2.936,559,2.085,560,2.085,562,2.936,563,2.936,564,2.936,583,2.936,605,2.936,606,2.936,607,2.936,622,4.956,656,2.936,714,2.573,716,2.936,748,2.936,829,2.936,978,2.936,979,2.936,991,2.936,992,2.936,993,2.936,1004,2.936,1017,2.936,1018,2.936,1019,3.487,1020,3.487,1021,6.374,1022,6.061,1023,2.936,1024,2.936,1025,3.487,1026,2.936,1027,2.936,1028,2.936,1029,5.644,1030,2.936,1031,2.936,1032,4.679,1033,3.487,1034,3.487,1035,3.487,1036,3.487,1037,3.487,1038,2.936,1039,3.487,1040,3.487]],["title/dependencies.html",[156,1.994,1041,2.755]],["body/dependencies.html",[14,1.597,44,0.028,69,0.149,150,0.02,151,0.024,152,0.02,156,2.505,256,2.14,786,3.681,1042,4.989,1043,4.989,1044,4.989,1045,4.989,1046,4.989,1047,4.989,1048,4.989,1049,4.989,1050,4.989,1051,4.989,1052,4.989,1053,4.989,1054,4.989]],["title/miscellaneous/enumerations.html",[1055,1.819,1056,3.344]],["body/miscellaneous/enumerations.html",[22,0.905,44,0.027,142,1.909,150,0.021,151,0.024,152,0.021,274,2.205,682,5.021,702,5.021,1055,3.389,1056,4.323,1057,5.135,1058,5.135]],["title/index.html",[22,0.486,1059,2.32,1060,2.32]],["body/index.html",[2,1.76,16,1.541,44,0.023,74,2.958,84,4.629,85,2.958,150,0.018,151,0.023,152,0.018,409,3.773,415,2.68,426,2.755,445,2.958,522,4.093,588,3.773,589,3.773,662,5.221,1059,3.773,1060,4.629,1061,5.497,1062,5.947,1063,4.481,1064,4.481,1065,4.481,1066,4.481,1067,4.481,1068,4.481,1069,4.481,1070,4.481,1071,4.481,1072,4.481,1073,4.481,1074,4.481,1075,5.497,1076,4.481,1077,4.481,1078,4.481,1079,4.481,1080,4.481,1081,4.481,1082,4.481,1083,4.481,1084,4.481,1085,5.497,1086,4.481,1087,4.481,1088,4.481,1089,4.481,1090,4.481,1091,4.481,1092,4.481,1093,4.481,1094,4.481]],["title/modules.html",[155,1.551]],["body/modules.html",[44,0.024,150,0.02,151,0.024,152,0.02,154,2.885,155,1.66,166,2.885,167,2.422,168,2.422,177,3.802,379,2.636,432,3.56,500,3.185,504,2.636,632,5.353,1095,6.358,1096,6.358,1097,6.713,1098,6.358]],["title/overview.html",[411,3.327]],["body/overview.html",[1,1.589,2,1.093,44,0.028,119,0.881,126,1.348,129,1.348,131,1.449,133,1.449,135,1.348,137,1.348,139,1.348,141,1.708,144,1.348,146,1.708,150,0.014,151,0.019,152,0.014,153,1.017,154,4.061,155,1.174,156,1.713,157,1.713,158,2.041,159,2.041,160,1.581,161,2.873,162,2.873,163,2.873,164,2.873,165,2.873,166,3.124,167,2.934,168,3.343,169,3.124,170,2.758,171,2.041,172,2.041,199,2.252,233,2.518,318,2.518,321,2.873,344,2.252,377,2.873,378,2.873,379,3.421,411,2.518,483,2.873,500,4.305,501,2.873,502,2.873,503,2.873,504,2.854,559,2.041,560,3.682,596,2.873,597,2.873,599,2.873,1099,3.412,1100,3.412,1101,4.611]],["title/routes.html",[214,2.697]],["body/routes.html",[44,0.025,150,0.022,151,0.025,152,0.022,214,3.201]],["title/miscellaneous/variables.html",[1055,1.819,1102,3.344]],["body/miscellaneous/variables.html",[22,0.65,32,1.672,41,0.928,44,0.028,46,1.721,48,2.655,52,1.166,59,0.251,71,1.469,85,2.437,95,3.108,108,3.108,121,1.182,150,0.015,151,0.02,152,0.015,154,2.207,155,1.27,167,2.44,217,2.655,274,2.219,297,3.208,298,1.556,302,2.44,311,3.586,312,2.724,314,3.586,330,2.724,331,2.724,359,1.853,360,1.365,365,4.427,366,2.517,382,3.586,389,4.092,423,2.655,426,1.71,476,2.437,611,2.724,1018,3.108,1023,3.108,1024,4.092,1026,3.108,1027,3.108,1028,4.092,1030,3.108,1031,4.092,1038,3.108,1055,2.437,1102,3.108,1103,3.691,1104,3.691,1105,3.691,1106,3.691,1107,3.691,1108,3.691,1109,3.691,1110,4.86,1111,3.691,1112,4.86,1113,3.691,1114,4.86,1115,3.691,1116,3.691,1117,3.691,1118,3.691,1119,3.691,1120,3.691,1121,3.691,1122,3.691,1123,3.691,1124,3.691,1125,3.691,1126,3.691,1127,5.433,1128,3.691,1129,3.691,1130,3.691,1131,3.691,1132,3.691,1133,3.691,1134,3.691,1135,3.691,1136,3.691]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1.13",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":321,"title":{},"body":{"components/AuthRedirectComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":335,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["100vw",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1100,"title":{},"body":{"overview.html":{}}}],["11px",{"_index":496,"title":{},"body":{"components/HeaderComponent.html":{}}}],["150",{"_index":334,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["16",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":483,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["2nd",{"_index":1088,"title":{},"body":{"index.html":{}}}],["3",{"_index":1101,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["36px",{"_index":494,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":856,"title":{},"body":{"classes/User.html":{}}}],["4/4",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":493,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["500px",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6.6.3",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1099,"title":{},"body":{"overview.html":{}}}],["9",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_avatar",{"_index":929,"title":{},"body":{"classes/User.html":{}}}],["_bot",{"_index":935,"title":{},"body":{"classes/User.html":{}}}],["_discriminator",{"_index":926,"title":{},"body":{"classes/User.html":{}}}],["_email",{"_index":950,"title":{},"body":{"classes/User.html":{}}}],["_flags",{"_index":953,"title":{},"body":{"classes/User.html":{}}}],["_id",{"_index":920,"title":{},"body":{"classes/User.html":{}}}],["_loading",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["_locale",{"_index":944,"title":{},"body":{"classes/User.html":{}}}],["_scope",{"_index":812,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["_system",{"_index":938,"title":{},"body":{"classes/User.html":{}}}],["_theme",{"_index":648,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["_user",{"_index":470,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["_username",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["_verified",{"_index":947,"title":{},"body":{"classes/User.html":{}}}],["access",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["access_token",{"_index":795,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["accessible",{"_index":647,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["accessor",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["accessors",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["accesstoken",{"_index":742,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["accesstoken(value",{"_index":797,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["account",{"_index":486,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["activated",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":301,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["activatedroutesnapshot",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["actual_component",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["adapted",{"_index":657,"title":{},"body":{"injectables/ThemeService.html":{}}}],["adding",{"_index":726,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["admin",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["against",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["allowing",{"_index":608,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["already",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":435,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["angular/common/http",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":602,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["angular/router",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["app",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/dashboard",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app_initializer]{@link",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["appmodule",{"_index":154,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apppage",{"_index":198,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approach",{"_index":1077,"title":{},"body":{"index.html":{}}}],["approutingmodule",{"_index":166,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["areas",{"_index":975,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["array",{"_index":541,"title":{},"body":{"components/LayoutComponent.html":{},"classes/TokenWrapper.html":{}}}],["assignment",{"_index":653,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["associated",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["async",{"_index":990,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["attempting",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attributes",{"_index":752,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["auth",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth/redirect",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authentication",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["authguard",{"_index":232,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["authorization",{"_index":718,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authredirectcomponent",{"_index":126,"title":{"components/AuthRedirectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":257,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["auto",{"_index":333,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["available",{"_index":632,"title":{},"body":{"components/ThemeChooserComponent.html":{},"modules.html":{}}}],["avatar",{"_index":465,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["avatar(value",{"_index":934,"title":{},"body":{"classes/User.html":{}}}],["avatarurl",{"_index":842,"title":{},"body":{"classes/User.html":{}}}],["b",{"_index":594,"title":{},"body":{"components/ServerComponent.html":{}}}],["background",{"_index":327,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["background::before",{"_index":316,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["backgroundimageurl",{"_index":451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["based",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bearer",{"_index":741,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bears",{"_index":523,"title":{},"body":{"components/LayoutComponent.html":{}}}],["behaviorsubject",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{}}}],["being",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belongs",{"_index":868,"title":{},"body":{"classes/User.html":{}}}],["better",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":610,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["blacklist",{"_index":811,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["blacklist,id",{"_index":793,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["block",{"_index":322,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blur(5px",{"_index":338,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blurred",{"_index":315,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["bot",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["bot(value",{"_index":937,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":1097,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/SafeResourceUrlPipe.html":{},"injectables/ThemeService.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":205,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["business",{"_index":1074,"title":{},"body":{"index.html":{}}}],["by.css(\"siltstride",{"_index":207,"title":{},"body":{"classes/AppPage.html":{}}}],["bypasses",{"_index":573,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["call",{"_index":437,"title":{},"body":{"modules/DataModule.html":{},"components/HeaderComponent.html":{}}}],["called",{"_index":323,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["canactivate",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{}}}],["canactivate(next",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":1002,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["catcherror",{"_index":1008,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror((error",{"_index":1016,"title":{},"body":{"injectables/UserService.html":{}}}],["center",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":644,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{}}}],["changedetection",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changedetectionstrategy",{"_index":468,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":447,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changing",{"_index":677,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(event",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":609,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser",{"_index":613,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["chooser.component.html",{"_index":615,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.scss",{"_index":614,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts",{"_index":607,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["chooser.component.ts:26",{"_index":630,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:43",{"_index":634,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:54",{"_index":620,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:69",{"_index":624,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:76",{"_index":641,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser/theme",{"_index":606,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["chosen",{"_index":699,"title":{},"body":{"injectables/ThemeService.html":{},"classes/User.html":{}}}],["clarity",{"_index":659,"title":{},"body":{"injectables/ThemeService.html":{}}}],["claritymodule",{"_index":976,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["class",{"_index":69,"title":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":199,"title":{},"body":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"overview.html":{}}}],["cloning",{"_index":1080,"title":{},"body":{"index.html":{}}}],["clr",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clr/angular",{"_index":977,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["cluster_appmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":501,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":503,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":502,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":596,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":597,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":599,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":598,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":658,"title":{},"body":{"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{}}}],["command",{"_index":1089,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1083,"title":{},"body":{"index.html":{}}}],["common",{"_index":1071,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":434,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["completion",{"_index":396,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["concatmap",{"_index":734,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concatmap((clone",{"_index":746,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concepts",{"_index":1068,"title":{},"body":{"index.html":{}}}],["configured",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["consider",{"_index":481,"title":{},"body":{"components/HeaderComponent.html":{}}}],["const",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"modules/HomeRoutingModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(@optional",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["container",{"_index":520,"title":{},"body":{"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{}}}],["containing",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["content",{"_index":208,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{}}}],["convention",{"_index":808,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convention,no",{"_index":790,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convert",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["core/core.module",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["core/guard",{"_index":514,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["core/helper",{"_index":300,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["core/http",{"_index":402,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["core/import.guard",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/interceptor",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/model",{"_index":303,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["core/model/theme.model",{"_index":986,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["core/resolver",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["core/service",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["core/service/theme.service",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["coremodule",{"_index":167,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1017,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["css",{"_index":463,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeService.html":{}}}],["current",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/UserService.html":{}}}],["currently",{"_index":678,"title":{},"body":{"injectables/ThemeService.html":{}}}],["currentuserresolver",{"_index":215,"title":{"guards/CurrentUserResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["dangle",{"_index":809,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dangle,id",{"_index":792,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dark",{"_index":682,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["darkthemestylesheet",{"_index":667,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dashboard",{"_index":310,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component.html",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":129,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":517,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["data[\"title",{"_index":989,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["data[\"user",{"_index":537,"title":{},"body":{"components/LayoutComponent.html":{}}}],["datamodule",{"_index":432,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{}}}],["date",{"_index":776,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["declarations",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["default",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1064,"title":{},"body":{"index.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["defining",{"_index":521,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dependencies",{"_index":156,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserProfileComponent.html":{}}}],["designed",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determines",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["determining",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["dev",{"_index":1092,"title":{},"body":{"index.html":{}}}],["di",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["digit",{"_index":857,"title":{},"body":{"classes/User.html":{}}}],["directive",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["disable",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["discord",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["discord's",{"_index":280,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["discordoauthimplicitflowurl",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["discordserverwidgeturl",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{}}}],["discriminator",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["discriminator(value",{"_index":928,"title":{},"body":{"classes/User.html":{}}}],["display",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"classes/User.html":{}}}],["displayed",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["displaying",{"_index":531,"title":{},"body":{"components/LayoutComponent.html":{}}}],["displayname",{"_index":843,"title":{},"body":{"classes/User.html":{}}}],["dm",{"_index":1001,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["document.stylesheets[4",{"_index":686,"title":{},"body":{"injectables/ThemeService.html":{}}}],["documentation",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":592,"title":{},"body":{"components/ServerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["domsanitizer",{"_index":579,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer's",{"_index":574,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer}'s",{"_index":581,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["dumb",{"_index":1079,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":201,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts",{"_index":200,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["effect",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["element.offsetheight",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.offsetwidth",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.style.setproperty",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elements",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":838,"title":{},"body":{"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["email(value",{"_index":952,"title":{},"body":{"classes/User.html":{}}}],["emitter",{"_index":625,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["emitting",{"_index":642,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["empty",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["enable",{"_index":685,"title":{},"body":{"injectables/ThemeService.html":{}}}],["enabled",{"_index":882,"title":{},"body":{"classes/User.html":{}}}],["enabling",{"_index":499,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enabling&nbsp",{"_index":482,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enabling/disabling",{"_index":681,"title":{},"body":{"injectables/ThemeService.html":{}}}],["enterprise",{"_index":1076,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1056,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.discordcdnrooturl}avatars/${this.id}/${this.avatar}.png",{"_index":966,"title":{},"body":{"classes/User.html":{}}}],["environment.discordoauthimplicitflowurl",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.discordserverwidgeturl",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ephemeral",{"_index":532,"title":{},"body":{"components/LayoutComponent.html":{}}}],["equivalent",{"_index":762,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["error",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"must",{"_index":477,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["eslint",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["eslint/naming",{"_index":789,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["eslint/no",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["event",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["event.clientx",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.clienty",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":623,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["experience",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":775,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiration.setseconds(expiration.getseconds",{"_index":803,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expires_in",{"_index":805,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiresin",{"_index":757,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiresin(value",{"_index":807,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["exposing",{"_index":972,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["factor",{"_index":484,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["false",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":337,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["fixed",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{}}}],["flags",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["flags(value",{"_index":956,"title":{},"body":{"classes/User.html":{}}}],["flags]{@link",{"_index":954,"title":{},"body":{"classes/User.html":{}}}],["float",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["folder",{"_index":662,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["followed",{"_index":1061,"title":{},"body":{"index.html":{}}}],["following",{"_index":1082,"title":{},"body":{"index.html":{}}}],["footer",{"_index":439,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.html",{"_index":442,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":441,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["formatting",{"_index":932,"title":{},"body":{"classes/User.html":{}}}],["formsmodule",{"_index":601,"title":{},"body":{"modules/SharedModule.html":{}}}],["fragment",{"_index":292,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["fragment?.split",{"_index":816,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["full",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":298,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["get(`${environment.discordapirooturl}/users/@me",{"_index":1012,"title":{},"body":{"injectables/UserService.html":{}}}],["getaccesstoken",{"_index":765,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getavatar",{"_index":861,"title":{},"body":{"classes/User.html":{}}}],["getavatarurl",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["getbackgroundimageurl",{"_index":461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbot",{"_index":866,"title":{},"body":{"classes/User.html":{}}}],["getcurrentuser",{"_index":1005,"title":{},"body":{"injectables/UserService.html":{}}}],["getdiscordoauthimplicitflowurl",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["getdiscordserverwidgeturl",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getdiscriminator",{"_index":854,"title":{},"body":{"classes/User.html":{}}}],["getdisplayname",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["getemail",{"_index":895,"title":{},"body":{"classes/User.html":{}}}],["getexpiresin",{"_index":773,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getflags",{"_index":899,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":844,"title":{},"body":{"classes/User.html":{}}}],["getloading",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["getlocale",{"_index":885,"title":{},"body":{"classes/User.html":{}}}],["getlocaltheme",{"_index":629,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["getmfaenabled",{"_index":879,"title":{},"body":{"classes/User.html":{}}}],["getonmousemove",{"_index":294,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["getpremiumtype",{"_index":903,"title":{},"body":{"classes/User.html":{}}}],["getpublicflags",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["getscope",{"_index":779,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getsystem",{"_index":871,"title":{},"body":{"classes/User.html":{}}}],["gettext",{"_index":210,"title":{},"body":{"classes/AppPage.html":{}}}],["gettheme",{"_index":633,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{}}}],["getting",{"_index":1059,"title":{"index.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":984,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["gettitletext",{"_index":206,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokentype",{"_index":769,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment",{"_index":754,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment(fragment",{"_index":759,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["geturl",{"_index":529,"title":{},"body":{"components/LayoutComponent.html":{}}}],["getuser",{"_index":457,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["getusername",{"_index":848,"title":{},"body":{"classes/User.html":{}}}],["getverified",{"_index":891,"title":{},"body":{"classes/User.html":{}}}],["globaleventhandlers#onmousemove",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":283,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{}}}],["grant]{@link",{"_index":304,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["graph",{"_index":1098,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":231,"title":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"overview.html":{}}}],["guides",{"_index":1062,"title":{},"body":{"index.html":{}}}],["hack",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["handler",{"_index":730,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["handling",{"_index":278,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["handshake",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["hash",{"_index":863,"title":{},"body":{"classes/User.html":{}}}],["hash]{@link",{"_index":930,"title":{},"body":{"classes/User.html":{}}}],["header",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["header'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.html",{"_index":449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header]{@link",{"_index":538,"title":{},"body":{"components/LayoutComponent.html":{}}}],["headercomponent",{"_index":133,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":745,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["height",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["helper",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["highly",{"_index":1065,"title":{},"body":{"index.html":{}}}],["home",{"_index":506,"title":{},"body":{"modules/HomeModule.html":{}}}],["homemodule",{"_index":500,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":504,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["housing",{"_index":637,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlelement",{"_index":311,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":1010,"title":{},"body":{"injectables/UserService.html":{}}}],["http_interceptors",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":1007,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":731,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":724,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":732,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":733,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":723,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["https://angular.io/api/core/app_initializer",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":711,"title":{},"body":{"injectables/ThemeService.html":{}}}],["https://discord.com/developers/docs/reference#image",{"_index":931,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/resources/user#user",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#authorization",{"_index":788,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#implicit",{"_index":305,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["https://github.com/mathisgarberg/angular",{"_index":694,"title":{},"body":{"injectables/ThemeService.html":{}}}],["https://github.com/mathisscott/clarity",{"_index":690,"title":{},"body":{"injectables/ThemeService.html":{}}}],["icon",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{}}}],["id",{"_index":810,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["id(value",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["image",{"_index":326,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["implemented",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementing",{"_index":1070,"title":{},"body":{"index.html":{}}}],["implements",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{}}}],["implicit",{"_index":282,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["import(\\\"@module/home/home.module\\\").then((m",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imported",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["include",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["incoming",{"_index":460,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserService.html":{}}}],["initiate",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject",{"_index":717,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["injectable",{"_index":255,"title":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":325,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["innocuous",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":469,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["inputs",{"_index":450,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["inserted",{"_index":466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["install",{"_index":1086,"title":{},"body":{"index.html":{}}}],["instance",{"_index":455,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["instanceof",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["instead",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["intended",{"_index":399,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["intercept",{"_index":721,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":722,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercepted",{"_index":728,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":714,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":715,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface.module",{"_index":387,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["interface.module.ts",{"_index":971,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["interface/user",{"_index":386,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["internal",{"_index":621,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["isolate",{"_index":1073,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":755,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["isvalidtoken",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["jane",{"_index":595,"title":{},"body":{"components/ServerComponent.html":{}}}],["john",{"_index":591,"title":{},"body":{"components/ServerComponent.html":{}}}],["landing",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":887,"title":{},"body":{"classes/User.html":{}}}],["last",{"_index":698,"title":{},"body":{"injectables/ThemeService.html":{}}}],["layout",{"_index":440,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["layout.component.html",{"_index":527,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":526,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/auth",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/footer/footer.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header/header.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout/layout.component",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/login/login.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layoutcomponent",{"_index":135,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":317,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["library",{"_index":974,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["lifecycle",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["light",{"_index":702,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["line",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["link",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["links",{"_index":533,"title":{},"body":{"components/LayoutComponent.html":{}}}],["live",{"_index":1093,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["locale",{"_index":836,"title":{},"body":{"classes/User.html":{}}}],["locale(value",{"_index":946,"title":{},"body":{"classes/User.html":{}}}],["localstorage.getitem(\"siltstridevisualtheme",{"_index":701,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem",{"_index":705,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localtheme",{"_index":618,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["log",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":535,"title":{},"body":{"components/LayoutComponent.html":{}}}],["logic",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["login.component.html",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":137,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":497,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m.homemodule",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["making",{"_index":631,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["map",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["map((accesstoken",{"_index":739,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((httpheaders",{"_index":743,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((segments",{"_index":540,"title":{},"body":{"components/LayoutComponent.html":{}}}],["map((token",{"_index":737,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((user",{"_index":1014,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":495,"title":{},"body":{"components/HeaderComponent.html":{}}}],["match",{"_index":794,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["matching",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1003,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["member",{"_index":456,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["message",{"_index":876,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["method,@typescript",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["mfa_enabled",{"_index":941,"title":{},"body":{"classes/User.html":{}}}],["mfaenabled",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["mfaenabled(value",{"_index":943,"title":{},"body":{"classes/User.html":{}}}],["min",{"_index":342,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["miscellaneou",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1055,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mocktoken",{"_index":1028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser",{"_index":1031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":749,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["module",{"_index":153,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["module/home/page/dashboard/dashboard.component",{"_index":513,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/server/server.component",{"_index":515,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/user",{"_index":516,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["modulename",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["mouse",{"_index":313,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["mouseevent",{"_index":312,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mouseparallaxhelper",{"_index":297,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mousex",{"_index":330,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mousey",{"_index":331,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["moz",{"_index":339,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["ms",{"_index":341,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["multi",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["mutator",{"_index":453,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["navigated",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigateto",{"_index":204,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":395,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["navigationcancel",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp;on",{"_index":485,"title":{},"body":{"components/HeaderComponent.html":{}}}],["new",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":627,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["newtheme",{"_index":619,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["newtheme(value",{"_index":654,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["next",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["next.handle(clone",{"_index":747,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ngmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["ngoninit",{"_index":287,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["nitro",{"_index":905,"title":{},"body":{"classes/User.html":{}}}],["now",{"_index":824,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["npm",{"_index":1085,"title":{},"body":{"index.html":{}}}],["null",{"_index":475,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/TokenWrapper.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":801,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["o",{"_index":340,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["oauth2",{"_index":281,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["obj",{"_index":817,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["obj[property[0",{"_index":821,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["object",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["occur",{"_index":729,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["official",{"_index":873,"title":{},"body":{"classes/User.html":{}}}],["offsetheight",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offsetwidth",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oninit",{"_index":284,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["onmousemove",{"_index":288,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["option",{"_index":888,"title":{},"body":{"classes/User.html":{}}}],["optional",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["order",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outgoing",{"_index":719,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["output",{"_index":645,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["outputs",{"_index":616,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["over",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlapping",{"_index":1067,"title":{},"body":{"index.html":{}}}],["overview",{"_index":411,"title":{"overview.html":{}},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["owner",{"_index":590,"title":{},"body":{"components/ServerComponent.html":{}}}],["package",{"_index":1041,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["page/dashboard/dashboard.component",{"_index":507,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/server/server.component",{"_index":508,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/user",{"_index":509,"title":{},"body":{"modules/HomeModule.html":{}}}],["parallax",{"_index":314,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parallax.helper.ts",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["params.value",{"_index":804,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["params.value).split",{"_index":814,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["parentmodule",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":874,"title":{},"body":{"classes/User.html":{}}}],["passed",{"_index":635,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["path",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1075,"title":{},"body":{"index.html":{}}}],["pick",{"_index":663,"title":{},"body":{"injectables/ThemeService.html":{}}}],["pipe",{"_index":559,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":561,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["pipetransform",{"_index":578,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["place",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["plaintoclass",{"_index":784,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["plaintoclass(tokenwrapper",{"_index":823,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["plaintoclass(user",{"_index":1015,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":851,"title":{},"body":{"classes/User.html":{}}}],["position",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["post",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":1072,"title":{},"body":{"index.html":{}}}],["preferences",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{}}}],["preferences'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["preferences.component",{"_index":511,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["preferences.component.html",{"_index":981,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.scss",{"_index":980,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts",{"_index":979,"title":{},"body":{"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["preferences.component.ts:14",{"_index":982,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts:18",{"_index":983,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts:26",{"_index":985,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences/user",{"_index":510,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["premium",{"_index":959,"title":{},"body":{"classes/User.html":{}}}],["premium_type",{"_index":957,"title":{},"body":{"classes/User.html":{}}}],["premiumtype",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["premiumtype(value",{"_index":962,"title":{},"body":{"classes/User.html":{}}}],["presentation",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"index.html":{}}}],["presentation/container",{"_index":1069,"title":{},"body":{"index.html":{}}}],["presentational",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{}}}],["preventing",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prior",{"_index":394,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["private",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":995,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":994,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":993,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:22",{"_index":998,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":997,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":996,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":992,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":589,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["promise",{"_index":203,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{}}}],["properties?.foreach((value",{"_index":818,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["properties[index]?.split",{"_index":820,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property",{"_index":819,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property[1",{"_index":822,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["protractor",{"_index":202,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["provided",{"_index":567,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["providedin",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providing",{"_index":626,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["public",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["public_flags",{"_index":963,"title":{},"body":{"classes/User.html":{}}}],["publicflags",{"_index":841,"title":{},"body":{"classes/User.html":{}}}],["publicflags(value",{"_index":965,"title":{},"body":{"classes/User.html":{}}}],["radius",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["readonly",{"_index":666,"title":{},"body":{"injectables/ThemeService.html":{}}}],["received",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect",{"_index":279,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["redirect.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["redirect.component.html",{"_index":286,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.scss",{"_index":285,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts",{"_index":277,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirect.component.ts:29",{"_index":289,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts:43",{"_index":295,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect/presentation/auth",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirectto",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencing",{"_index":696,"title":{},"body":{"injectables/ThemeService.html":{}}}],["reflect",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeat",{"_index":329,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["repository",{"_index":1081,"title":{},"body":{"index.html":{}}}],["request",{"_index":727,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":744,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.append(\"authorization",{"_index":740,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requests",{"_index":720,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{}}}],["resolve(route",{"_index":397,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["resolver",{"_index":393,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["resource",{"_index":563,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["resourceurl",{"_index":576,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["response",{"_index":751,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["response]{@link",{"_index":787,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["responsibilities",{"_index":524,"title":{},"body":{"components/LayoutComponent.html":{}}}],["responsibility",{"_index":525,"title":{},"body":{"components/LayoutComponent.html":{}}}],["result",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":290,"title":{},"body":{"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["return",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":296,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["right",{"_index":319,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{}}}],["routerevent",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":518,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["routes",{"_index":214,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["routing.module.ts",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["run",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["running",{"_index":1087,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["safe",{"_index":577,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurl",{"_index":569,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurlpipe",{"_index":560,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":580,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saved",{"_index":673,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":1063,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":1066,"title":{},"body":{"index.html":{}}}],["scope",{"_index":758,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scope(value",{"_index":815,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scopes",{"_index":781,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scss",{"_index":324,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["security",{"_index":575,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["see",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["segments.join",{"_index":542,"title":{},"body":{"components/LayoutComponent.html":{}}}],["selected",{"_index":628,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["selects",{"_index":643,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["semantically",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/ServerComponent.html":{},"index.html":{}}}],["server'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["server.component.html",{"_index":585,"title":{},"body":{"components/ServerComponent.html":{}}}],["server.component.scss",{"_index":584,"title":{},"body":{"components/ServerComponent.html":{}}}],["servercomponent",{"_index":139,"title":{"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{}}}],["set",{"_index":473,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["setaccesstoken(value",{"_index":767,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setavatar(value",{"_index":864,"title":{},"body":{"classes/User.html":{}}}],["setbot(value",{"_index":869,"title":{},"body":{"classes/User.html":{}}}],["setdiscriminator(value",{"_index":859,"title":{},"body":{"classes/User.html":{}}}],["setemail(value",{"_index":897,"title":{},"body":{"classes/User.html":{}}}],["setexpiresin(value",{"_index":777,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setflags(value",{"_index":901,"title":{},"body":{"classes/User.html":{}}}],["setid(value",{"_index":846,"title":{},"body":{"classes/User.html":{}}}],["setlocale(value",{"_index":889,"title":{},"body":{"classes/User.html":{}}}],["setmfaenabled(value",{"_index":883,"title":{},"body":{"classes/User.html":{}}}],["setnewtheme(value",{"_index":640,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["setpremiumtype(value",{"_index":907,"title":{},"body":{"classes/User.html":{}}}],["setpublicflags(value",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":672,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setscope(value",{"_index":782,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setsystem(value",{"_index":877,"title":{},"body":{"classes/User.html":{}}}],["setter",{"_index":676,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme",{"_index":669,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":674,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(value",{"_index":638,"title":{},"body":{"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["setting",{"_index":454,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["settokentype(value",{"_index":771,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setuser(value",{"_index":459,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["setusername(value",{"_index":852,"title":{},"body":{"classes/User.html":{}}}],["setverified(value",{"_index":893,"title":{},"body":{"classes/User.html":{}}}],["shared/component",{"_index":604,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/pipe",{"_index":603,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["shared/user",{"_index":385,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":168,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["siltstride",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["siltstridevisualtheme",{"_index":706,"title":{},"body":{"injectables/ThemeService.html":{}}}],["size",{"_index":332,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["skipself",{"_index":381,"title":{},"body":{"modules/CoreModule.html":{}}}],["smart",{"_index":1078,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":400,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["solution",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["source.pipe",{"_index":736,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["span",{"_index":209,"title":{},"body":{"classes/AppPage.html":{}}}],["specification",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["specification]{@link",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["spinner",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../environment.ts",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../import.guard.ts",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mouse",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../theme.model.ts",{"_index":1057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token.mock.ts",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.mock.ts",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:38",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guard/auth.guard.ts",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guard/auth.guard.ts:33",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helper/mouse",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/user.service.ts",{"_index":1004,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/http/user.service.ts:24",{"_index":1006,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/import.guard.ts",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptor/token.interceptor.ts",{"_index":716,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptor/token.interceptor.ts:33",{"_index":725,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/core/mock/token.mock.ts",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/mock/user.mock.ts",{"_index":1030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/model/theme.model.ts",{"_index":1058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/model/token.model.ts",{"_index":748,"title":{},"body":{"classes/TokenWrapper.html":{},"coverage.html":{}}}],["src/app/core/model/token.model.ts:107",{"_index":760,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:131",{"_index":764,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:24",{"_index":766,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:28",{"_index":768,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:44",{"_index":770,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:48",{"_index":772,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:70",{"_index":774,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:74",{"_index":778,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:90",{"_index":780,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:96",{"_index":783,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/user.model.ts",{"_index":829,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:108",{"_index":872,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:111",{"_index":878,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:126",{"_index":880,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:129",{"_index":884,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:144",{"_index":886,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:147",{"_index":890,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:162",{"_index":892,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:165",{"_index":894,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:18",{"_index":845,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:180",{"_index":896,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:183",{"_index":898,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:198",{"_index":900,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:201",{"_index":902,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:21",{"_index":847,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:216",{"_index":904,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:219",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:234",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:237",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:245",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:254",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:36",{"_index":849,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:39",{"_index":853,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:54",{"_index":855,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:57",{"_index":860,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:72",{"_index":862,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:75",{"_index":865,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:90",{"_index":867,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:93",{"_index":870,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/resolver/current",{"_index":391,"title":{},"body":{"guards/CurrentUserResolver.html":{},"coverage.html":{}}}],["src/app/core/service/auth.service.ts",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/service/auth.service.ts:19",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:27",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:42",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:50",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/theme.service.ts",{"_index":656,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/service/theme.service.ts:22",{"_index":687,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:29",{"_index":671,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:45",{"_index":675,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:59",{"_index":688,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:68",{"_index":680,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/data/data.module.ts",{"_index":433,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/layout/auth",{"_index":276,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":438,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts:25",{"_index":458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:34",{"_index":452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:46",{"_index":462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/layout/layout.component.ts",{"_index":519,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout/layout.component.ts:24",{"_index":528,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:34",{"_index":530,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/login/login.component.ts",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/login/login.component.ts:21",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layout/login/login.component.ts:31",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/module/home/home",{"_index":512,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/module/home/home.module.ts",{"_index":505,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts:17",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts",{"_index":583,"title":{},"body":{"components/ServerComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/server/server.component.ts:13",{"_index":587,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts:8",{"_index":586,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/user",{"_index":978,"title":{},"body":{"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/theme",{"_index":605,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/user",{"_index":991,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipe/safe",{"_index":562,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":600,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/user",{"_index":970,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["src/environments/environment.ts",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":588,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["started",{"_index":1060,"title":{"index.html":{}},"body":{"index.html":{}}}],["starter",{"_index":661,"title":{},"body":{"injectables/ThemeService.html":{}}}],["starter/blob/clarity",{"_index":691,"title":{},"body":{"injectables/ThemeService.html":{}}}],["starter]{@link",{"_index":689,"title":{},"body":{"injectables/ThemeService.html":{}}}],["starts",{"_index":1090,"title":{},"body":{"index.html":{}}}],["startup",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["statements",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":753,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["status",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["stop",{"_index":593,"title":{},"body":{"components/ServerComponent.html":{}}}],["storage",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":293,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["stored",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["stores",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{}}}],["storetoken",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(tokenwrapper",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":522,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"index.html":{}}}],["structure/blob/master/src/app/layout/nav/nav.component.ts",{"_index":695,"title":{},"body":{"injectables/ThemeService.html":{}}}],["structure]{@link",{"_index":693,"title":{},"body":{"injectables/ThemeService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["stylesheet",{"_index":684,"title":{},"body":{"injectables/ThemeService.html":{}}}],["stylesheet]{@link",{"_index":710,"title":{},"body":{"injectables/ThemeService.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["subject",{"_index":697,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subscription",{"_index":906,"title":{},"body":{"classes/User.html":{}}}],["subscription]{@link",{"_index":958,"title":{},"body":{"classes/User.html":{}}}],["successful",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1095,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1096,"title":{},"body":{"modules.html":{}}}],["switcher/src/app/app.component.ts",{"_index":692,"title":{},"body":{"injectables/ThemeService.html":{}}}],["system",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["system(value",{"_index":940,"title":{},"body":{"classes/User.html":{}}}],["table",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":858,"title":{},"body":{"classes/User.html":{}}}],["take",{"_index":1009,"title":{},"body":{"injectables/UserService.html":{}}}],["take(1",{"_index":1013,"title":{},"body":{"injectables/UserService.html":{}}}],["tap",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap((value",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["terminal",{"_index":1084,"title":{},"body":{"index.html":{}}}],["tes3mp",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["theme",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["theme(value",{"_index":652,"title":{},"body":{"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["theme.css",{"_index":683,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.dark",{"_index":664,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.light",{"_index":665,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme]{@link",{"_index":649,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themechange",{"_index":617,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themechoosercomponent",{"_index":141,"title":{"components/ThemeChooserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":612,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themeservice",{"_index":66,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["themesubject",{"_index":668,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theming",{"_index":660,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._avatar",{"_index":933,"title":{},"body":{"classes/User.html":{}}}],["this._bot",{"_index":936,"title":{},"body":{"classes/User.html":{}}}],["this._discriminator",{"_index":927,"title":{},"body":{"classes/User.html":{}}}],["this._email",{"_index":951,"title":{},"body":{"classes/User.html":{}}}],["this._flags",{"_index":955,"title":{},"body":{"classes/User.html":{}}}],["this._id",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["this._loading",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this._locale",{"_index":945,"title":{},"body":{"classes/User.html":{}}}],["this._scope",{"_index":813,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this._system",{"_index":939,"title":{},"body":{"classes/User.html":{}}}],["this._theme",{"_index":651,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["this._user",{"_index":471,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._username",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["this._verified",{"_index":948,"title":{},"body":{"classes/User.html":{}}}],["this.access_token",{"_index":796,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.accesstoken",{"_index":825,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.authservice.isvalidtoken$().pipe",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.storetoken(tokenwrapper",{"_index":308,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.authservice.token",{"_index":735,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.checkrouterevent(event",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.darkthemestylesheet.disabled",{"_index":713,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.expires_in",{"_index":806,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.expiresin",{"_index":827,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.http",{"_index":1011,"title":{},"body":{"injectables/UserService.html":{}}}],["this.mfa_enabled",{"_index":942,"title":{},"body":{"classes/User.html":{}}}],["this.premium_type",{"_index":961,"title":{},"body":{"classes/User.html":{}}}],["this.public_flags",{"_index":964,"title":{},"body":{"classes/User.html":{}}}],["this.route.data.pipe(map((data",{"_index":536,"title":{},"body":{"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["this.route.snapshot.fragment",{"_index":307,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.route.url.pipe",{"_index":539,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([\"app",{"_index":309,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"login",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(resourceurl",{"_index":582,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["this.scope",{"_index":828,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.themechange.emit(value",{"_index":655,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["this.themeservice.settheme(value",{"_index":988,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["this.themeservice.theme",{"_index":987,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["this.themesubject",{"_index":700,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.asobservable",{"_index":709,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.next(theme",{"_index":704,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.value.tostring",{"_index":707,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.toggledarkthemestylesheet(theme",{"_index":708,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.toggledarkthemestylesheet(this.themesubject.value",{"_index":703,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.token$.pipe(map((token",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token_type",{"_index":799,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.tokensubject.asobservable",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokensubject.next(tokenwrapper",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentype",{"_index":826,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.username}#${this.discriminator",{"_index":969,"title":{},"body":{"classes/User.html":{}}}],["this.userservice.getcurrentuser",{"_index":403,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["this]{@link",{"_index":650,"title":{},"body":{"components/ThemeChooserComponent.html":{},"classes/User.html":{}}}],["throw",{"_index":476,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded(parentmodule",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["tied",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{}}}],["toggledarkthemestylesheet",{"_index":670,"title":{},"body":{"injectables/ThemeService.html":{}}}],["toggledarkthemestylesheet(enable",{"_index":679,"title":{},"body":{"injectables/ThemeService.html":{}}}],["token",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token's",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token.accesstoken",{"_index":738,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["token.isvalid",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["token]{@link",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["token_type",{"_index":798,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokeninterceptor",{"_index":169,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tokensubject",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":756,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokentype(value",{"_index":800,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokenwrapper",{"_index":302,"title":{"classes/TokenWrapper.html":{}},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenwrapper#accesstoken",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["tokenwrapper.gettokenwrapperfromurlfragment",{"_index":306,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transform",{"_index":570,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["transform((params",{"_index":802,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transform(resourceurl",{"_index":571,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["transformed",{"_index":763,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transformer",{"_index":786,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":785,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transforming",{"_index":761,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/CurrentUserResolver.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["trust",{"_index":566,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["tslib",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":881,"title":{},"body":{"classes/User.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":646,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["types",{"_index":960,"title":{},"body":{"classes/User.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":973,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["unauthenticated",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["underscore",{"_index":791,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["unique",{"_index":850,"title":{},"body":{"classes/User.html":{}}}],["unsafe",{"_index":436,"title":{},"body":{"modules/DataModule.html":{},"components/ThemeChooserComponent.html":{}}}],["unused",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["update",{"_index":639,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["updates",{"_index":1094,"title":{},"body":{"index.html":{}}}],["urgent",{"_index":875,"title":{},"body":{"classes/User.html":{}}}],["url",{"_index":291,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["url(\"../../../../assets/fargoth.jpg",{"_index":328,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["url(\"~assets/fargoth.jpg",{"_index":343,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["url(${this.user.avatarurl",{"_index":480,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(~assets/siltstrider4.svg",{"_index":498,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.pipe.ts",{"_index":564,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:18",{"_index":572,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urls",{"_index":568,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urlsegment",{"_index":534,"title":{},"body":{"components/LayoutComponent.html":{}}}],["us/docs/web/api/stylesheet",{"_index":712,"title":{},"body":{"injectables/ThemeService.html":{}}}],["use",{"_index":299,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{}}}],["useclass",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":41,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user#discriminator",{"_index":968,"title":{},"body":{"classes/User.html":{}}}],["user#username",{"_index":967,"title":{},"body":{"classes/User.html":{}}}],["user's",{"_index":464,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user(value",{"_index":474,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["user.discriminator",{"_index":1000,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.displayname",{"_index":487,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.resolver.ts",{"_index":392,"title":{},"body":{"guards/CurrentUserResolver.html":{},"coverage.html":{}}}],["user.resolver.ts:31",{"_index":398,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["user.username",{"_index":999,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user]{@link",{"_index":472,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["userinterfacemodule",{"_index":379,"title":{"modules/UserInterfaceModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["username(value",{"_index":925,"title":{},"body":{"classes/User.html":{}}}],["userpreferencescomponent",{"_index":144,"title":{"components/UserPreferencesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprofilecomponent",{"_index":146,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["userservice",{"_index":401,"title":{"injectables/UserService.html":{}},"body":{"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user}'s",{"_index":479,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["using",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["utility",{"_index":565,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["valid",{"_index":478,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["validation",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["value",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":622,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1102,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["verified",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["verified(value",{"_index":949,"title":{},"body":{"classes/User.html":{}}}],["vetting",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["via",{"_index":636,"title":{},"body":{"components/ThemeChooserComponent.html":{},"modules/UserInterfaceModule.html":{}}}],["visual",{"_index":611,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["webcomponents/custom",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":336,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["webpack",{"_index":1091,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["whether",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["widget",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapping",{"_index":750,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["z",{"_index":320,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["zone.js",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Component for the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkRouterEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n                    Helper method determining when the router is in transit in order to display\na loading spinner for a better user experience\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The router event to check against\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:38\n                                \n                            \n                    \n                        \n                                Accessor retrieving the loading status of the router\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n  RouterEvent\n} from \"@angular/router\";\nimport { ThemeService } from \"@core/service/theme.service\";\n\n/**\n * Main Component for the application\n */\n@Component({\n  selector: \"siltstride-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  /**\n   * @ignore\n   * @type {string}\n   */\n  public title = \"siltstride-admin-web\";\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _loading: boolean;\n\n  /**\n   * Accessor retrieving the loading status of the router\n   * @returns {boolean}\n   */\n  public get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @ignore\n   *\n   * Include {@link ThemeService} in the constructor to force it to be created\n   * and run its constructor logic on app startup\n   *\n   * May convert this over to using\n   * [APP_INITIALIZER]{@link https://angular.io/api/core/APP_INITIALIZER} DI token\n   * to be more semantically correct instead of the current hack solution\n   * @param {Router} router\n   * @param themeService\n   */\n  constructor(private router: Router, private themeService: ThemeService) {\n    this.router.events.subscribe((event: RouterEvent) =>\n      this.checkRouterEvent(event)\n    );\n  }\n\n  /**\n   * Helper method determining when the router is in transit in order to display\n   * a loading spinner for a better user experience\n   * @param {RouterEvent} event The router event to check against\n   * @private\n   */\n  private checkRouterEvent(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this._loading = true;\n    }\n\n    if (\n      event instanceof NavigationEnd ||\n      event instanceof NavigationCancel ||\n      event instanceof NavigationError\n    ) {\n      this._loading = false;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .center-spinner {\n  position: fixed;\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n  place-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthRedirectComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { HeaderComponent } from \"./layout/header/header.component\";\nimport { FooterComponent } from \"./layout/footer/footer.component\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { CoreModule } from \"@core/core.module\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { TokenInterceptor } from \"@core/interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AuthRedirectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                e2e class for the AppComponent\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from \"protractor\";\n\n/**\n * e2e class for the {@link AppComponent}\n */\nexport class AppPage {\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  getTitleText(): Promise {\n    return element(\n      by.css(\"siltstride-root .content span\")\n    ).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { CurrentUserResolver } from \"@core/resolver\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/app/dashboard\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"auth/redirect\", component: AuthRedirectComponent },\n  {\n    path: \"app\",\n    component: LayoutComponent,\n    resolve: {\n      user: CurrentUserResolver\n    },\n    children: [\n      {\n        path: \"\",\n        loadChildren: () =>\n          \"import(\\\"@module/home/home.module\\\").then((m) => m.HomeModule)\"\n      }\n    ]\n  },\n  { path: \"**\", redirectTo: \"/app/dashboard\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guard/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Router guard vetting access to routes based on authentication status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guard/auth.guard.ts:33\n                \n            \n\n\n            \n                \n                    Determines whether a route can be activated based on\naccess token validity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route attempting to be navigated to\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current Router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token validity status\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/service\";\nimport { tap } from \"rxjs/operators\";\n\n/**\n * Router guard vetting access to routes based on authentication status\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * @ignore\n   * @param {AuthService} authService\n   * @param {Router} router\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Determines whether a route can be activated based on\n   * [access token]{@link TokenWrapper#accessToken} validity\n   * @param {ActivatedRouteSnapshot} next The route attempting to be navigated to\n   * @param {RouterStateSnapshot} state Current Router state\n   * @returns {Observable} Observable containing the token validity status\n   */\n  public canActivate(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    next: ActivatedRouteSnapshot,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.authService.isValidToken$().pipe(\n      tap((value: boolean) => {\n        if (!value) {\n          void this.router.navigate([\"login\"]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthRedirectComponent.html":{"url":"components/AuthRedirectComponent.html","title":"component - AuthRedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthRedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling the redirect from\nDiscord's OAuth2 implicit grant\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-auth-redirect\n            \n\n            \n                styleUrls\n                ./auth-redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:29\n                \n            \n\n\n            \n                \n                    Retrieve the token from the URL fragment and store it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:43\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { mouseParallaxHelper } from \"@core/helper\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { TokenWrapper } from \"@core/model\";\nimport { AuthService } from \"@core/service\";\n\n/**\n * Component handling the redirect from\n * [Discord's OAuth2 implicit grant]{@link https://discord.com/developers/docs/topics/oauth2#implicit-grant}\n */\n@Component({\n  selector: \"siltstride-auth-redirect\",\n  templateUrl: \"./auth-redirect.component.html\",\n  styleUrls: [\"./auth-redirect.component.scss\"]\n})\nexport class AuthRedirectComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  /**\n   * Retrieve the [token]{@link TokenWrapper} from the URL fragment and store it\n   */\n  public ngOnInit(): void {\n    const tokenWrapper = TokenWrapper.getTokenWrapperFromUrlFragment(\n      this.route.snapshot.fragment\n    );\n    this.authService.storeToken(tokenWrapper);\n    void this.router.navigate([\"app\", \"dashboard\"]);\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./auth-redirect.component.scss\n                \n                //.blurred-background::before {\n//  content: \"\";\n//  position: fixed;\n//  left: 0;\n//  right: 0;\n//  z-index: -1;\n//  display: block;\n//  // url must be called in scss template file.\n//  // Inline scss template would not resolve image url.\n//  background-image: url(\"../../../../assets/Fargoth.jpg\");\n//  background-repeat: no-repeat;\n//  background-position: var(--mouseX) var(--mouseY);\n//  background-size: auto 150%;\n//  width: 100%;\n//  height: 100%;\n//  -webkit-filter: blur(5px);\n//  -moz-filter: blur(5px);\n//  -o-filter: blur(5px);\n//  -ms-filter: blur(5px);\n//  filter: blur(5px);\n//}\n\n.blurred-background {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -o-filter: blur(5px);\n  -ms-filter: blur(5px);\n  filter: blur(5px);\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthRedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling authentication logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValidToken$\n                            \n                            \n                                    Public\n                                storeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidToken$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidToken$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/auth.service.ts:50\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the stored TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token's validity status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeToken(tokenWrapper: TokenWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Stores the TokenWrapper received from Discord OAuth2 implicit grant\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenWrapper\n                                    \n                                                TokenWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object containing the access token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Used for validation of successful token storage\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new TokenWrapper()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                        The token for the current User\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token$\n                    \n                \n\n                \n                    \n                        gettoken$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/auth.service.ts:27\n                                \n                            \n                    \n                        \n                                Get the token associated with the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CoreModule } from \"@core/core.module\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { TokenWrapper } from \"@core/model\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Service handling authentication logic\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthService {\n  /**\n   * The [token]{@link TokenWrapper} for the current {@link User}\n   * @type {BehaviorSubject} BehaviorSubject containing the token\n   * @private\n   */\n  private tokenSubject: BehaviorSubject = new BehaviorSubject(\n    new TokenWrapper()\n  );\n\n  /**\n   * Get the [token]{@link TokenWrapper} associated with the current {@link User}\n   * @returns {Observable} Observable containing the token\n   */\n  public get token$(): Observable {\n    return this.tokenSubject.asObservable();\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * Stores the {@link TokenWrapper} received from Discord OAuth2 implicit grant\n   * @param {TokenWrapper} tokenWrapper Object containing the access token\n   * @returns {Observable} Used for validation of successful token storage\n   */\n  public storeToken(tokenWrapper: TokenWrapper): void {\n    this.tokenSubject.next(tokenWrapper);\n  }\n\n  /**\n   * Helper method determining the validity of the stored {@link TokenWrapper}\n   * @returns {Observable} Observable containing the token's validity status\n   */\n  public isValidToken$(): Observable {\n    return this.token$.pipe(map((token: TokenWrapper) => token.isValid()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { throwIfAlreadyLoaded } from \"@core/import.guard\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\n\n@NgModule({\n  imports: [HttpClientModule, UserInterfaceModule],\n  exports: [HttpClientModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CurrentUserResolver.html":{"url":"guards/CurrentUserResolver.html","title":"guard - CurrentUserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CurrentUserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/resolver/current-user.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolver service used to retrieve the current User from Discord\nprior to navigation completion\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/resolver/current-user.resolver.ts:31\n                \n            \n\n\n            \n                \n                    Resolve the intended route with the current User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        In transit to this route\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Snapshot of the current router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the current user\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"@core/model\";\nimport { UserService } from \"@core/http\";\n\n/**\n * Resolver service used to retrieve the current {@link User} from Discord\n * prior to navigation completion\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CurrentUserResolver implements Resolve {\n  /**\n   * @ignore\n   * @param {UserService} userService\n   */\n  constructor(private userService: UserService) {}\n\n  /**\n   * Resolve the intended route with the current {@link User}\n   * @param {ActivatedRouteSnapshot} route In transit to this route\n   * @param {RouterStateSnapshot} state Snapshot of the current router state\n   * @returns {Observable} Observable containing the current user\n   */\n  public resolve(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    route: ActivatedRouteSnapshot,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.userService.getCurrentUser();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordServerWidgetUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordServerWidgetUrl\n                    \n                \n\n                \n                    \n                        getdiscordServerWidgetUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/dashboard/dashboard.component.ts:17\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord server widget URL configured for our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\n\n/**\n * Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n */\n@Component({\n  selector: \"siltstride-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord server widget URL configured for our application\n   * @returns {string} Discord server widget URL\n   */\n  public get discordServerWidgetUrl(): string {\n    return environment.discordServerWidgetUrl;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Dashboard\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .discord-server-widget {\n  float: right;\n  width: 350px;\n  height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dashboard          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n@NgModule({\n  declarations: [],\n  imports: [CommonModule]\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component used in the application layout\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n/**\n * Footer Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.scss\"]\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header Presentation Component used in the application layout\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    backgroundImageUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/header/header.component.ts:34\n                            \n                        \n                \n                    \n                        Mutator setting the user instance member for this component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:25\n                                \n                            \n                    \n                        \n                                Accessor retrieving the User object used for this component\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n                \n                    \n                        setuser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:34\n                                \n                            \n                    \n                        \n                                Mutator setting the user instance member for this component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The incoming user value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        backgroundImageUrl\n                    \n                \n\n                \n                    \n                        getbackgroundImageUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:46\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the CSS url() function call with the\nUser's avatar URL inserted as a parameter\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { User } from \"@core/model\";\n\n/**\n * Header Presentation Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /**\n   * @ignore\n   * @type {User}\n   * @private\n   */\n  private _user: User;\n\n  /**\n   * Accessor retrieving the {@link User} object used for this component\n   * @returns {User} The user in this component\n   */\n  public get user(): User {\n    return this._user;\n  }\n\n  /**\n   * Mutator setting the [user]{@link User} instance member for this component\n   * @param {User} value The incoming user value\n   */\n  @Input()\n  public set user(value: User) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid User object!\");\n    }\n    this._user = value;\n  }\n\n  /**\n   * Helper accessor retrieving the CSS url() function call with the\n   * {@link User}'s avatar URL inserted as a parameter\n   * @returns {string} The CSS url() function call\n   */\n  public get backgroundImageUrl(): string {\n    return `url(${this.user.avatarUrl})`;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    Consider enabling&nbsp;\n    \n      2-Factor authentication\n    \n    &nbsp;on your Discord account!\n  \n\n\n  \n    \n      \n      Siltstride Admin\n    \n  \n  \n    \n      Dashboard\n    \n    \n      Server\n    \n  \n  \n    \n      \n        \n        {{ user.displayName }}\n        \n      \n      \n        Preferences\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .clr-icon {\n  &.user-avatar {\n    border-radius: 50%;\n    //background-size: 150% 150%;\n    //width: 36px;\n    //margin-right: 11px;\n  }\n}\n\n.clr-icon {\n  &.siltstride-logo {\n    background-image: url(~assets/SiltStrider4.svg);\n    height: 36px;\n    width: 36px;\n    margin-right: 11px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Consider enabling           2-Factor authentication         on your Discord account!                    Siltstride Admin                  Dashboard              Server                                  {{ user.displayName }}                            Preferences            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nUserPreferencesComponent\n\nUserPreferencesComponent\n\nHomeModule -->\n\nUserPreferencesComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            ServerComponent\n                        \n                        \n                            UserPreferencesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeRoutingModule } from \"./home-routing.module\";\nimport { DashboardComponent } from \"./page/dashboard/dashboard.component\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { ServerComponent } from \"./page/server/server.component\";\nimport { UserPreferencesComponent } from \"./page/user-preferences/user-preferences.component\";\n\n@NgModule({\n  declarations: [DashboardComponent, ServerComponent, UserPreferencesComponent],\n  imports: [CommonModule, HomeRoutingModule, SharedModule]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"@module/home/page/dashboard/dashboard.component\";\nimport { AuthGuard } from \"@core/guard\";\nimport { ServerComponent } from \"@module/home/page/server/server.component\";\nimport { UserPreferencesComponent } from \"@module/home/page/user-preferences/user-preferences.component\";\nimport { CurrentUserResolver } from \"@core/resolver\";\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"preferences\",\n    component: UserPreferencesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      title: \"Preferences\"\n    },\n    resolve: {\n      user: CurrentUserResolver\n    }\n  },\n  { path: \"server\", component: ServerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Layout Container Component defining the structure of the application\nThis Component bears no Presentation responsibilities, so it is used as a\nContainer component for HeaderComponent which bears Presentation\nresponsibility\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user$\n                                \n                                \n                                    url$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user$\n                    \n                \n\n                \n                    \n                        getuser$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/layout/layout.component.ts:24\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url$\n                    \n                \n\n                \n                    \n                        geturl$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/layout/layout.component.ts:34\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the current URL for use in displaying ephemeral\nHeader links\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"@core/model\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute, Data, UrlSegment } from \"@angular/router\";\n\n/**\n * Layout Container Component defining the structure of the application\n *\n * This Component bears no Presentation responsibilities, so it is used as a\n * Container component for {@link HeaderComponent} which bears Presentation\n * responsibility\n */\n@Component({\n  selector: \"siltstride-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"]\n})\nexport class LayoutComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the current {@link User}\n   * @returns {Observable} Observable containing the logged in user\n   */\n  public get user$(): Observable {\n    return this.route.data.pipe(map((data: Data) => data[\"user\"] as User));\n  }\n\n  /**\n   * Helper accessor retrieving the current URL for use in displaying ephemeral\n   * [Header]{@link HeaderComponent} links\n   * @returns {Observable>} Observable containing the current\n   * URL\n   */\n  public get url$(): Observable {\n    return this.route.url.pipe(\n      map((segments: Array) => segments.join(\"\"))\n    );\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Presentational Component used as the landing page for unauthenticated users\nof the application and where they will initiate the OAuth2 login handshake\nwith Discord\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordOAuthImplicitFlowUrl\n                                \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordOAuthImplicitFlowUrl\n                    \n                \n\n                \n                    \n                        getdiscordOAuthImplicitFlowUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:21\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\nfor our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:31\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { environment } from \"@env\";\nimport { mouseParallaxHelper } from \"@core/helper\";\n\n/**\n * Presentational Component used as the landing page for unauthenticated users\n * of the application and where they will initiate the OAuth2 login handshake\n * with Discord\n */\n@Component({\n  selector: \"siltstride-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent {\n  /**\n   * Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\n   * for our application\n   * @returns {string} Discord OAuth2 implicit grant URL\n   */\n  public get discordOAuthImplicitFlowUrl(): string {\n    return environment.discordOAuthImplicitFlowUrl;\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to\n      Siltstride Admin\n    \n    \n      \n        Log In with Discord\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :host {\n  --mouseX: 50%;\n  --mouseY: 50%;\n}\n\n.login-wrapper {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to      Siltstride Admin                      Log In with Discord            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeResourceUrlPipe.html":{"url":"pipes/SafeResourceUrlPipe.html","title":"pipe - SafeResourceUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeResourceUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/safe-resource-url.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Utility Pipe to trust provided resource URLs\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeResourceUrl\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(resourceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipe/safe-resource-url.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Bypasses the DomSanitizer's security trust for the provided resource URL\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resource URL to trust\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        The safe resource URL\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n/**\n * Utility Pipe to trust provided resource URLs\n */\n@Pipe({\n  name: \"safeResourceUrl\"\n})\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  /**\n   * Bypasses the {@link DomSanitizer}'s security trust for the provided resource URL\n   * @param {string} resourceUrl Resource URL to trust\n   * @returns {SafeResourceUrl} The safe resource URL\n   */\n  public transform(resourceUrl: string): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerComponent.html":{"url":"components/ServerComponent.html","title":"component - ServerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/server/server.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-server\n            \n\n            \n                styleUrls\n                ./server.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/module/home/page/server/server.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/home/page/server/server.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"siltstride-server\",\n  templateUrl: \"./server.component.html\",\n  styleUrls: [\"./server.component.scss\"]\n})\nexport class ServerComponent implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Start Server\n      \n        \n          \n          \n            Project A\n            Owner: John Doe\n          \n        \n        ...\n      \n    \n  \n  \n    \n      Stop Server\n      \n        \n          \n          \n            Project B\n            Owner: Jane Doe\n          \n        \n        ...\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./server.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Server                                              Project A            Owner: John Doe                          ...                        Stop Server                                              Project B            Owner: Jane Doe                          ...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nThemeChooserComponent\n\nThemeChooserComponent\n\nSharedModule -->\n\nThemeChooserComponent->SharedModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nSharedModule -->\n\nUserProfileComponent->SharedModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nThemeChooserComponent \n\nThemeChooserComponent \n\nThemeChooserComponent  -->\n\nSharedModule->ThemeChooserComponent \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nSharedModule->UserProfileComponent \n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            ThemeChooserComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            ThemeChooserComponent\n                        \n                        \n                            UserInterfaceModule\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SafeResourceUrlPipe } from \"@shared/pipe\";\nimport { UserProfileComponent } from \"@shared/component\";\nimport { ThemeChooserComponent } from \"@shared/component\";\n\n@NgModule({\n  declarations: [\n    SafeResourceUrlPipe,\n    UserProfileComponent,\n    ThemeChooserComponent\n  ],\n  imports: [CommonModule, FormsModule, UserInterfaceModule],\n  exports: [\n    FormsModule,\n    UserInterfaceModule,\n    SafeResourceUrlPipe,\n    UserProfileComponent,\n    ThemeChooserComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeChooserComponent.html":{"url":"components/ThemeChooserComponent.html","title":"component - ThemeChooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThemeChooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/theme-chooser/theme-chooser.component.ts\n\n\n    \n        Description\n    \n    \n        Presentation component allowing the user to choose between visual themes\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-theme-chooser\n            \n\n            \n                styleUrls\n                ./theme-chooser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./theme-chooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                themeChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    LocalTheme\n                                \n                                \n                                    theme\n                                \n                                \n                                    newTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:54\n                            \n                        \n                \n                    \n                        Mutator setting the internal theme member variable of\nthis component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        themeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:69\n                            \n                        \n                \n                    \n                        Emitter providing the newly selected Theme to the container\ncomponent\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        LocalTheme\n                    \n                \n\n                \n                    \n                        getLocalTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:26\n                                \n                            \n                    \n                        \n                                Helper accessor making the Theme type available in the HTML\ntemplate\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:43\n                                \n                            \n                    \n                        \n                                Accessor returning the theme passed in via the container\nhousing this component\n\n\n                                \n                                \n                                \n                                    Returns :         Theme\n\n                                \n                        \n                    \n\n                \n                    \n                        settheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:54\n                                \n                            \n                    \n                        \n                                Mutator setting the internal theme member variable of\nthis component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The theme to update with\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        newTheme\n                    \n                \n\n\n                \n                    \n                        setnewTheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:76\n                                \n                            \n                    \n                        \n                                Mutator emitting the themeChange event when the user selects a\nTheme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Theme to change to\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from \"@angular/core\";\nimport { Theme } from \"@core/model\";\n\n/**\n * Presentation component allowing the user to choose between visual themes\n */\n@Component({\n  selector: \"siltstride-theme-chooser\",\n  templateUrl: \"./theme-chooser.component.html\",\n  styleUrls: [\"./theme-chooser.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThemeChooserComponent {\n  /**\n   * Helper accessor making the {@link Theme} type available in the HTML\n   * template\n   * @returns {typeof Theme} The Theme type to be accessible\n   * @constructor\n   */\n  public get LocalTheme(): typeof Theme {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return Theme;\n  }\n\n  /**\n   * @ignore\n   * @type {Theme}\n   * @private\n   */\n  private _theme: Theme;\n\n  /**\n   * Accessor returning the [theme]{@link Theme} passed in via the container\n   * housing [this]{@link ThemeChooserComponent} component\n   * @returns {Theme} The theme\n   */\n  public get theme(): Theme {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this._theme;\n  }\n\n  /**\n   * Mutator setting the internal [theme]{@link Theme} member variable of\n   * [this]{@link ThemeChooserComponent} component\n   * @param {Theme} value The theme to update with\n   */\n  @Input()\n  public set theme(value: Theme) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid Theme!\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    this._theme = value;\n  }\n\n  /**\n   * Emitter providing the newly selected {@link Theme} to the container\n   * component\n   * @type {EventEmitter} Event containing the newly selected theme\n   * @private\n   */\n  @Output()\n  private themeChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Mutator emitting the {@link themeChange} event when the user selects a\n   * {@link Theme}\n   * @param {Theme} value Theme to change to\n   */\n  public set newTheme(value: Theme) {\n    this.themeChange.emit(value);\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        Theme\n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./theme-chooser.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Theme                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeChooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                Adapted code from:\nClarity Theming Starter &\nAngular Folder Structure\nService used to pick from Theme.Dark and Theme.Light\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                darkThemeStyleSheet\n                            \n                            \n                                    Private\n                                    Readonly\n                                themeSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setTheme\n                            \n                            \n                                    Private\n                                toggleDarkThemeStyleSheet\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    theme$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/theme.service.ts:29\n                            \n                        \n\n                \n                    \n                            Sets the application visual theme to what is saved in the user's browser\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTheme(theme: Theme)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/theme.service.ts:45\n                \n            \n\n\n            \n                \n                    Setter method changing the currently selected Theme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                Theme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Theme to change to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toggleDarkThemeStyleSheet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleDarkThemeStyleSheet(enable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/theme.service.ts:68\n                \n            \n\n\n            \n                \n                    Helper method enabling/disabling the dark-theme.css\nStyleSheet\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            darkThemeStyleSheet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StyleSheet\n\n                        \n                    \n                    \n                        \n                            Default value : document.styleSheets[4]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/theme.service.ts:22\n                            \n                        \n\n                \n                    \n                        dark-theme.css stylesheet\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            themeSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/theme.service.ts:29\n                            \n                        \n\n                \n                    \n                        Stores the currently selected Theme\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        theme$\n                    \n                \n\n                \n                    \n                        gettheme$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/theme.service.ts:59\n                                \n                            \n                    \n                        \n                                Accessor returning the currently selected Theme\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Theme } from \"@core/model\";\n\n/**\n * Adapted code from:\n *\n * [Clarity Theming Starter]{@link https://github.com/mathisscott/clarity-theming-starter/blob/clarity-css-dark-theme-switcher/src/app/app.component.ts} &\n * [Angular Folder Structure]{@link https://github.com/mathisGarberg/angular-folder-structure/blob/master/src/app/layout/nav/nav.component.ts}\n *\n * Service used to pick from {@link Theme.Dark} and {@link Theme.Light}\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ThemeService {\n  /**\n   * dark-theme.css stylesheet\n   * @type {StyleSheet} StyleSheet object referencing the Dark theme\n   * @private\n   */\n  private readonly darkThemeStyleSheet: StyleSheet = document.styleSheets[4];\n\n  /**\n   * Stores the currently selected {@link Theme}\n   * @type {BehaviorSubject} Subject containing the last chosen theme\n   * @private\n   */\n  private readonly themeSubject: BehaviorSubject;\n\n  /**\n   * Sets the application visual theme to what is saved in the user's browser\n   */\n  constructor() {\n    this.themeSubject = new BehaviorSubject(\n      (localStorage.getItem(\"siltstrideVisualTheme\") || \"light\") as Theme\n    );\n    this.toggleDarkThemeStyleSheet(this.themeSubject.value === Theme.Dark);\n  }\n\n  /**\n   * Setter method changing the currently selected {@link Theme}\n   * @param {Theme} theme Theme to change to\n   */\n  public setTheme(theme: Theme): void {\n    this.themeSubject.next(theme);\n    localStorage.setItem(\n      \"siltstrideVisualTheme\",\n      this.themeSubject.value.toString()\n    );\n    this.toggleDarkThemeStyleSheet(theme === Theme.Dark);\n  }\n\n  /**\n   * Accessor returning the currently selected {@link Theme}\n   * @returns {Observable} Observable containing the currently selected\n   * theme\n   */\n  public get theme$(): Observable {\n    return this.themeSubject.asObservable();\n  }\n\n  /**\n   * Helper method enabling/disabling the dark-theme.css\n   * [StyleSheet]{@link https://developer.mozilla.org/en-US/docs/Web/API/StyleSheet}\n   * @param {boolean} enable\n   */\n  private toggleDarkThemeStyleSheet(enable: boolean): void {\n    this.darkThemeStyleSheet.disabled = !enable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptor/token.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor used to inject TokenWrapper in the\nAuthorization header of outgoing requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptor/token.interceptor.ts:33\n                \n            \n\n\n            \n                \n                    Interceptor method adding Authorization header to outgoing requests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Intercepted request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next event to occur\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Observable containing the\noutgoing request handler event\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/service\";\nimport { concatMap, map } from \"rxjs/operators\";\nimport { TokenWrapper } from \"@core/model\";\n\n/**\n * Interceptor used to inject {@link TokenWrapper#accessToken} in the\n * Authorization header of outgoing requests\n */\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Interceptor method adding Authorization header to outgoing requests\n   * @param {HttpRequest} request Intercepted request\n   * @param {HttpHandler} next Next event to occur\n   * @returns {Observable>} Observable containing the\n   * outgoing request handler event\n   */\n  public intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const source = this.authService.token$;\n    return source.pipe(\n      map((token: TokenWrapper) => token.accessToken),\n      map((accessToken: string) =>\n        request.headers.append(\"Authorization\", `Bearer ${accessToken}`)\n      ),\n      map((httpHeaders: HttpHeaders) =>\n        request.clone({ headers: httpHeaders })\n      ),\n      concatMap((clone: HttpRequest) => next.handle(clone))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenWrapper.html":{"url":"classes/TokenWrapper.html","title":"class - TokenWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/token.model.ts\n        \n\n            \n                Description\n            \n            \n                Model wrapping Discord's Access Token response attributes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getTokenWrapperFromUrlFragment\n                            \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    tokenType\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    scope\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getTokenWrapperFromUrlFragment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenWrapperFromUrlFragment(fragment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:107\n                \n            \n\n\n            \n                \n                    Helper transforming the provided URL fragment string into the equivalent\nTokenWrapper object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL fragment to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenWrapper\n\n                    \n                    \n                        Transformed object containing the access token\nresponse attributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:131\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Token's validity status\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:24\n                                \n                            \n                    \n                        \n                                The access token\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setaccessToken(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tokenType\n                    \n                \n\n                \n                    \n                        gettokenType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:44\n                                \n                            \n                    \n                        \n                                The token type\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        settokenType(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:70\n                                \n                            \n                    \n                        \n                                The expiration date for the token\n\n\n                                \n                                \n                                \n                                    Returns :         Date\n\n                                \n                        \n                    \n\n                \n                    \n                        setexpiresIn(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scope\n                    \n                \n\n                \n                    \n                        getscope()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:90\n                                \n                            \n                    \n                        \n                                The scopes associated to the token\n\n\n                                \n                                \n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n                \n                    \n                        setscope(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:96\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  plainToClass,\n  Transform,\n  TransformFnParams,\n  Type\n} from \"class-transformer\";\n\n/**\n * Model wrapping Discord's [Access Token response]{@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-response} attributes\n */\nexport class TokenWrapper {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private access_token: string;\n\n  /**\n   * The access token\n   * @returns {string}\n   */\n  public get accessToken(): string {\n    return this.access_token;\n  }\n\n  public set accessToken(value: string) {\n    this.access_token = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private token_type: string;\n\n  /**\n   * The token type\n   * @returns {string}\n   */\n  public get tokenType(): string {\n    return this.token_type;\n  }\n\n  public set tokenType(value: string) {\n    this.token_type = value;\n  }\n\n  /**\n   * @ignore\n   * @type {Date}\n   * @private\n   */\n  @Type(() => Number)\n  @Transform((params: TransformFnParams) => {\n    const expiration = new Date();\n    expiration.setSeconds(expiration.getSeconds() + params.value);\n    return expiration;\n  })\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private expires_in: Date;\n\n  /**\n   * The expiration date for the token\n   * @returns {Date}\n   */\n  public get expiresIn(): Date {\n    return this.expires_in;\n  }\n\n  public set expiresIn(value: Date) {\n    this.expires_in = value;\n  }\n\n  /**\n   * @ignore\n   * @type {Array}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private _scope: Array;\n\n  /**\n   * The scopes associated to the token\n   * @returns {Array}\n   */\n  public get scope(): Array {\n    return this._scope;\n  }\n\n  @Type(() => String)\n  @Transform((params: TransformFnParams) => (params.value).split(\"+\"))\n  public set scope(value: Array) {\n    this._scope = value;\n  }\n\n  /**\n   * Helper transforming the provided URL fragment string into the equivalent\n   * {@link TokenWrapper} object\n   * @param {string} fragment URL fragment to transform\n   * @returns {TokenWrapper} Transformed object containing the access token\n   * response attributes\n   */\n  public static getTokenWrapperFromUrlFragment(fragment: string): TokenWrapper {\n    const properties = fragment?.split(\"&\");\n    const obj: {\n      access_token: string;\n      token_type: string;\n      expires_in: string;\n      scope: string;\n    } = {\n      access_token: \"\",\n      token_type: \"\",\n      expires_in: \"\",\n      scope: \"\"\n    };\n    properties?.forEach((value: string, index: number) => {\n      const property = properties[index]?.split(\"=\");\n      obj[property[0]] = property[1];\n    });\n    return plainToClass(TokenWrapper, obj);\n  }\n\n  /**\n   * Helper method determining the validity of the {@link TokenWrapper#accessToken}\n   * @returns {boolean} Token's validity status\n   */\n  public isValid(): boolean {\n    const now = new Date();\n    return (\n      this.accessToken != null &&\n      this.tokenType != null &&\n      this.expiresIn != null &&\n      this.scope != null &&\n      now \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n            \n                Description\n            \n            \n                User object as defined by Discord's user structure specification\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    username\n                                \n                                \n                                    discriminator\n                                \n                                \n                                    avatar\n                                \n                                \n                                    bot\n                                \n                                \n                                    system\n                                \n                                \n                                    mfaEnabled\n                                \n                                \n                                    locale\n                                \n                                \n                                    verified\n                                \n                                \n                                    email\n                                \n                                \n                                    flags\n                                \n                                \n                                    premiumType\n                                \n                                \n                                    publicFlags\n                                \n                                \n                                    avatarUrl\n                                \n                                \n                                    displayName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:18\n                                \n                            \n                    \n                        \n                                The User's id\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:36\n                                \n                            \n                    \n                        \n                                The User's username, not unique across the platform\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        discriminator\n                    \n                \n\n                \n                    \n                        getdiscriminator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:54\n                                \n                            \n                    \n                        \n                                The User's 4-digit Discord tag\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdiscriminator(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n\n                \n                    \n                        getavatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:72\n                                \n                            \n                    \n                        \n                                The User's avatar hash\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setavatar(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bot\n                    \n                \n\n                \n                    \n                        getbot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:90\n                                \n                            \n                    \n                        \n                                Whether the User belongs to an OAuth2 application\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setbot(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        system\n                    \n                \n\n                \n                    \n                        getsystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:108\n                                \n                            \n                    \n                        \n                                Whether the user is an Official Discord System user (part of the urgent message system)\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsystem(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mfaEnabled\n                    \n                \n\n                \n                    \n                        getmfaEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:126\n                                \n                            \n                    \n                        \n                                Whether the user has two factor enabled on their account\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setmfaEnabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:129\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:144\n                                \n                            \n                    \n                        \n                                The User's chosen language option\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlocale(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:147\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        verified\n                    \n                \n\n                \n                    \n                        getverified()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:162\n                                \n                            \n                    \n                        \n                                Whether the email on this account has been verified\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setverified(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:165\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:180\n                                \n                            \n                    \n                        \n                                The User's email\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setemail(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:183\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        flags\n                    \n                \n\n                \n                    \n                        getflags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:198\n                                \n                            \n                    \n                        \n                                The flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setflags(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:201\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        premiumType\n                    \n                \n\n                \n                    \n                        getpremiumType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:216\n                                \n                            \n                    \n                        \n                                The type of Nitro subscription on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setpremiumType(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:219\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        publicFlags\n                    \n                \n\n                \n                    \n                        getpublicFlags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:234\n                                \n                            \n                    \n                        \n                                The public flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setpublicFlags(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:237\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        avatarUrl\n                    \n                \n\n                \n                    \n                        getavatarUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:245\n                                \n                            \n                    \n                        \n                                Helper accessor returning the unique avatar URL for this\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayName\n                    \n                \n\n                \n                    \n                        getdisplayName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:254\n                                \n                            \n                    \n                        \n                                Helper accessor returning the User's username as displayed in Discord\nwith the User and User\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { environment } from \"@env\";\n\n/**\n * User object as defined by [Discord's user structure specification]{@link https://discord.com/developers/docs/resources/user#user-object-user-structure}\n */\nexport class User {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _id: string;\n\n  /**\n   * The {@link User}'s id\n   * @returns {string}\n   */\n  public get id(): string {\n    return this._id;\n  }\n  public set id(value: string) {\n    this._id = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _username: string;\n\n  /**\n   * The {@link User}'s username, not unique across the platform\n   * @returns {string}\n   */\n  public get username(): string {\n    return this._username;\n  }\n  public set username(value: string) {\n    this._username = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _discriminator: string;\n\n  /**\n   * The {@link User}'s 4-digit Discord tag\n   * @returns {string}\n   */\n  public get discriminator(): string {\n    return this._discriminator;\n  }\n  public set discriminator(value: string) {\n    this._discriminator = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _avatar: string;\n\n  /**\n   * The {@link User}'s [avatar hash]{@link https://discord.com/developers/docs/reference#image-formatting}\n   * @returns {string}\n   */\n  public get avatar(): string {\n    return this._avatar;\n  }\n  public set avatar(value: string) {\n    this._avatar = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _bot?: boolean;\n\n  /**\n   * Whether the {@link User} belongs to an OAuth2 application\n   * @returns {boolean}\n   */\n  public get bot(): boolean {\n    return this._bot;\n  }\n  public set bot(value: boolean) {\n    this._bot = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _system?: boolean;\n\n  /**\n   * Whether the user is an Official Discord System user (part of the urgent message system)\n   * @returns {boolean}\n   */\n  public get system(): boolean {\n    return this._system;\n  }\n  public set system(value: boolean) {\n    this._system = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private mfa_enabled?: boolean;\n\n  /**\n   * Whether the user has two factor enabled on their account\n   * @returns {boolean}\n   */\n  public get mfaEnabled(): boolean {\n    return this.mfa_enabled;\n  }\n  public set mfaEnabled(value: boolean) {\n    this.mfa_enabled = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _locale?: string;\n\n  /**\n   * The {@link User}'s chosen language option\n   * @returns {string}\n   */\n  public get locale(): string {\n    return this._locale;\n  }\n  public set locale(value: string) {\n    this._locale = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _verified?: boolean;\n\n  /**\n   * Whether the email on this account has been verified\n   * @returns {boolean}\n   */\n  public get verified(): boolean {\n    return this._verified;\n  }\n  public set verified(value: boolean) {\n    this._verified = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _email?: string;\n\n  /**\n   * The {@link User}'s email\n   * @returns {string}\n   */\n  public get email(): string {\n    return this._email;\n  }\n  public set email(value: string) {\n    this._email = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private _flags?: number;\n\n  /**\n   * The [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get flags(): number {\n    return this._flags;\n  }\n  public set flags(value: number) {\n    this._flags = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private premium_type?: number;\n\n  /**\n   * The [type of Nitro subscription]{@link https://discord.com/developers/docs/resources/user#user-object-premium-types} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get premiumType(): number {\n    return this.premium_type;\n  }\n  public set premiumType(value: number) {\n    this.premium_type = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private public_flags?: number;\n\n  /**\n   * The public [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get publicFlags(): number {\n    return this.public_flags;\n  }\n  public set publicFlags(value: number) {\n    this.public_flags = value;\n  }\n\n  /**\n   * Helper accessor returning the unique avatar URL for [this]{@link User}\n   * @returns {string} The unique avatar URL\n   */\n  public get avatarUrl(): string {\n    return `${environment.discordCdnRootUrl}avatars/${this.id}/${this.avatar}.png`;\n  }\n\n  /**\n   * Helper accessor returning the {@link User}'s username as displayed in Discord\n   * with the {@link User#username} and {@link User#discriminator}\n   * @returns {string} The display name\n   */\n  public get displayName(): string {\n    return `${this.username}#${this.discriminator}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInterfaceModule.html":{"url":"modules/UserInterfaceModule.html","title":"module - UserInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/user-interface/user-interface.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for exposing the UI component library to other areas of the application via the SharedModule\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ClarityModule } from \"@clr/angular\";\n\n/**\n * Module for exposing the UI component library to other areas of the application via the {@link SharedModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ClarityModule],\n  exports: [ClarityModule]\n})\nexport class UserInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserPreferencesComponent.html":{"url":"components/UserPreferencesComponent.html","title":"component - UserPreferencesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserPreferencesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/user-preferences/user-preferences.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-user-preferences\n            \n\n            \n                styleUrls\n                ./user-preferences.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-preferences.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    theme$\n                                \n                                \n                                    theme\n                                \n                                \n                                    title$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        theme$\n                    \n                \n\n                \n                    \n                        gettheme$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n\n                \n                    \n                        settheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title$\n                    \n                \n\n                \n                    \n                        gettitle$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:26\n                                \n                            \n                    \n                        \n                                Accessor retrieving the page title from HomeRoutingModule\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { ThemeService } from \"@core/service/theme.service\";\nimport { Observable } from \"rxjs\";\nimport { ActivatedRoute, Data } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { Theme } from \"@core/model/theme.model\";\n\n@Component({\n  selector: \"siltstride-user-preferences\",\n  templateUrl: \"./user-preferences.component.html\",\n  styleUrls: [\"./user-preferences.component.scss\"]\n})\nexport class UserPreferencesComponent implements OnInit {\n  public get theme$(): Observable {\n    return this.themeService.theme$;\n  }\n\n  public set theme(value: Theme) {\n    this.themeService.setTheme(value);\n  }\n\n  /**\n   * Accessor retrieving the page title from {@link HomeRoutingModule}\n   * @returns {Observable} Observable containing the page title\n   */\n  public get title$(): Observable {\n    return this.route.data.pipe(map((data: Data) => data[\"title\"] as string));\n  }\n\n  /**\n   * @ignore\n   * @param {ActivatedRoute} route\n   * @param {ThemeService} themeService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(\n    private route: ActivatedRoute,\n    private themeService: ThemeService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ title$ | async }}\n\n\n    \n\n    \n                \n                    ./user-preferences.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title$ | async }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPreferencesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/component/user-profile/user-profile.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:31\n                            \n                        \n                \n                    \n                        Mutator setting the user instance member for this component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:22\n                                \n                            \n                    \n                        \n                                Accessor retrieving the User object used for this component\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n                \n                    \n                        setuser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:31\n                                \n                            \n                    \n                        \n                                Mutator setting the user instance member for this component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The incoming user value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { User } from \"@core/model\";\n\n@Component({\n  selector: \"siltstride-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserProfileComponent {\n  /**\n   * @ignore\n   * @type {User}\n   * @private\n   */\n  private _user: User;\n\n  /**\n   * Accessor retrieving the {@link User} object used for this component\n   * @returns {User} The user in this component\n   */\n  public get user(): User {\n    return this._user;\n  }\n\n  /**\n   * Mutator setting the [user]{@link User} instance member for this component\n   * @param {User} value The incoming user value\n   */\n  @Input()\n  public set user(value: User) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid User object!\");\n    }\n    this._user = value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        {{ user.username }}\n        #{{ user.discriminator }}\n      \n    \n    ...\n  \n  \n    \n      Email\n    \n    \n      DM\n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                .card-media-image {\n  border-radius: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ user.username }}        #{{ user.discriminator }}              ...              Email              DM      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/user.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieve the current User's information from Discord\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the current user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { EMPTY, Observable } from \"rxjs\";\nimport { User } from \"@core/model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"@env\";\nimport { catchError, map, take } from \"rxjs/operators\";\nimport { plainToClass } from \"class-transformer\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n  /**\n   * @ignore\n   * @param {HttpClient} http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieve the current {@link User}'s information from Discord\n   * @returns {Observable} Observable containing the current user\n   * @private\n   */\n  public getCurrentUser(): Observable {\n    return this.http\n      .get(`${environment.discordApiRootUrl}/users/@me`)\n      .pipe(\n        take(1),\n        map((user: User) => plainToClass(User, user)),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        catchError((error) => EMPTY)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/helper/mouse-parallax.helper.ts\n            \n            variable\n            mouseParallaxHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/import.guard.ts\n            \n            variable\n            throwIfAlreadyLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptor/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/mock/token.mock.ts\n            \n            variable\n            mockToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/mock/user.mock.ts\n            \n            variable\n            mockUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/model/token.model.ts\n            \n            class\n            TokenWrapper\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/resolver/current-user.resolver.ts\n            \n            guard\n            CurrentUserResolver\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n            \n            component\n            AuthRedirectComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/server/server.component.ts\n            \n            component\n            ServerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/module/home/page/user-preferences/user-preferences.component.ts\n            \n            component\n            UserPreferencesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/component/theme-chooser/theme-chooser.component.ts\n            \n            component\n            ThemeChooserComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/component/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/safe-resource-url.pipe.ts\n            \n            pipe\n            SafeResourceUrlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            @webcomponents/webcomponentsjs : ^2.0.0\n        \n            class-transformer : ^0.3.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Theme   (src/.../theme.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/model/theme.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Theme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSiltstride Admin\nFolder Structure\nFollowed these guides for scaffolding folder structure:\n\nHow to define a highly scalable folder structure for your Angular project\nAngular Folder Structure\n\nThese guides have overlapping concepts\nPresentation/Container components\nImplementing this common practice to isolate business logic from presentation.\nFollowed these guides for this pattern:\n\nAn enterprise approach to the Smart and Dumb components pattern in Angular\n\nGetting Started\nAfter cloning the repository, run the following commands in a terminal to get started: \n\nnpm install\nnpm run start \n\nRunning the 2nd command starts the webpack dev server and you will see live updates.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nThemeChooserComponent \n\nThemeChooserComponent \n\nThemeChooserComponent  -->\n\nSharedModule->ThemeChooserComponent \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nSharedModule->UserProfileComponent \n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nUserPreferencesComponent\n\nUserPreferencesComponent\n\nHomeModule -->\n\nUserPreferencesComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nThemeChooserComponent\n\nThemeChooserComponent\n\nSharedModule -->\n\nThemeChooserComponent->SharedModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nSharedModule -->\n\nUserProfileComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mockToken   (src/.../token.mock.ts)\n                        \n                        \n                            mockUser   (src/.../user.mock.ts)\n                        \n                        \n                            mouseParallaxHelper   (src/.../mouse-parallax.helper.ts)\n                        \n                        \n                            throwIfAlreadyLoaded   (src/.../import.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/mock/token.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenWrapper\n\n                        \n                    \n                    \n                        \n                            Default value : new TokenWrapper()\n                        \n                    \n\n\n            \n        \n\n    src/app/core/mock/user.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : new User()\n                        \n                    \n\n\n            \n        \n\n    src/app/core/helper/mouse-parallax.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mouseParallaxHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : (\n  element: HTMLElement,\n  event: MouseEvent\n): void => {\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  element.style.setProperty(\n    \"--mouseX\",\n    `${(event.clientX * 9) / offsetWidth}%`\n  );\n  element.style.setProperty(\n    \"--mouseY\",\n    `${(event.clientY * 16) / offsetHeight}%`\n  );\n}\n                        \n                    \n\n                \n                    \n                        Visual parallax effect helper function designed to be tied to the\nGlobalEventHandlers#onmousemove\nevent of any HTMLElement\nUsed this Stack Overflow post\nto determine parallax logic\n\n                    \n                \n\n            \n        \n\n    src/app/core/import.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            throwIfAlreadyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  parentModule: CoreModule,\n  moduleName: string\n): void => {\n  if (parentModule) {\n    throw new Error(\n      `${moduleName} has already been loaded. Import ${moduleName} modules in the AppModule only.`\n    );\n  }\n}\n                        \n                    \n\n                \n                    \n                        Helper function preventing the CoreModule from being imported more than once as implemented in the Angular reference documentation\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
