var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.485,1,0.91]],["body/components/AppComponent.html",[0,0.888,1,1.605,2,1.737,3,0.298,4,0.298,5,1.57,6,1.57,7,1.57,8,1.57,9,0.254,10,2.987,11,0.875,12,4.689,13,2.058,14,1.326,15,2.738,16,2.532,17,2.718,18,2.058,19,5.231,20,2.058,21,4.689,22,0.254,23,0.032,24,0.443,25,0.298,26,0.091,27,0.952,28,1.22,29,1.442,30,0.802,31,3.579,32,2.307,33,3.579,34,1.035,35,2.058,36,1.737,37,1.57,38,2.436,39,1.57,40,1.146,41,1.57,42,1.035,43,1.57,44,1.57,45,1.035,46,1.57,47,1.124,48,1.57,49,1.124,50,1.57,51,1.035,52,1.57,53,1.035,54,1.57,55,1.035,56,1.326,57,1.57,58,1.57,59,0.018,60,0.023,61,0.018]],["title/modules/AppModule.html",[62,0.838,63,1.825]],["body/modules/AppModule.html",[1,1.755,3,0.232,4,0.232,9,0.197,22,0.44,23,0.033,24,0.344,25,0.232,26,0.071,34,0.803,42,1.584,47,1.721,49,1.721,51,1.584,53,1.584,59,0.014,60,0.019,61,0.014,62,0.739,63,3.741,64,0.873,65,1.332,66,2.199,67,2.659,68,2.659,69,1.219,70,2.319,71,2.319,72,2.319,73,2.319,74,2.319,75,4.573,76,3.176,77,2.626,78,2.626,79,3.176,80,2.287,81,1.611,82,1.611,83,2.779,84,1.731,85,3.945,86,3.293,87,1.791,88,1.731,89,2.319,90,2.319,91,2.779,92,2.319,93,2.779,94,2.779,95,2.319,96,3.945,97,2.779,98,2.319,99,2.319,100,3.293,101,1.791,102,2.319,103,2.779,104,2.779,105,3.945,106,1.791,107,2.779,108,2.319,109,2.779,110,2.779,111,2.779]],["title/classes/AppPage.html",[26,0.08,112,2.286]],["body/classes/AppPage.html",[1,1.499,3,0.349,4,0.349,9,0.297,11,1.023,17,2.427,22,0.297,23,0.033,25,0.349,26,0.143,27,1.379,36,1.92,59,0.021,60,0.026,61,0.021,87,2.699,112,3.762,113,2.699,114,3.495,115,5.182,116,4.186,117,1.315,118,1.267,119,6.159,120,4.186,121,1.379,122,4.186,123,4.186,124,4.186,125,3.495,126,4.186,127,4.186]],["title/modules/AppRoutingModule.html",[62,0.838,76,1.825]],["body/modules/AppRoutingModule.html",[0,0.817,3,0.307,4,0.307,9,0.261,22,0.423,23,0.033,24,0.456,25,0.307,26,0.094,42,1.381,51,1.381,53,1.381,59,0.018,60,0.024,61,0.018,64,1.156,69,1.616,76,2.769,84,1.616,88,2.096,89,3.073,92,3.073,95,3.073,100,3.073,101,2.373,102,3.073,128,3.682,129,3.073,130,3.988,131,3.418,132,1.935,133,3.079,134,3.682,135,3.682,136,1.935,137,4.974,138,3.682,139,3.682,140,4.777,141,4.777,142,3.073,143,3.682,144,2.672,145,1.364,146,3.682,147,3.682,148,3.682,149,3.682,150,3.682]],["title/guards/AuthGuard.html",[151,2.286,152,2.03]],["body/guards/AuthGuard.html",[3,0.264,4,0.264,9,0.224,11,0.773,17,1.832,22,0.392,23,0.032,24,0.392,25,0.264,26,0.081,28,1.472,30,1.102,40,1.055,59,0.016,60,0.021,61,0.016,118,1.055,121,0.841,132,1.661,145,1.599,152,2.781,153,2.294,154,2.638,155,0.773,156,1.738,157,4.613,158,1.387,159,3.16,160,2.999,161,5.032,162,1.148,163,3.16,164,1.893,165,1.738,166,3.16,167,4.613,168,4.762,169,4.613,170,3.16,171,4.315,172,3.602,173,3.403,174,4.315,175,4.315,176,3.602,177,3.832,178,1.543,179,4.315,180,4.315,181,2.781,182,2.999,183,2.268,184,2.781,185,3.132,186,1.893,187,3.16,188,1.515,189,2.294,190,2.638,191,1.832,192,2.037,193,1.171,194,1.661,195,1.515,196,1.893,197,3.16,198,3.16,199,2.294,200,1.661,201,0.992,202,3.16]],["title/components/AuthRedirectComponent.html",[0,0.485,42,0.91]],["body/components/AuthRedirectComponent.html",[0,0.747,1,0.652,2,1.255,3,0.188,4,0.188,5,2.127,6,0.99,7,0.99,8,0.99,9,0.24,11,0.552,14,0.836,15,2.484,16,2.28,18,1.487,20,1.487,22,0.344,23,0.032,24,0.28,25,0.188,26,0.058,27,0.6,30,1.014,34,0.652,35,1.985,36,1.676,37,0.99,38,2.234,39,0.99,40,0.828,41,0.99,42,1.308,43,2.384,44,0.99,45,0.652,46,0.99,47,0.709,48,0.99,49,0.709,50,0.99,51,0.652,52,0.99,53,0.652,54,0.99,55,0.652,56,0.836,57,0.99,58,0.99,59,0.011,60,0.017,61,0.011,101,2.623,117,0.709,118,0.995,121,0.6,125,1.884,132,1.186,136,1.186,144,1.638,155,0.995,156,1.365,158,0.99,160,2.139,161,3.397,162,0.901,173,1.454,184,1.454,189,1.638,193,1.255,195,1.95,201,1.523,203,3.397,204,1.884,205,2.829,206,4.523,207,2.46,208,2.184,209,2.46,210,2.184,211,2.139,212,4.069,213,3.388,214,2.377,215,1.487,216,3.397,217,2.256,218,2.829,219,2.168,220,2.829,221,3.388,222,1.884,223,2.256,224,1.639,225,1.781,226,2.46,227,2.916,228,1.507,229,2.829,230,1.884,231,1.884,232,2.829,233,2.139,234,1.638,235,2.256,236,2.256,237,1.884,238,2.256,239,2.256,240,2.256,241,2.256,242,1.454,243,2.46,244,2.184,245,2.46,246,1.884,247,1.638,248,3.388,249,2.256,250,2.829,251,2.256,252,2.256,253,2.954,254,1.638,255,3.388,256,1.884,257,2.829,258,2.256,259,2.256,260,3.388,261,2.256,262,2.46,263,3.283,264,2.256,265,2.829,266,1.638,267,1.638,268,1.638,269,1.884,270,1.638,271,1.638,272,2.829,273,2.184,274,2.256,275,4.848,276,4.848,277,2.256,278,2.256,279,2.256,280,2.256,281,2.256,282,1.884,283,2.256,284,2.256,285,2.256]],["title/guards/AuthRedirectResolver.html",[133,2.03,151,2.286]],["body/guards/AuthRedirectResolver.html",[3,0.305,4,0.305,9,0.26,17,2.123,22,0.412,23,0.033,24,0.454,25,0.305,26,0.093,27,0.974,28,1.249,30,1.186,40,0.895,59,0.018,60,0.024,61,0.018,118,1.164,121,0.974,132,1.925,133,3.069,144,4.214,145,1.357,153,2.659,155,0.895,156,1.918,162,0.974,164,1.607,165,1.475,167,4.846,168,4.675,169,4.846,173,3.41,182,2.944,186,2.089,188,1.756,192,2.361,193,1.357,194,1.925,196,2.321,286,3.974,287,3.057,288,3.663,289,3.663,290,2.123,291,3.742,292,3.663,293,3.663]],["title/injectables/AuthService.html",[160,1.655,186,1.382]],["body/injectables/AuthService.html",[3,0.212,4,0.212,9,0.181,11,0.906,22,0.378,23,0.033,24,0.316,25,0.212,26,0.065,27,0.678,28,1.49,30,1.231,40,0.623,59,0.013,60,0.018,61,0.013,77,1.776,98,2.126,117,1.507,118,1.3,121,0.986,145,1.889,155,0.623,156,1.493,158,1.118,160,1.948,162,1.276,164,1.118,165,1.026,176,3.093,177,2.69,178,0.8,181,3.092,182,3.103,183,2.796,184,3.806,185,3.482,186,1.626,188,1.221,191,1.476,192,1.642,195,2.299,196,1.118,200,1.339,201,1.164,205,3.093,208,2.389,209,2.69,210,2.389,215,1.626,224,1.493,228,0.944,233,3.237,234,1.849,237,3.093,290,1.476,294,1.849,295,2.126,296,3.706,297,2.69,298,3.093,299,4.368,300,4.797,301,3.706,302,2.547,303,2.69,304,3.093,305,3.706,306,3.093,307,3.706,308,2.547,309,3.706,310,3.706,311,2.148,312,2.148,313,3.093,314,1.626,315,3.706,316,3.706,317,3.706,318,5.49,319,2.126,320,2.781,321,2.547,322,2.547,323,2.547,324,3.093,325,1.642,326,2.547,327,0.869,328,0.869,329,0.869,330,0.869,331,0.944,332,1.026,333,2.547,334,2.547,335,2.547]],["title/modules/CoreModule.html",[62,0.838,77,1.509]],["body/modules/CoreModule.html",[3,0.337,4,0.337,9,0.287,22,0.412,23,0.032,24,0.501,25,0.337,26,0.103,34,1.169,59,0.02,60,0.025,61,0.02,62,1.075,64,1.269,65,1.937,66,1.937,67,2.343,68,2.343,69,2.225,77,3.003,80,2.939,81,2.343,82,2.343,84,2.225,88,2.225,106,2.605,165,1.628,336,3.374,337,3.374,338,3.209,339,4.042,340,5.07,341,2.934,342,4.042,343,5.54,344,3.374,345,2.934,346,3.374,347,4.042,348,3.374,349,4.042]],["title/components/DashboardComponent.html",[0,0.485,45,0.91]],["body/components/DashboardComponent.html",[0,0.811,1,0.8,2,1.457,3,0.231,4,0.231,5,1.215,6,1.215,7,1.215,8,1.215,9,0.196,11,0.677,13,2.187,14,1.025,15,2.605,16,2.391,18,1.726,20,1.726,22,0.279,23,0.032,24,0.343,25,0.231,26,0.071,27,1.047,29,1.844,30,0.882,34,0.8,35,1.726,36,1.457,37,1.215,38,2.187,39,1.215,40,0.962,41,1.215,42,0.8,43,1.215,44,1.215,45,1.441,46,1.215,47,0.869,48,1.215,49,0.869,50,1.215,51,0.8,52,1.215,53,0.8,54,1.215,55,0.8,56,2.085,57,1.215,58,1.215,59,0.014,60,0.019,61,0.014,118,0.962,121,0.736,155,0.677,158,1.215,162,0.736,178,1.236,193,1.457,201,0.869,211,2.406,214,1.455,215,1.726,219,2.194,224,1.585,225,2.068,228,1.457,242,3.213,254,2.009,271,2.009,273,1.784,311,2.889,314,1.726,327,1.342,328,1.342,329,1.342,330,0.944,331,1.696,332,1.844,350,2.31,351,3.284,352,3.284,353,3.934,354,3.284,355,3.284,356,3.934,357,2.856,358,3.284,359,3.934,360,3.934,361,4.577,362,3.934,363,4.577,364,2.768,365,2.768,366,2.536,367,4.985,368,3.284,369,1.455,370,1.784,371,2.768,372,1.327,373,1.604,374,1.604,375,2.768,376,2.768,377,2.768]],["title/modules/DataModule.html",[62,0.838,378,2.286]],["body/modules/DataModule.html",[3,0.379,4,0.379,9,0.322,22,0.386,23,0.032,24,0.562,25,0.379,26,0.116,59,0.022,60,0.027,61,0.022,64,1.425,66,2.175,84,1.991,88,2.389,178,1.425,327,1.548,328,1.548,329,1.548,330,1.548,331,1.681,378,3.951,379,4.538,380,3.509,381,2.925,382,3.788,383,3.788]],["title/components/FooterComponent.html",[0,0.485,47,0.989]],["body/components/FooterComponent.html",[0,0.865,1,0.957,2,1.649,3,0.276,4,0.276,5,1.452,6,1.452,7,1.452,8,1.452,9,0.235,11,0.809,13,1.953,14,1.226,15,2.699,16,2.478,18,1.953,20,1.953,22,0.235,23,0.032,24,0.41,25,0.276,26,0.084,27,1.184,30,0.742,34,0.957,35,1.953,36,1.649,37,1.452,38,2.361,39,1.452,40,1.088,41,1.452,42,0.957,43,1.452,44,1.452,45,0.957,46,1.452,47,1.69,48,1.452,49,1.039,50,1.452,51,0.957,52,1.452,53,0.957,54,1.452,55,0.957,56,1.226,57,1.452,58,1.452,59,0.016,60,0.022,61,0.016,158,1.452,178,1.398,193,1.649,201,1.039,211,2.644,214,1.739,228,1.649,314,1.953,327,1.518,328,1.518,329,1.518,330,1.128,331,1.864,332,2.027,372,1.586,373,1.918,374,1.918,384,2.762,385,5.381,386,3.231,387,5.031,388,4.452]],["title/components/HeaderComponent.html",[0,0.485,49,0.989]],["body/components/HeaderComponent.html",[0,0.88,1,0.636,2,1.232,3,0.183,4,0.183,5,0.965,6,0.965,7,0.965,8,0.965,9,0.156,11,0.813,13,1.459,14,0.815,15,2.468,16,2.36,18,1.459,20,1.459,22,0.236,23,0.033,24,0.273,25,0.183,26,0.056,27,0.884,28,0.75,29,1.614,30,0.899,32,2.143,34,0.636,35,1.459,36,1.232,37,0.965,38,1.96,39,0.965,40,0.98,41,0.965,42,0.636,43,0.965,44,0.965,45,0.636,46,0.965,47,0.691,48,0.965,49,1.402,50,0.965,51,0.636,52,0.965,53,0.636,54,0.965,55,0.636,56,1.484,57,0.965,58,0.965,59,0.011,60,0.016,61,0.011,108,1.836,117,1.044,118,1.172,121,0.884,145,2.309,155,0.538,158,0.965,162,1.188,164,0.965,165,0.886,178,0.691,195,1.593,196,0.965,200,2.651,201,0.691,215,1.459,219,2.298,224,1.339,225,2.347,228,1.654,242,2.143,254,2.413,262,1.597,263,2.413,268,1.597,270,2.413,271,2.413,273,1.418,290,1.275,312,2.323,314,1.96,320,1.275,327,0.75,328,0.75,329,0.75,330,0.75,331,0.815,332,0.886,366,2.878,383,3.345,386,2.413,389,1.836,390,3.728,391,2.413,392,3.324,393,3.324,394,4.007,395,3.324,396,3.324,397,4.007,398,3.324,399,4.007,400,4.007,401,4.007,402,4.007,403,1.836,404,2.2,405,2.2,406,3.324,407,2.2,408,2.2,409,4.007,410,1.597,411,3.345,412,3.324,413,3.324,414,2.2,415,3.324,416,2.2,417,3.324,418,2.2,419,1.597,420,2.2,421,1.836,422,1.836,423,2.2,424,2.2,425,1.597,426,2.2,427,3.324,428,3.324,429,3.324,430,2.2,431,2.2,432,1.597,433,4.007,434,3.324,435,3.324,436,2.2,437,2.2]],["title/modules/HomeModule.html",[62,0.838,438,2.03]],["body/modules/HomeModule.html",[3,0.316,4,0.316,9,0.269,22,0.426,23,0.032,24,0.47,25,0.316,26,0.097,34,1.096,45,1.737,55,1.737,59,0.019,60,0.024,61,0.019,62,1.009,64,1.191,65,1.817,66,2.578,67,2.198,68,2.198,69,1.664,78,2.879,80,2.822,81,2.198,82,2.198,84,2.136,88,2.136,90,3.165,99,3.165,380,3.138,381,2.444,438,4.111,439,3.165,440,3.165,441,3.165,442,3.481,443,3.791,444,3.791,445,3.791,446,3.791]],["title/modules/HomeRoutingModule.html",[62,0.838,442,1.825]],["body/modules/HomeRoutingModule.html",[0,0.792,3,0.345,4,0.345,9,0.294,22,0.428,23,0.033,24,0.513,25,0.345,26,0.105,45,1.488,55,1.488,56,1.533,59,0.02,60,0.025,61,0.02,64,1.299,69,1.815,84,1.815,88,2.258,129,3.453,130,4.294,131,3.609,132,2.175,136,2.175,137,4.294,152,3.609,157,4.294,242,2.667,442,2.982,447,4.137,448,4.137,449,4.137,450,4.137,451,4.137]],["title/components/LayoutComponent.html",[0,0.485,51,0.91]],["body/components/LayoutComponent.html",[0,0.893,1,0.769,2,1.416,3,0.222,4,0.222,5,1.166,6,1.166,7,1.166,8,1.166,9,0.189,11,0.65,13,1.677,14,0.985,15,2.582,16,2.37,18,1.677,20,1.677,22,0.368,23,0.033,24,0.329,25,0.222,26,0.068,27,1.017,30,0.857,34,0.769,35,1.677,36,1.416,37,1.166,38,2.147,39,1.166,40,0.934,41,1.166,42,0.769,43,1.166,44,1.166,45,0.769,46,1.166,47,0.835,48,1.166,49,1.405,50,1.166,51,1.415,52,1.166,53,0.769,54,1.166,55,0.769,56,0.985,57,1.166,58,1.166,59,0.013,60,0.019,61,0.013,117,1.2,118,0.934,121,1.017,132,1.397,145,2.06,155,0.65,162,0.707,173,1.713,178,1.405,181,2.463,182,2.725,183,1.397,188,1.274,191,1.541,193,1.416,194,1.397,201,0.835,211,2.352,214,1.397,215,1.677,224,1.54,225,2.009,228,1.416,232,3.19,290,1.541,314,1.677,325,1.713,327,1.526,328,1.526,329,1.526,330,1.303,331,1.813,332,1.803,366,2.463,372,1.274,373,1.541,374,1.541,382,2.219,386,3.552,391,3.552,403,2.219,452,2.219,453,4.893,454,3.822,455,2.774,456,4.893,457,3.822,458,3.822,459,4.475,460,3.822,461,2.658,462,3.822,463,2.658,464,2.658,465,2.658]],["title/components/LoginComponent.html",[0,0.485,53,0.91]],["body/components/LoginComponent.html",[0,0.759,1,0.679,2,1.293,3,0.196,4,0.196,5,1.828,6,1.03,7,1.03,8,1.03,9,0.167,11,0.574,13,2.024,14,0.869,15,2.508,16,2.365,18,1.531,20,1.531,22,0.296,23,0.032,24,0.291,25,0.196,26,0.06,27,0.928,29,1.678,30,0.934,32,2.249,34,0.679,35,2.024,36,1.709,37,1.03,38,2.267,39,1.03,40,0.853,41,1.03,42,0.679,43,1.03,44,1.03,45,0.679,46,1.03,47,0.737,48,1.03,49,0.737,50,1.03,51,0.679,52,1.03,53,1.334,54,1.03,55,0.679,56,0.869,57,1.03,58,1.03,59,0.012,60,0.017,61,0.012,117,0.737,118,1.128,121,0.928,142,4.115,155,0.574,158,1.03,162,0.928,178,1.096,193,1.293,201,1.449,208,3.177,209,3.024,210,2.685,211,2.189,214,1.234,215,1.531,216,3.477,219,1.997,222,1.959,224,1.986,225,2.424,226,2.533,227,2.973,228,1.826,229,2.913,230,1.959,231,1.959,243,2.533,244,2.249,245,2.533,246,1.959,247,1.704,250,1.959,262,1.704,263,3.348,265,2.913,266,2.533,267,2.533,268,1.704,269,1.959,270,1.704,273,1.513,282,1.959,311,3.101,314,1.531,327,1.19,328,1.19,329,1.19,330,0.8,331,1.543,332,1.678,351,2.913,352,2.913,354,2.913,366,2.249,368,2.913,369,1.234,370,1.513,372,1.125,373,1.36,374,1.36,432,2.533,466,1.959,467,3.489,468,3.489,469,3.489,470,3.489,471,4.166,472,3.489,473,4.166,474,2.347,475,2.347,476,2.347,477,2.347,478,3.489,479,3.489,480,2.347,481,2.347,482,2.347,483,2.347]],["title/pipes/SafeResourceUrlPipe.html",[484,1.825,485,1.825]],["body/pipes/SafeResourceUrlPipe.html",[3,0.297,4,0.297,9,0.253,11,1.143,14,1.319,22,0.332,23,0.032,24,0.441,25,0.297,26,0.091,28,1.214,29,2.232,30,1.048,40,1.276,59,0.018,60,0.023,61,0.018,86,2.972,87,2.295,117,1.118,118,1.143,121,0.947,156,1.434,162,0.947,164,1.562,165,1.434,193,1.319,194,1.871,196,1.562,219,2.83,484,3.211,485,2.709,486,3.56,487,3.901,488,4.525,489,2.972,490,4.674,491,5.905,492,4.624,493,4.674,494,5.905,495,2.972,496,4.674,497,3.56,498,4.674,499,3.56,500,4.674,501,4.674,502,4.674,503,4.674,504,4.674,505,3.56,506,3.56,507,3.56]],["title/components/ServerComponent.html",[0,0.485,55,0.91]],["body/components/ServerComponent.html",[0,0.752,1,0.902,2,1.584,3,0.26,4,0.26,5,1.368,6,1.368,7,1.368,8,1.368,9,0.221,14,1.155,15,2.669,16,2.45,18,1.876,20,1.876,22,0.221,23,0.032,24,0.386,25,0.26,26,0.079,30,1.094,34,0.902,35,1.876,36,1.584,37,1.368,38,2.304,39,1.368,40,1.045,41,1.368,42,0.902,43,1.368,44,1.368,45,0.902,46,1.368,47,0.979,48,1.368,49,0.979,50,1.368,51,0.902,52,1.368,53,0.902,54,1.368,55,1.518,56,2.156,57,1.368,58,1.368,59,0.015,60,0.021,61,0.015,118,0.762,155,0.762,156,1.722,158,2.141,162,1.137,178,1.343,193,1.584,201,1.343,211,2.565,214,2.76,228,1.584,327,1.458,328,1.458,329,1.458,330,1.063,331,1.808,332,1.966,372,1.494,373,1.807,374,1.807,508,2.603,509,4.879,510,4.275,511,3.118,512,3.118,513,3.569,514,4.382,515,5.25,516,4.275,517,5.25,518,4.275,519,4.275,520,4.275]],["title/modules/SharedModule.html",[62,0.838,78,1.509]],["body/modules/SharedModule.html",[3,0.314,4,0.314,9,0.267,22,0.415,23,0.032,24,0.466,25,0.314,26,0.096,34,1.087,59,0.019,60,0.024,61,0.019,62,1,64,1.181,65,1.803,66,2.568,67,2.18,68,2.18,69,2.351,78,3.016,80,2.807,81,2.18,82,2.18,84,2.125,88,2.125,338,3.349,344,3.139,345,2.73,346,3.139,380,3.122,381,2.424,485,3.693,488,2.73,521,3.139,522,3.139,523,3.761,524,3.139,525,3.761,526,5.357,527,3.761,528,3.761,529,3.761]],["title/interceptors/TokenInterceptor.html",[79,1.825,530,2.286]],["body/interceptors/TokenInterceptor.html",[3,0.242,4,0.339,9,0.206,11,0.994,22,0.394,23,0.033,24,0.359,25,0.242,26,0.074,27,0.771,28,0.989,29,1.168,30,1.053,40,0.709,59,0.014,60,0.02,61,0.014,79,2.356,106,1.869,117,0.91,118,0.994,121,0.771,136,2.137,155,0.709,156,1.638,160,2.468,162,0.771,164,1.272,165,1.168,178,1.791,182,2.92,183,2.137,186,1.784,188,1.39,189,2.104,190,2.42,191,1.68,193,1.074,194,1.524,196,1.784,228,1.074,233,2.468,234,2.104,244,3.28,303,2.951,314,1.784,325,1.869,327,0.989,328,0.989,329,0.989,330,0.989,331,1.074,332,1.168,390,4.248,530,3.694,531,2.899,532,2.42,533,4.065,534,5.088,535,5.555,536,5.088,537,4.695,538,2.899,539,5.555,540,5.358,541,2.899,542,4.065,543,5.704,544,4.065,545,4.065,546,4.065,547,2.899,548,4.065,549,4.695,550,2.899,551,2.42,552,2.899,553,4.065,554,2.899,555,2.899,556,2.899,557,2.899,558,2.899,559,2.899,560,2.42,561,2.899,562,2.899,563,2.899,564,2.899,565,2.899]],["title/classes/TokenWrapper.html",[26,0.08,233,1.655]],["body/classes/TokenWrapper.html",[3,0.156,4,0.156,9,0.133,11,0.717,22,0.133,23,0.033,25,0.156,26,0.075,27,1.09,28,1.835,29,2.446,30,1.179,40,0.717,59,0.009,60,0.014,61,0.009,113,1.205,117,0.921,118,1.382,121,1.314,136,2.34,155,0.717,156,1.181,162,1.314,164,1.287,165,1.181,177,2.128,178,1.287,183,1.541,184,3.644,185,2.974,195,2.451,196,0.82,199,2.626,200,1.541,201,0.587,207,2.128,210,1.205,215,1.287,219,1.964,220,3.943,224,1.651,233,2.688,298,1.56,303,2.128,304,2.448,306,2.448,312,2.375,313,4.123,320,1.7,324,2.448,327,1.397,328,1.397,329,1.397,330,1.397,419,1.357,421,3.42,492,2.448,495,3.02,551,1.56,560,3.02,566,1.56,567,2.932,568,2.932,569,4.098,570,4.098,571,3.618,572,2.932,573,4.098,574,3.618,575,3.618,576,4.451,577,2.932,578,1.869,579,2.932,580,2.932,581,2.932,582,1.869,583,1.869,584,1.869,585,1.869,586,1.869,587,1.869,588,1.869,589,4.098,590,5.259,591,1.869,592,1.869,593,2.932,594,4.723,595,1.869,596,1.869,597,1.56,598,3.618,599,1.357,600,1.869,601,1.869,602,1.869,603,4.098,604,3.618,605,4.098,606,3.618,607,3.618,608,4.098,609,3.618,610,1.869,611,3.618,612,1.869,613,2.448,614,2.932,615,1.869,616,1.869,617,3.618,618,1.869,619,1.869,620,1.869,621,2.448,622,1.869,623,1.869,624,2.932,625,1.869,626,1.869,627,1.869,628,2.932,629,1.869,630,1.869,631,1.869,632,1.869,633,1.869,634,1.869,635,2.932,636,1.869,637,1.869,638,1.869,639,1.869]],["title/classes/User.html",[26,0.08,145,1.166]],["body/classes/User.html",[3,0.098,4,0.098,9,0.083,11,0.287,13,0.879,22,0.083,23,0.033,25,0.098,26,0.03,27,1.322,28,1.946,29,2.516,30,1.295,40,1.158,59,0.006,60,0.01,61,0.006,113,0.757,117,1.561,118,1.485,121,1.371,145,2.033,155,0.287,162,1.537,164,2.018,165,1.853,172,3.551,195,2.753,199,4.237,200,2.884,201,1.444,207,1.454,208,1.292,215,0.879,219,1.256,224,1.247,225,1.627,226,2.247,257,0.981,311,2.192,312,2.192,369,0.618,370,0.757,410,3.338,411,3.551,419,3.338,425,3.338,455,1.902,613,4.484,621,2.9,640,0.981,641,1.175,642,4.038,643,2.62,644,2.62,645,4.038,646,2.62,647,2.62,648,3.474,649,4.038,650,4.038,651,2.62,652,2.62,653,2.62,654,2.62,655,1.175,656,1.175,657,1.175,658,1.175,659,1.175,660,1.175,661,3.474,662,2.004,663,1.175,664,1.175,665,1.175,666,1.175,667,2.004,668,2.004,669,2.004,670,1.175,671,1.175,672,1.175,673,1.175,674,1.175,675,1.175,676,1.175,677,1.175,678,1.175,679,2.004,680,1.175,681,1.175,682,1.175,683,1.175,684,2.004,685,2.004,686,2.004,687,2.004,688,1.175,689,1.175,690,1.175,691,1.175,692,2.004,693,2.004,694,2.004,695,4.599,696,1.175,697,1.175,698,2.004,699,2.004,700,2.004,701,1.175,702,1.175,703,1.175,704,1.175,705,1.175,706,1.175,707,1.175,708,1.175,709,1.175,710,1.175,711,1.175,712,1.175,713,1.175,714,1.175,715,1.175,716,1.175,717,2.004,718,1.175,719,1.175,720,1.175,721,1.175,722,1.175,723,1.175,724,1.175,725,2.004,726,1.175,727,3.095,728,1.175,729,2.004,730,1.175,731,1.175,732,2.004,733,1.175,734,1.175,735,2.004,736,1.175,737,1.175,738,1.175,739,1.175,740,1.175,741,2.004,742,1.175,743,1.175,744,2.004,745,1.175,746,1.175,747,2.004,748,1.175,749,1.175,750,1.175,751,1.175,752,2.004,753,1.175,754,1.175,755,2.004,756,1.175,757,1.175,758,2.004,759,1.175,760,1.175,761,2.004,762,2.004,763,1.175,764,1.175,765,1.175,766,1.175,767,1.175,768,1.175,769,1.175,770,1.175,771,1.175,772,1.175,773,1.175,774,1.175,775,1.175]],["title/modules/UserInterfaceModule.html",[62,0.838,338,1.655]],["body/modules/UserInterfaceModule.html",[0,0.801,3,0.351,4,0.351,9,0.299,11,1.03,13,2.283,22,0.401,23,0.032,24,0.522,25,0.351,26,0.107,59,0.021,60,0.026,61,0.021,62,1.384,64,1.323,66,2.019,69,1.848,78,2.493,84,1.848,88,2.283,117,1.323,338,2.734,345,3.057,380,3.353,381,2.715,776,4.212,777,4.212,778,5.202,779,5.202,780,5.202,781,5.202,782,5.202,783,5.644,784,4.212]],["title/injectables/UserService.html",[186,1.382,291,2.03]],["body/injectables/UserService.html",[3,0.287,4,0.287,9,0.244,17,1.993,22,0.423,23,0.033,24,0.426,25,0.287,26,0.116,27,0.915,30,1.15,59,0.017,60,0.023,61,0.017,106,2.216,117,1.08,118,1.117,121,0.915,145,2.107,155,0.841,156,1.84,162,0.915,178,1.08,181,3.522,182,3.073,183,2.401,186,2.004,188,1.648,191,1.993,192,2.216,194,1.807,195,1.648,196,1.509,218,3.813,290,1.993,291,2.944,294,2.496,311,2.648,325,2.216,327,1.173,328,1.173,329,1.173,330,1.173,331,1.274,332,1.84,358,3.813,369,1.807,370,2.216,410,2.496,425,2.496,484,1.993,597,2.87,599,2.496,785,2.87,786,5.465,787,3.438,788,5.129,789,3.438,790,3.438,791,4.567,792,3.438,793,3.438,794,3.438,795,3.438,796,3.438,797,3.438,798,3.438,799,3.438]],["title/coverage.html",[800,3.593]],["body/coverage.html",[0,0.933,1,0.992,9,0.243,10,2.863,23,0.032,26,0.131,28,1.17,42,0.992,45,0.992,47,1.077,49,1.077,51,0.992,53,0.992,55,0.992,59,0.017,60,0.023,61,0.017,79,1.988,101,2.211,112,2.49,114,2.863,133,2.211,145,1.271,151,3.31,152,2.211,154,2.863,160,1.803,186,2.001,203,2.863,204,2.863,227,2.211,233,1.803,253,3.718,272,5.327,286,2.863,287,2.863,291,2.211,295,2.863,320,1.988,341,2.49,350,2.863,369,1.803,384,2.863,389,2.863,432,2.49,452,2.863,466,2.863,484,1.988,485,1.988,487,2.863,488,2.49,489,2.863,508,2.863,530,2.49,532,2.863,566,2.863,640,2.863,785,2.863,800,2.863,801,2.863,802,3.43,803,3.43,804,6.192,805,3.43,806,3.43,807,2.863,808,2.863,809,5.123,810,3.43,811,3.43,812,2.863,813,5.123,814,3.43,815,3.43,816,3.43,817,2.863,818,3.43,819,3.43,820,3.43]],["title/dependencies.html",[65,1.816,821,2.626]],["body/dependencies.html",[14,1.737,23,0.032,26,0.12,59,0.023,60,0.027,61,0.023,65,2.248,188,2.248,599,3.404,822,4.69,823,4.69,824,4.69,825,4.69,826,4.69,827,4.69,828,4.69,829,4.69,830,4.69,831,4.69,832,4.69,833,4.69,834,4.69]],["title/index.html",[155,0.642,835,2.192,836,2.192]],["body/index.html",[2,1.927,16,1.697,23,0.026,32,2.715,56,1.56,59,0.021,60,0.026,61,0.021,297,3.057,355,3.516,372,2.705,391,3.057,455,4.279,513,4.342,514,3.516,835,3.516,836,3.516,837,5.894,838,5.202,839,5.644,840,4.212,841,4.212,842,4.212,843,4.212,844,4.212,845,4.212,846,4.212,847,4.212,848,4.212,849,4.212,850,4.212,851,4.212,852,5.202,853,4.212,854,4.212,855,4.212,856,4.212,857,4.212,858,4.212,859,4.212,860,4.212,861,5.202,862,4.212,863,4.212,864,4.212,865,4.212,866,4.212,867,4.212]],["title/modules.html",[64,1.352]],["body/modules.html",[23,0.027,59,0.022,60,0.027,61,0.022,63,2.614,64,1.416,76,2.614,77,2.161,78,2.161,87,3.889,338,2.37,378,3.273,438,2.906,442,2.614,868,6.034,869,6.034,870,6.394,871,6.034,872,6.034]],["title/overview.html",[357,3.124]],["body/overview.html",[1,1.695,2,1.187,23,0.032,34,0.926,42,1.431,45,1.431,47,1.554,49,1.554,51,1.431,53,1.431,55,1.431,59,0.016,60,0.022,61,0.016,62,0.852,63,3.772,64,1.006,65,1.535,66,1.535,67,1.857,68,1.857,69,1.406,70,2.674,71,2.674,72,2.674,73,2.674,74,2.674,75,4.13,76,2.868,77,2.662,78,2.93,79,2.868,80,2.524,81,1.857,82,1.857,113,2.065,153,2.325,253,2.325,256,2.674,294,2.325,336,2.674,337,2.674,338,3.134,357,2.325,438,3.941,439,2.674,440,2.674,441,2.674,442,2.868,484,1.857,485,3.397,521,2.674,522,2.674,524,2.674,873,4.355,874,4.355,875,3.203]],["title/routes.html",[131,2.775]],["body/routes.html",[23,0.029,59,0.025,60,0.029,61,0.025,131,3.286]],["title/miscellaneous/variables.html",[876,2.192,877,3.163]],["body/miscellaneous/variables.html",[22,0.25,23,0.033,28,1.581,29,1.416,36,1.303,59,0.017,60,0.023,61,0.017,63,2.038,64,1.104,77,2.222,136,2.436,155,0.86,200,2.726,201,1.456,224,1.867,227,2.988,228,1.717,243,3.365,244,2.988,245,2.552,247,3.365,266,2.552,267,2.552,297,2.552,312,2.038,314,1.543,319,4.329,320,2.038,341,3.365,348,3.869,369,2.436,372,1.685,422,2.935,801,2.935,807,2.935,808,3.869,812,2.935,817,2.935,876,2.935,877,2.935,878,3.516,879,3.516,880,3.516,881,3.516,882,3.516,883,3.516,884,4.635,885,3.516,886,4.635,887,3.516,888,4.635,889,3.516,890,3.516,891,3.516,892,3.516,893,3.516,894,3.516,895,3.516,896,3.516,897,3.516,898,3.516,899,3.516,900,3.516,901,3.516,902,5.186,903,3.516,904,3.516,905,3.516,906,3.516,907,3.516,908,3.516,909,3.516,910,3.516,911,3.516,912,3.516]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":253,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1.13",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":256,"title":{},"body":{"components/AuthRedirectComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":282,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["11px",{"_index":435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["150",{"_index":270,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["16",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":874,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":875,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["36px",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":667,"title":{},"body":{"classes/User.html":{}}}],["4/4",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["500px",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6.5.4",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":873,"title":{},"body":{"overview.html":{}}}],["9",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_avatar",{"_index":737,"title":{},"body":{"classes/User.html":{}}}],["_bot",{"_index":743,"title":{},"body":{"classes/User.html":{}}}],["_discriminator",{"_index":734,"title":{},"body":{"classes/User.html":{}}}],["_email",{"_index":757,"title":{},"body":{"classes/User.html":{}}}],["_flags",{"_index":760,"title":{},"body":{"classes/User.html":{}}}],["_id",{"_index":728,"title":{},"body":{"classes/User.html":{}}}],["_locale",{"_index":751,"title":{},"body":{"classes/User.html":{}}}],["_scope",{"_index":623,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["_system",{"_index":746,"title":{},"body":{"classes/User.html":{}}}],["_user",{"_index":416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["_username",{"_index":731,"title":{},"body":{"classes/User.html":{}}}],["_verified",{"_index":754,"title":{},"body":{"classes/User.html":{}}}],["access",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["access_token",{"_index":609,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["accessor",{"_index":225,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["accessors",{"_index":215,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":560,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["account",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["activated",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":232,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LayoutComponent.html":{}}}],["activatedroutesnapshot",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{}}}],["actual_component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["adding",{"_index":542,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["admin",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["already",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":381,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["angular/common/http",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":527,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["angular/router",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{}}}],["app",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/dashboard",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apppage",{"_index":112,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approach",{"_index":854,"title":{},"body":{"index.html":{}}}],["approutingmodule",{"_index":76,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["areas",{"_index":781,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["array",{"_index":594,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["associated",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["attempting",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attributes",{"_index":570,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["auth",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["auth/redirect",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated",{"_index":353,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authentication",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["authguard",{"_index":152,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["authorization",{"_index":534,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authredirectcomponent",{"_index":42,"title":{"components/AuthRedirectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authredirectcontainer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["authredirectresolver",{"_index":133,"title":{"guards/AuthRedirectResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthRedirectResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":160,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["auto",{"_index":269,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["available",{"_index":872,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["avatar(value",{"_index":742,"title":{},"body":{"classes/User.html":{}}}],["avatarurl",{"_index":653,"title":{},"body":{"classes/User.html":{}}}],["b",{"_index":519,"title":{},"body":{"components/ServerComponent.html":{}}}],["background",{"_index":263,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["backgroundimageurl",{"_index":397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["based",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bearer",{"_index":559,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bears",{"_index":456,"title":{},"body":{"components/LayoutComponent.html":{}}}],["behaviorsubject",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["being",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belongs",{"_index":679,"title":{},"body":{"classes/User.html":{}}}],["blacklist",{"_index":622,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["blacklist,id",{"_index":607,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["block",{"_index":258,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blur(5px",{"_index":276,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bot",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["bot(value",{"_index":745,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":870,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/SafeResourceUrlPipe.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":122,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["business",{"_index":851,"title":{},"body":{"index.html":{}}}],["by.css(\"siltstride",{"_index":124,"title":{},"body":{"classes/AppPage.html":{}}}],["bypasses",{"_index":498,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["call",{"_index":383,"title":{},"body":{"modules/DataModule.html":{},"components/HeaderComponent.html":{}}}],["called",{"_index":259,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["canactivate",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{}}}],["canactivate(next",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror((error",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["center",{"_index":285,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["changedetection",{"_index":392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changedetectionstrategy",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["children",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chosen",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["claritymodule",{"_index":783,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":113,"title":{},"body":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"overview.html":{}}}],["cloning",{"_index":857,"title":{},"body":{"index.html":{}}}],["clr",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clr/angular",{"_index":784,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["cluster_appmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":336,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":337,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":439,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":440,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":441,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":521,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":524,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":522,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":523,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":602,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["common",{"_index":848,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":380,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{},"overview.html":{}}}],["concatmap",{"_index":550,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concatmap((clone",{"_index":564,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concepts",{"_index":845,"title":{},"body":{"index.html":{}}}],["configured",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"modules/HomeRoutingModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["constructor(@optional",{"_index":347,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(authservice",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"components/LayoutComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["container",{"_index":453,"title":{},"body":{"components/LayoutComponent.html":{}}}],["containing",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["content",{"_index":125,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{}}}],["convention",{"_index":619,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convention,no",{"_index":604,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["core/core.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["core/guard/auth.guard",{"_index":449,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["core/helper/mouse",{"_index":230,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["core/http/auth.service",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["core/http/user.service",{"_index":292,"title":{},"body":{"guards/AuthRedirectResolver.html":{}}}],["core/import.guard",{"_index":342,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/interceptor/token.interceptor",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["core/model/token.model",{"_index":234,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{}}}],["core/model/user.model",{"_index":290,"title":{},"body":{"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"injectables/UserService.html":{}}}],["core/resolver/auth",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":77,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":800,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["css",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["current",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"injectables/UserService.html":{}}}],["dangle",{"_index":620,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dangle,id",{"_index":606,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dashboard",{"_index":242,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["dashboard.component.html",{"_index":362,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":361,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":45,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":462,"title":{},"body":{"components/LayoutComponent.html":{}}}],["data.user",{"_index":465,"title":{},"body":{"components/LayoutComponent.html":{}}}],["datamodule",{"_index":378,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{}}}],["date",{"_index":590,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["default",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":841,"title":{},"body":{"index.html":{}}}],["defined",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["defining",{"_index":454,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["designed",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determines",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["determining",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["dev",{"_index":865,"title":{},"body":{"index.html":{}}}],["digit",{"_index":668,"title":{},"body":{"classes/User.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["disable",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["discord",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["discord's",{"_index":207,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["discordoauthimplicitflowurl",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["discordserverwidgeturl",{"_index":363,"title":{},"body":{"components/DashboardComponent.html":{}}}],["discriminator",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["discriminator(value",{"_index":736,"title":{},"body":{"classes/User.html":{}}}],["display",{"_index":257,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/User.html":{}}}],["displayed",{"_index":725,"title":{},"body":{"classes/User.html":{}}}],["displayname",{"_index":654,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":517,"title":{},"body":{"components/ServerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["domsanitizer",{"_index":504,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer's",{"_index":499,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer}'s",{"_index":506,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["dumb",{"_index":856,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":115,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts",{"_index":114,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["effect",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"miscellaneous/variables.html":{}}}],["element.offsetheight",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.offsetwidth",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.style.setproperty",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elements",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":649,"title":{},"body":{"classes/User.html":{}}}],["email(value",{"_index":759,"title":{},"body":{"classes/User.html":{}}}],["empty",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["enabled",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["enterprise",{"_index":853,"title":{},"body":{"index.html":{}}}],["env",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.discordcdnrooturl}avatars/${this.id}/${this.avatar}.png",{"_index":772,"title":{},"body":{"classes/User.html":{}}}],["environment.discordoauthimplicitflowurl",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.discordserverwidgeturl",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["equivalent",{"_index":580,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["error",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"must",{"_index":423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eslint",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["eslint/naming",{"_index":603,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["eslint/no",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["event",{"_index":244,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["event.clientx",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.clienty",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":589,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiration.setseconds(expiration.getseconds",{"_index":615,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expires_in",{"_index":617,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiresin",{"_index":575,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["exposing",{"_index":778,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["factor",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":275,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["fixed",{"_index":251,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["flags",{"_index":650,"title":{},"body":{"classes/User.html":{}}}],["flags(value",{"_index":763,"title":{},"body":{"classes/User.html":{}}}],["flags]{@link",{"_index":761,"title":{},"body":{"classes/User.html":{}}}],["float",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["folder",{"_index":837,"title":{},"body":{"index.html":{}}}],["followed",{"_index":838,"title":{},"body":{"index.html":{}}}],["footer",{"_index":385,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["footer.component.html",{"_index":388,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":387,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":47,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreground",{"_index":248,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["formatting",{"_index":740,"title":{},"body":{"classes/User.html":{}}}],["formsmodule",{"_index":526,"title":{},"body":{"modules/SharedModule.html":{}}}],["fragment",{"_index":220,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["fragment?.split",{"_index":627,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["full",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":228,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["get(`${environment.discordapirooturl}/users/@me",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["getaccesstoken",{"_index":583,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getavatar",{"_index":672,"title":{},"body":{"classes/User.html":{}}}],["getavatarurl",{"_index":721,"title":{},"body":{"classes/User.html":{}}}],["getbackgroundimageurl",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbot",{"_index":677,"title":{},"body":{"classes/User.html":{}}}],["getcurrentuser",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["getdiscordoauthimplicitflowurl",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["getdiscordserverwidgeturl",{"_index":364,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getdiscriminator",{"_index":665,"title":{},"body":{"classes/User.html":{}}}],["getdisplayname",{"_index":723,"title":{},"body":{"classes/User.html":{}}}],["getemail",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["getexpiresin",{"_index":587,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getflags",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":655,"title":{},"body":{"classes/User.html":{}}}],["getlocale",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["getmfaenabled",{"_index":690,"title":{},"body":{"classes/User.html":{}}}],["getonmousemove",{"_index":222,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["getpremiumtype",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["getpublicflags",{"_index":719,"title":{},"body":{"classes/User.html":{}}}],["getscope",{"_index":591,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getsystem",{"_index":682,"title":{},"body":{"classes/User.html":{}}}],["gettext",{"_index":127,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":835,"title":{"index.html":{}},"body":{"index.html":{}}}],["gettitletext",{"_index":123,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokentype",{"_index":585,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment",{"_index":572,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment(fragment",{"_index":577,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getuser",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{}}}],["getusername",{"_index":659,"title":{},"body":{"classes/User.html":{}}}],["getverified",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["globaleventhandlers#onmousemove",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":210,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{}}}],["grant]{@link",{"_index":235,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["graph",{"_index":871,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":281,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["guard",{"_index":151,"title":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"overview.html":{}}}],["guides",{"_index":839,"title":{},"body":{"index.html":{}}}],["handler",{"_index":546,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["handling",{"_index":205,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["handshake",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["hash",{"_index":674,"title":{},"body":{"classes/User.html":{}}}],["hash]{@link",{"_index":738,"title":{},"body":{"classes/User.html":{}}}],["header",{"_index":390,"title":{},"body":{"components/HeaderComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["header'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["header.component.html",{"_index":395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":49,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":563,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["height",{"_index":273,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["helper",{"_index":224,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["highly",{"_index":842,"title":{},"body":{"index.html":{}}}],["home",{"_index":444,"title":{},"body":{"modules/HomeModule.html":{}}}],["homemodule",{"_index":438,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":442,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["htmlelement",{"_index":243,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["http_interceptors",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":343,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":547,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":540,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":549,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":548,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":539,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["https://discord.com/developers/docs/reference#image",{"_index":739,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/resources/user#user",{"_index":727,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#authorization",{"_index":601,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#implicit",{"_index":236,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["icon",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{}}}],["id",{"_index":621,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["id(value",{"_index":730,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["image",{"_index":262,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["implemented",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementing",{"_index":847,"title":{},"body":{"index.html":{}}}],["implements",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["implicit",{"_index":209,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["import(\\\"@module/home/home.module\\\").then((m",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imported",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["incoming",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["index",{"_index":155,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":358,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserService.html":{}}}],["initiate",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject",{"_index":533,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["injectable",{"_index":186,"title":{"injectables/AuthService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":261,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["inner",{"_index":553,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["innocuous",{"_index":356,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inputs",{"_index":396,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inserted",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instance",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["intercept",{"_index":537,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":538,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercepted",{"_index":544,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":530,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":531,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface.module",{"_index":346,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["interface.module.ts",{"_index":777,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["interface/user",{"_index":345,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["isolate",{"_index":850,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":573,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["isvalidtoken",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":284,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["jane",{"_index":520,"title":{},"body":{"components/ServerComponent.html":{}}}],["john",{"_index":516,"title":{},"body":{"components/ServerComponent.html":{}}}],["landing",{"_index":351,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":386,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["layout.component.html",{"_index":460,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":459,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/auth",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/footer/footer.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header/header.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout/layout.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/login/login.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layoutcomponent",{"_index":51,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":252,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["library",{"_index":780,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["lifecycle",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["line",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["link",{"_index":117,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{}}}],["live",{"_index":866,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locale",{"_index":647,"title":{},"body":{"classes/User.html":{}}}],["locale(value",{"_index":753,"title":{},"body":{"classes/User.html":{}}}],["log",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":463,"title":{},"body":{"components/LayoutComponent.html":{}}}],["logic",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["login.component.html",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":436,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m.homemodule",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["map((accesstoken",{"_index":557,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((httpheaders",{"_index":561,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((token",{"_index":555,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((user",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{}}}],["match",{"_index":608,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["matching",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":687,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"dependencies.html":{}}}],["method",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["method,@typescript",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["methods",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["mfa_enabled",{"_index":749,"title":{},"body":{"classes/User.html":{}}}],["mfaenabled",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["min",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["miscellaneou",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":876,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":567,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["module/home/page/dashboard/dashboard.component",{"_index":448,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/server/server.component",{"_index":450,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["modulename",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouse",{"_index":246,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["mouseevent",{"_index":245,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mouseparallaxhelper",{"_index":227,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mousex",{"_index":266,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mousey",{"_index":267,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["moz",{"_index":277,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["ms",{"_index":279,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["multi",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["mutator",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["navigated",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigateto",{"_index":120,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["next.handle(clone",{"_index":565,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["ngoninit",{"_index":214,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["nitro",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["now",{"_index":635,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["npm",{"_index":862,"title":{},"body":{"index.html":{}}}],["null",{"_index":421,"title":{},"body":{"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{}}}],["number",{"_index":613,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["o",{"_index":278,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["oauth2",{"_index":208,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["obj",{"_index":628,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["obj[property[0",{"_index":632,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["object",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["occur",{"_index":545,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["official",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["offsetheight",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offsetwidth",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":859,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":211,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["onmousemove",{"_index":216,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["option",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["optional",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outgoing",{"_index":535,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["overflow",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlapping",{"_index":844,"title":{},"body":{"index.html":{}}}],["overview",{"_index":357,"title":{"overview.html":{}},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["owner",{"_index":515,"title":{},"body":{"components/ServerComponent.html":{}}}],["package",{"_index":821,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":352,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["page/dashboard/dashboard.component",{"_index":445,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/server/server.component",{"_index":446,"title":{},"body":{"modules/HomeModule.html":{}}}],["parallax",{"_index":247,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parallax.helper",{"_index":231,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["parallax.helper.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{}}}],["parameters",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["params.value",{"_index":616,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["params.value).split",{"_index":625,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["parentmodule",{"_index":348,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":852,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":484,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe/safe",{"_index":528,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes",{"_index":486,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["pipetransform",{"_index":503,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["place",{"_index":283,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["plaintoclass",{"_index":597,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["plaintoclass(tokenwrapper",{"_index":634,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["plaintoclass(user",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":662,"title":{},"body":{"classes/User.html":{}}}],["position",{"_index":250,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["post",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":849,"title":{},"body":{"index.html":{}}}],["premium",{"_index":766,"title":{},"body":{"classes/User.html":{}}}],["premium_type",{"_index":764,"title":{},"body":{"classes/User.html":{}}}],["premiumtype",{"_index":651,"title":{},"body":{"classes/User.html":{}}}],["presentation",{"_index":391,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["presentation/container",{"_index":846,"title":{},"body":{"index.html":{}}}],["presentational",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{}}}],["preventing",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["production",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":514,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["promise",{"_index":119,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["properties?.foreach((value",{"_index":629,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["properties[index]?.split",{"_index":631,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property",{"_index":630,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property[1",{"_index":633,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["protractor",{"_index":116,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["provided",{"_index":492,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["providedin",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["public_flags",{"_index":769,"title":{},"body":{"classes/User.html":{}}}],["publicflags",{"_index":652,"title":{},"body":{"classes/User.html":{}}}],["radius",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{}}}],["received",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect",{"_index":206,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["redirect.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["redirect.component.html",{"_index":213,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.scss",{"_index":212,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts",{"_index":204,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirect.component.ts:29",{"_index":217,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts:43",{"_index":223,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.container",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["redirect.resolver",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirect.resolver.ts",{"_index":287,"title":{},"body":{"guards/AuthRedirectResolver.html":{},"coverage.html":{}}}],["redirect.resolver.ts:27",{"_index":289,"title":{},"body":{"guards/AuthRedirectResolver.html":{}}}],["redirect/container/auth",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["redirect/presentation/auth",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirectto",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":359,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeat",{"_index":265,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["repository",{"_index":858,"title":{},"body":{"index.html":{}}}],["request",{"_index":543,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":562,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.append(\"authorization",{"_index":558,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requests",{"_index":536,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{}}}],["resolve(route",{"_index":288,"title":{},"body":{"guards/AuthRedirectResolver.html":{}}}],["resource",{"_index":488,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["resourceurl",{"_index":501,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["response",{"_index":569,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["response]{@link",{"_index":600,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["responsibilities",{"_index":457,"title":{},"body":{"components/LayoutComponent.html":{}}}],["responsibility",{"_index":458,"title":{},"body":{"components/LayoutComponent.html":{}}}],["result",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":218,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":366,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{}}}],["return",{"_index":121,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":226,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["returns",{"_index":118,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["right",{"_index":254,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["route",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"components/LayoutComponent.html":{}}}],["router",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{}}}],["routermodule",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":451,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{}}}],["routes",{"_index":131,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["routing.module.ts",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["run",{"_index":861,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["safe",{"_index":502,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurl",{"_index":494,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurlpipe",{"_index":485,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":505,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["scaffolding",{"_index":840,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":843,"title":{},"body":{"index.html":{}}}],["scope",{"_index":576,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scope(value",{"_index":626,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scopes",{"_index":593,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scss",{"_index":260,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["security",{"_index":500,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["see",{"_index":355,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["server",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{}}}],["server.component.html",{"_index":510,"title":{},"body":{"components/ServerComponent.html":{}}}],["server.component.scss",{"_index":509,"title":{},"body":{"components/ServerComponent.html":{}}}],["servercomponent",{"_index":55,"title":{"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":419,"title":{},"body":{"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["setavatar(value",{"_index":675,"title":{},"body":{"classes/User.html":{}}}],["setbot(value",{"_index":680,"title":{},"body":{"classes/User.html":{}}}],["setdiscriminator(value",{"_index":670,"title":{},"body":{"classes/User.html":{}}}],["setemail(value",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["setflags(value",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["setid(value",{"_index":657,"title":{},"body":{"classes/User.html":{}}}],["setlocale(value",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["setscope(value",{"_index":595,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setsystem(value",{"_index":688,"title":{},"body":{"classes/User.html":{}}}],["setting",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setuser(value",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setusername(value",{"_index":663,"title":{},"body":{"classes/User.html":{}}}],["setverified(value",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["shared/shared.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["shared/user",{"_index":344,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":78,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["siltstride",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{}}}],["simply",{"_index":860,"title":{},"body":{"index.html":{}}}],["size",{"_index":268,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["skipself",{"_index":340,"title":{},"body":{"modules/CoreModule.html":{}}}],["smart",{"_index":855,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"injectables/UserService.html":{}}}],["source.pipe",{"_index":554,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["span",{"_index":126,"title":{},"body":{"classes/AppPage.html":{}}}],["specification",{"_index":641,"title":{},"body":{"classes/User.html":{}}}],["specification]{@link",{"_index":726,"title":{},"body":{"classes/User.html":{}}}],["spinner",{"_index":280,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["spinner::before",{"_index":249,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["src/.../environment.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../import.guard.ts",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mouse",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":339,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guard/auth.guard.ts",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guard/auth.guard.ts:16",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guard/auth.guard.ts:25",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helper/mouse",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/auth.service.ts",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/http/auth.service.ts:20",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:28",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:43",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:51",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/user.service.ts",{"_index":785,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/http/user.service.ts:24",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/import.guard.ts",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptor/token.interceptor.ts",{"_index":532,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptor/token.interceptor.ts:33",{"_index":541,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/core/model/token.model.ts",{"_index":566,"title":{},"body":{"classes/TokenWrapper.html":{},"coverage.html":{}}}],["src/app/core/model/token.model.ts:117",{"_index":582,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:24",{"_index":584,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:40",{"_index":586,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:62",{"_index":588,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:77",{"_index":592,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:82",{"_index":596,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:93",{"_index":578,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/user.model.ts",{"_index":640,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:108",{"_index":683,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:111",{"_index":689,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:126",{"_index":691,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:141",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:144",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:159",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:162",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:177",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:18",{"_index":656,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:180",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:195",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:198",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:21",{"_index":658,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:213",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:228",{"_index":720,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:236",{"_index":722,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:245",{"_index":724,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:36",{"_index":660,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:39",{"_index":664,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:54",{"_index":666,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:57",{"_index":671,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:72",{"_index":673,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:75",{"_index":676,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:90",{"_index":678,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:93",{"_index":681,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/resolver/auth",{"_index":286,"title":{},"body":{"guards/AuthRedirectResolver.html":{},"coverage.html":{}}}],["src/app/data/data.module.ts",{"_index":379,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/layout/auth",{"_index":203,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":384,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts",{"_index":389,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts:25",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:34",{"_index":398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:46",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/layout/layout.component.ts",{"_index":452,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout/layout.component.ts:24",{"_index":461,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/login/login.component.ts",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/login/login.component.ts:21",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layout/login/login.component.ts:31",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/module/home/home",{"_index":447,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/module/home/home.module.ts",{"_index":443,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts",{"_index":350,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts:17",{"_index":365,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts",{"_index":508,"title":{},"body":{"components/ServerComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/server/server.component.ts:13",{"_index":512,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts:8",{"_index":511,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/shared/pipe/safe",{"_index":487,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":525,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/user",{"_index":776,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["src/environments/environment.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":513,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["started",{"_index":836,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{}}}],["statements",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":571,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["status",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["stop",{"_index":518,"title":{},"body":{"components/ServerComponent.html":{}}}],["storage",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":221,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["stored",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["stores",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(tokenwrapper",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":455,"title":{},"body":{"components/LayoutComponent.html":{},"classes/User.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["subscription",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["subscription]{@link",{"_index":765,"title":{},"body":{"classes/User.html":{}}}],["successful",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":868,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":869,"title":{},"body":{"modules.html":{}}}],["system",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["system(value",{"_index":748,"title":{},"body":{"classes/User.html":{}}}],["table",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":669,"title":{},"body":{"classes/User.html":{}}}],["take",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["take(1",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["tap",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["tap((value",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["terminal",{"_index":863,"title":{},"body":{"index.html":{}}}],["tes3mp",{"_index":360,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this._avatar",{"_index":741,"title":{},"body":{"classes/User.html":{}}}],["this._bot",{"_index":744,"title":{},"body":{"classes/User.html":{}}}],["this._discriminator",{"_index":735,"title":{},"body":{"classes/User.html":{}}}],["this._email",{"_index":758,"title":{},"body":{"classes/User.html":{}}}],["this._flags",{"_index":762,"title":{},"body":{"classes/User.html":{}}}],["this._id",{"_index":729,"title":{},"body":{"classes/User.html":{}}}],["this._locale",{"_index":752,"title":{},"body":{"classes/User.html":{}}}],["this._scope",{"_index":624,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this._system",{"_index":747,"title":{},"body":{"classes/User.html":{}}}],["this._user",{"_index":417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this._username",{"_index":732,"title":{},"body":{"classes/User.html":{}}}],["this._verified",{"_index":755,"title":{},"body":{"classes/User.html":{}}}],["this.access_token",{"_index":610,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.accesstoken",{"_index":636,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.authservice.isvalidtoken().pipe",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.storetoken(tokenwrapper",{"_index":240,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.authservice.token",{"_index":552,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.expires_in",{"_index":618,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.expiresin",{"_index":638,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.http",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["this.mfa_enabled",{"_index":750,"title":{},"body":{"classes/User.html":{}}}],["this.premium_type",{"_index":768,"title":{},"body":{"classes/User.html":{}}}],["this.public_flags",{"_index":770,"title":{},"body":{"classes/User.html":{}}}],["this.route.data.pipe(map((data",{"_index":464,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.route.snapshot.fragment",{"_index":239,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"app",{"_index":241,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"login",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(resourceurl",{"_index":507,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["this.scope",{"_index":639,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.token.pipe(map((token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token_type",{"_index":612,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.tokensubject.asobservable",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokensubject.next(tokenwrapper",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentype",{"_index":637,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.username}#${this.discriminator",{"_index":775,"title":{},"body":{"classes/User.html":{}}}],["this.userservice.getcurrentuser",{"_index":293,"title":{},"body":{"guards/AuthRedirectResolver.html":{}}}],["this]{@link",{"_index":771,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":422,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded",{"_index":341,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded(parentmodule",{"_index":349,"title":{},"body":{"modules/CoreModule.html":{}}}],["tied",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token's",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token.accesstoken",{"_index":556,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["token.isvalid",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["token]{@link",{"_index":237,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["token_type",{"_index":611,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokeninterceptor",{"_index":79,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tokensubject",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":574,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokenwrapper",{"_index":233,"title":{"classes/TokenWrapper.html":{}},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"coverage.html":{}}}],["tokenwrapper#accesstoken",{"_index":551,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["tokenwrapper.gettokenwrapperfromurlfragment",{"_index":238,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transform",{"_index":495,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["transform((params",{"_index":614,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transform(resourceurl",{"_index":496,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["transformed",{"_index":581,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transformer",{"_index":599,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":598,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transforming",{"_index":579,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["true",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["trust",{"_index":491,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["tslib",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":692,"title":{},"body":{"classes/User.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":767,"title":{},"body":{"classes/User.html":{}}}],["typescript",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":779,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["unauthenticated",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["underscore",{"_index":605,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["unique",{"_index":661,"title":{},"body":{"classes/User.html":{}}}],["unsafe",{"_index":382,"title":{},"body":{"modules/DataModule.html":{},"components/LayoutComponent.html":{}}}],["unused",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["updates",{"_index":867,"title":{},"body":{"index.html":{}}}],["urgent",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["url",{"_index":219,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["url(\"../../../../assets/fargoth.jpg",{"_index":264,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["url(\"~assets/fargoth.jpg",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["url(${this.user.avatarurl",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(~assets/siltstrider4.svg",{"_index":437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.pipe",{"_index":529,"title":{},"body":{"modules/SharedModule.html":{}}}],["url.pipe.ts",{"_index":489,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:18",{"_index":497,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urls",{"_index":493,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urltree",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":229,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["useclass",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":145,"title":{"classes/User.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthRedirectResolver.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user#discriminator",{"_index":774,"title":{},"body":{"classes/User.html":{}}}],["user#username",{"_index":773,"title":{},"body":{"classes/User.html":{}}}],["user's",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user(value",{"_index":420,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.displayname",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user]{@link",{"_index":418,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userinterfacemodule",{"_index":338,"title":{"modules/UserInterfaceModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["username(value",{"_index":733,"title":{},"body":{"classes/User.html":{}}}],["users",{"_index":354,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["userservice",{"_index":291,"title":{"injectables/UserService.html":{}},"body":{"guards/AuthRedirectResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user}'s",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["utility",{"_index":490,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["valid",{"_index":424,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validation",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["value",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["variable",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":877,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["verified",{"_index":648,"title":{},"body":{"classes/User.html":{}}}],["verified(value",{"_index":756,"title":{},"body":{"classes/User.html":{}}}],["via",{"_index":782,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["visual",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["webcomponents/custom",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["webcomponents/webcomponentsjs",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":274,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["webpack",{"_index":864,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["whether",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["widget",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":271,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapping",{"_index":568,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["z",{"_index":255,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["zone.js",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Component for the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n/**\n * Main Component for the application\n */\n@Component({\n  selector: \"siltstride-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  /**\n   * @ignore\n   * @type {string}\n   */\n  public title = \"siltstride-admin-web\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nAuthRedirectContainer\n\nAuthRedirectContainer\n\nAppModule -->\n\nAuthRedirectContainer->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthRedirectComponent\n                        \n                        \n                            AuthRedirectContainer\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { HeaderComponent } from \"./layout/header/header.component\";\nimport { FooterComponent } from \"./layout/footer/footer.component\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { CoreModule } from \"@core/core.module\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { AuthRedirectContainer } from \"./layout/auth-redirect/container/auth-redirect.container\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { TokenInterceptor } from \"@core/interceptor/token.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AuthRedirectComponent,\n    AuthRedirectContainer\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                e2e class for the AppComponent\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from \"protractor\";\n\n/**\n * e2e class for the {@link AppComponent}\n */\nexport class AppPage {\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  getTitleText(): Promise {\n    return element(\n      by.css(\"siltstride-root .content span\")\n    ).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { AuthRedirectResolver } from \"@core/resolver/auth-redirect.resolver\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/app/dashboard\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"auth/redirect\", component: AuthRedirectComponent },\n  {\n    path: \"app\",\n    component: LayoutComponent,\n    resolve: {\n      user: AuthRedirectResolver\n    },\n    children: [\n      {\n        path: \"\",\n        loadChildren: () =>\n          \"import(\\\"@module/home/home.module\\\").then((m) => m.HomeModule)\"\n      }\n    ]\n  },\n  { path: \"**\", redirectTo: \"/app/dashboard\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guard/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guard/auth.guard.ts:25\n                \n            \n\n\n            \n                \n                    Determines whether a route can be activated based on user authentication status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route attempting to be navigated to\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current Router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token validity status\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/http/auth.service\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Determines whether a route can be activated based on user authentication status\n   * @param {ActivatedRouteSnapshot} next The route attempting to be navigated to\n   * @param {RouterStateSnapshot} state Current Router state\n   * @returns {Observable} Observable containing the token validity status\n   */\n  public canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.authService.isValidToken().pipe(\n      tap((value: boolean) => {\n        if (!value) {\n          void this.router.navigate([\"login\"]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthRedirectComponent.html":{"url":"components/AuthRedirectComponent.html","title":"component - AuthRedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthRedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling the redirect from\nDiscord's OAuth2 implicit grant\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-auth-redirect\n            \n\n            \n                styleUrls\n                ./auth-redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:29\n                \n            \n\n\n            \n                \n                    Retrieve the token from the URL fragment and store it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:43\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { mouseParallaxHelper } from \"@core/helper/mouse-parallax.helper\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { TokenWrapper } from \"@core/model/token.model\";\nimport { AuthService } from \"@core/http/auth.service\";\n\n/**\n * Component handling the redirect from\n * [Discord's OAuth2 implicit grant]{@link https://discord.com/developers/docs/topics/oauth2#implicit-grant}\n */\n@Component({\n  selector: \"siltstride-auth-redirect\",\n  templateUrl: \"./auth-redirect.component.html\",\n  styleUrls: [\"./auth-redirect.component.scss\"]\n})\nexport class AuthRedirectComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  /**\n   * Retrieve the [token]{@link TokenWrapper} from the URL fragment and store it\n   */\n  public ngOnInit() {\n    const tokenWrapper = TokenWrapper.getTokenWrapperFromUrlFragment(\n      this.route.snapshot.fragment\n    );\n    this.authService.storeToken(tokenWrapper);\n    void this.router.navigate([\"app\", \"dashboard\"]);\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./auth-redirect.component.scss\n                \n                .foreground-spinner::before {\n  content: \"\";\n  position: fixed;\n  left: 0;\n  right: 0;\n  z-index: -1;\n  display: block;\n  // url must be called in scss template file.\n  // Inline scss template would not resolve image url.\n  background-image: url(\"../../../../assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n  width: 100%;\n  height: 100%;\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -o-filter: blur(5px);\n  -ms-filter: blur(5px);\n  filter: blur(5px);\n}\n\n.foreground-spinner {\n  display: grid;\n  height: 100vh;\n  place-items: center;\n  z-index: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthRedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthRedirectResolver.html":{"url":"guards/AuthRedirectResolver.html","title":"guard - AuthRedirectResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthRedirectResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/resolver/auth-redirect.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/resolver/auth-redirect.resolver.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"@core/model/user.model\";\nimport { UserService } from \"@core/http/user.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthRedirectResolver implements Resolve {\n  /**\n   * @ignore\n   * @param {UserService} userService\n   */\n  constructor(private userService: UserService) {}\n\n  /**\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable}\n   */\n  public resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.userService.getCurrentUser();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling authentication logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValidToken\n                            \n                            \n                                    Public\n                                storeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the stored TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token's validity status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeToken(tokenWrapper: TokenWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Stores the TokenWrapper received from Discord OAuth2 implicit grant\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenWrapper\n                                    \n                                                TokenWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object containing the access token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Used for validation of successful token storage\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new TokenWrapper()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                        The token for the current User\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/http/auth.service.ts:28\n                                \n                            \n                    \n                        \n                                Get the token associated with the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CoreModule } from \"@core/core.module\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { TokenWrapper } from \"@core/model/token.model\";\nimport { map } from \"rxjs/operators\";\nimport { User } from \"@core/model/user.model\";\n\n/**\n * Service handling authentication logic\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthService {\n  /**\n   * The [token]{@link TokenWrapper} for the current {@link User}\n   * @type {BehaviorSubject} BehaviorSubject containing the token\n   * @private\n   */\n  private tokenSubject: BehaviorSubject = new BehaviorSubject(\n    new TokenWrapper()\n  );\n\n  /**\n   * Get the [token]{@link TokenWrapper} associated with the current {@link User}\n   * @returns {Observable} Observable containing the token\n   */\n  public get token(): Observable {\n    return this.tokenSubject.asObservable();\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * Stores the {@link TokenWrapper} received from Discord OAuth2 implicit grant\n   * @param {TokenWrapper} tokenWrapper Object containing the access token\n   * @returns {Observable} Used for validation of successful token storage\n   */\n  public storeToken(tokenWrapper: TokenWrapper): void {\n    this.tokenSubject.next(tokenWrapper);\n  }\n\n  /**\n   * Helper method determining the validity of the stored {@link TokenWrapper}\n   * @returns {Observable} Observable containing the token's validity status\n   */\n  public isValidToken(): Observable {\n    return this.token.pipe(map((token: TokenWrapper) => token.isValid()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { throwIfAlreadyLoaded } from \"@core/import.guard\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\n\n@NgModule({\n  imports: [HttpClientModule, UserInterfaceModule],\n  exports: [HttpClientModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordServerWidgetUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordServerWidgetUrl\n                    \n                \n\n                \n                    \n                        getdiscordServerWidgetUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/dashboard/dashboard.component.ts:17\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord server widget URL configured for our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\n\n/**\n * Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n */\n@Component({\n  selector: \"siltstride-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord server widget URL configured for our application\n   * @returns {string} Discord server widget URL\n   */\n  public get discordServerWidgetUrl(): string {\n    return environment.discordServerWidgetUrl;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Dashboard\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .discord-server-widget {\n  float: right;\n  width: 350px;\n  height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dashboard          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n@NgModule({\n  declarations: [],\n  imports: [CommonModule]\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component used in the application layout\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n/**\n * Footer Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.scss\"]\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header Presentation Component used in the application layout\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    backgroundImageUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/header/header.component.ts:34\n                            \n                        \n                \n                    \n                        Mutator setting the user instance member for this component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:25\n                                \n                            \n                    \n                        \n                                Accessor retrieving the User object used for this component\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n                \n                    \n                        setuser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:34\n                                \n                            \n                    \n                        \n                                Mutator setting the user instance member for this component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The incoming user value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        backgroundImageUrl\n                    \n                \n\n                \n                    \n                        getbackgroundImageUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:46\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the CSS url() function call with the\nUser's avatar URL inserted as a parameter\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { User } from \"@core/model/user.model\";\n\n/**\n * Header Presentation Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /**\n   * @ignore\n   * @type {User}\n   * @private\n   */\n  private _user: User;\n\n  /**\n   * Accessor retrieving the {@link User} object used for this component\n   * @returns {User} The user in this component\n   */\n  public get user(): User {\n    return this._user;\n  }\n\n  /**\n   * Mutator setting the [user]{@link User} instance member for this component\n   * @param {User} value The incoming user value\n   */\n  @Input()\n  public set user(value: User) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid User object!\");\n    }\n    this._user = value;\n  }\n\n  /**\n   * Helper accessor retrieving the CSS url() function call with the\n   * {@link User}'s avatar URL inserted as a parameter\n   * @returns {string} The CSS url() function call\n   */\n  public get backgroundImageUrl(): string {\n    return `url(${this.user.avatarUrl})`;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      Siltstride Admin\n    \n  \n  \n    Dashboard\n    Server\n  \n  \n    \n      \n      {{ user.displayName }}\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .clr-icon {\n  &.user-avatar {\n    border-radius: 50%;\n    //background-size: 150% 150%;\n    //width: 36px;\n    //margin-right: 11px;\n  }\n}\n\n.clr-icon {\n  &.siltstride-logo {\n    background-image: url(~assets/SiltStrider4.svg);\n    height: 36px;\n    width: 36px;\n    margin-right: 11px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Siltstride Admin            Dashboard    Server                    {{ user.displayName }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            ServerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeRoutingModule } from \"./home-routing.module\";\nimport { DashboardComponent } from \"./page/dashboard/dashboard.component\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { ServerComponent } from \"./page/server/server.component\";\n\n@NgModule({\n  declarations: [DashboardComponent, ServerComponent],\n  imports: [CommonModule, HomeRoutingModule, SharedModule]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"@module/home/page/dashboard/dashboard.component\";\nimport { AuthGuard } from \"@core/guard/auth.guard\";\nimport { ServerComponent } from \"@module/home/page/server/server.component\";\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"server\", component: ServerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Layout Container Component defining the structure of the application\nThis Component bears no Presentation responsibilities, so it is used as a\nContainer component for HeaderComponent which bears Presentation\nresponsibility\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/layout/layout.component.ts:24\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"@core/model/user.model\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute, Data } from \"@angular/router\";\n\n/**\n * Layout Container Component defining the structure of the application\n *\n * This Component bears no Presentation responsibilities, so it is used as a\n * Container component for {@link HeaderComponent} which bears Presentation\n * responsibility\n */\n@Component({\n  selector: \"siltstride-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"]\n})\nexport class LayoutComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the current {@link User}\n   * @returns {Observable} Observable containing the logged in user\n   */\n  public get user(): Observable {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.route.data.pipe(map((data: Data) => data.user));\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Presentational Component used as the landing page for unauthenticated users\nof the application and where they will initiate the OAuth2 login handshake\nwith Discord\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordOAuthImplicitFlowUrl\n                                \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordOAuthImplicitFlowUrl\n                    \n                \n\n                \n                    \n                        getdiscordOAuthImplicitFlowUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:21\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\nfor our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:31\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\nimport { mouseParallaxHelper } from \"@core/helper/mouse-parallax.helper\";\n\n/**\n * Presentational Component used as the landing page for unauthenticated users\n * of the application and where they will initiate the OAuth2 login handshake\n * with Discord\n */\n@Component({\n  selector: \"siltstride-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\n   * for our application\n   * @returns {string} Discord OAuth2 implicit grant URL\n   */\n  public get discordOAuthImplicitFlowUrl(): string {\n    return environment.discordOAuthImplicitFlowUrl;\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to\n      Siltstride Admin\n    \n    \n      \n        Log In with Discord\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :host {\n  --mouseX: 50%;\n  --mouseY: 50%;\n}\n\n.login-wrapper {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to      Siltstride Admin                      Log In with Discord            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeResourceUrlPipe.html":{"url":"pipes/SafeResourceUrlPipe.html","title":"pipe - SafeResourceUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeResourceUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/safe-resource-url.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Utility Pipe to trust provided resource URLs\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeResourceUrl\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(resourceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipe/safe-resource-url.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Bypasses the DomSanitizer's security trust for the provided resource URL\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resource URL to trust\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        The safe resource URL\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n/**\n * Utility Pipe to trust provided resource URLs\n */\n@Pipe({\n  name: \"safeResourceUrl\"\n})\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  /**\n   * Bypasses the {@link DomSanitizer}'s security trust for the provided resource URL\n   * @param {string} resourceUrl Resource URL to trust\n   * @returns {SafeResourceUrl} The safe resource URL\n   */\n  public transform(resourceUrl: string): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerComponent.html":{"url":"components/ServerComponent.html","title":"component - ServerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/server/server.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-server\n            \n\n            \n                styleUrls\n                ./server.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/module/home/page/server/server.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/home/page/server/server.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"siltstride-server\",\n  templateUrl: \"./server.component.html\",\n  styleUrls: [\"./server.component.scss\"]\n})\nexport class ServerComponent implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Start Server\n      \n        \n          \n          \n             Project A \n             Owner: John Doe \n          \n        \n        ...\n      \n    \n  \n  \n    \n      Stop Server\n      \n        \n          \n          \n             Project B \n             Owner: Jane Doe \n          \n        \n        ...\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./server.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Server                                               Project A              Owner: John Doe                           ...                        Stop Server                                               Project B              Owner: Jane Doe                           ...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SafeResourceUrlPipe } from \"./pipe/safe-resource-url.pipe\";\n\n@NgModule({\n  declarations: [SafeResourceUrlPipe],\n  imports: [CommonModule, FormsModule, UserInterfaceModule],\n  exports: [FormsModule, UserInterfaceModule, SafeResourceUrlPipe]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptor/token.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor used to inject TokenWrapper in the\nAuthorization header of outgoing requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptor/token.interceptor.ts:33\n                \n            \n\n\n            \n                \n                    Interceptor method adding Authorization header to outgoing requests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Intercepted request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next event to occur\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Observable containing the\noutgoing request handler event\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/http/auth.service\";\nimport { concatMap, map, tap } from \"rxjs/operators\";\nimport { TokenWrapper } from \"@core/model/token.model\";\n\n/**\n * Interceptor used to inject {@link TokenWrapper#accessToken} in the\n * Authorization header of outgoing requests\n */\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Interceptor method adding Authorization header to outgoing requests\n   * @param {HttpRequest} request Intercepted request\n   * @param {HttpHandler} next Next event to occur\n   * @returns {Observable>} Observable containing the\n   * outgoing request handler event\n   */\n  public intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const source = this.authService.token;\n    const inner = source.pipe(\n      map((token: TokenWrapper) => token.accessToken),\n      map((accessToken: string) =>\n        request.headers.append(\"Authorization\", `Bearer ${accessToken}`)\n      ),\n      map((httpHeaders: HttpHeaders) =>\n        request.clone({ headers: httpHeaders })\n      ),\n      concatMap((clone: HttpRequest) => next.handle(clone))\n    );\n    return inner;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenWrapper.html":{"url":"classes/TokenWrapper.html","title":"class - TokenWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/token.model.ts\n        \n\n            \n                Description\n            \n            \n                Model wrapping Discord's Access Token response attributes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getTokenWrapperFromUrlFragment\n                            \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    tokenType\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    scope\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getTokenWrapperFromUrlFragment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenWrapperFromUrlFragment(fragment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:93\n                \n            \n\n\n            \n                \n                    Helper transforming the provided URL fragment string into the equivalent\nTokenWrapper object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL fragment to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenWrapper\n\n                    \n                    \n                        Transformed object containing the access token\nresponse attributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:117\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Token's validity status\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:24\n                                \n                            \n                    \n                        \n                                The access token\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tokenType\n                    \n                \n\n                \n                    \n                        gettokenType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:40\n                                \n                            \n                    \n                        \n                                The token type\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:62\n                                \n                            \n                    \n                        \n                                The expiration date for the token\n\n\n                                \n                                \n                                \n                                    Returns :         Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        scope\n                    \n                \n\n                \n                    \n                        getscope()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:77\n                                \n                            \n                    \n                        \n                                The scopes associated to the token\n\n\n                                \n                                \n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n                \n                    \n                        setscope(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:82\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  plainToClass,\n  Transform,\n  TransformFnParams,\n  Type\n} from \"class-transformer\";\n\n/**\n * Model wrapping Discord's [Access Token response]{@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-response} attributes\n */\nexport class TokenWrapper {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private access_token: string;\n\n  /**\n   * The access token\n   * @returns {string}\n   */\n  public get accessToken(): string {\n    return this.access_token;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private token_type: string;\n\n  /**\n   * The token type\n   * @returns {string}\n   */\n  public get tokenType(): string {\n    return this.token_type;\n  }\n\n  /**\n   * @ignore\n   * @type {Date}\n   * @private\n   */\n  @Type(() => Number)\n  @Transform((params: TransformFnParams) => {\n    const expiration = new Date();\n    expiration.setSeconds(expiration.getSeconds() + params.value);\n    return expiration;\n  })\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private expires_in: Date;\n\n  /**\n   * The expiration date for the token\n   * @returns {Date}\n   */\n  public get expiresIn(): Date {\n    return this.expires_in;\n  }\n\n  /**\n   * @ignore\n   * @type {Array}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private _scope: Array;\n  /**\n   * The scopes associated to the token\n   * @returns {Array}\n   */\n  public get scope(): Array {\n    return this._scope;\n  }\n  @Type(() => String)\n  @Transform((params: TransformFnParams) => (params.value).split(\"+\"))\n  public set scope(value: Array) {\n    this._scope = value;\n  }\n\n  /**\n   * Helper transforming the provided URL fragment string into the equivalent\n   * {@link TokenWrapper} object\n   * @param {string} fragment URL fragment to transform\n   * @returns {TokenWrapper} Transformed object containing the access token\n   * response attributes\n   */\n  public static getTokenWrapperFromUrlFragment(fragment: string): TokenWrapper {\n    const properties = fragment?.split(\"&\");\n    const obj: {\n      access_token: string;\n      token_type: string;\n      expires_in: string;\n      scope: string;\n    } = {\n      access_token: \"\",\n      token_type: \"\",\n      expires_in: \"\",\n      scope: \"\"\n    };\n    properties?.forEach((value: string, index: number) => {\n      const property = properties[index]?.split(\"=\");\n      obj[property[0]] = property[1];\n    });\n    return plainToClass(TokenWrapper, obj);\n  }\n\n  /**\n   * Helper method determining the validity of the {@link TokenWrapper#accessToken}\n   * @returns {boolean} Token's validity status\n   */\n  public isValid(): boolean {\n    const now = new Date();\n    return (\n      this.accessToken != null &&\n      this.tokenType != null &&\n      this.expiresIn != null &&\n      this.scope != null &&\n      now \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n            \n                Description\n            \n            \n                User object as defined by Discord's user structure specification\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    username\n                                \n                                \n                                    discriminator\n                                \n                                \n                                    avatar\n                                \n                                \n                                    bot\n                                \n                                \n                                    system\n                                \n                                \n                                    mfaEnabled\n                                \n                                \n                                    locale\n                                \n                                \n                                    verified\n                                \n                                \n                                    email\n                                \n                                \n                                    flags\n                                \n                                \n                                    premiumType\n                                \n                                \n                                    publicFlags\n                                \n                                \n                                    avatarUrl\n                                \n                                \n                                    displayName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:18\n                                \n                            \n                    \n                        \n                                The User's id\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:36\n                                \n                            \n                    \n                        \n                                The User's username, not unique across the platform\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        discriminator\n                    \n                \n\n                \n                    \n                        getdiscriminator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:54\n                                \n                            \n                    \n                        \n                                The User's 4-digit Discord tag\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdiscriminator(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n\n                \n                    \n                        getavatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:72\n                                \n                            \n                    \n                        \n                                The User's avatar hash\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setavatar(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bot\n                    \n                \n\n                \n                    \n                        getbot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:90\n                                \n                            \n                    \n                        \n                                Whether the User belongs to an OAuth2 application\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setbot(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        system\n                    \n                \n\n                \n                    \n                        getsystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:108\n                                \n                            \n                    \n                        \n                                Whether the user is an Official Discord System user (part of the urgent message system)\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsystem(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mfaEnabled\n                    \n                \n\n                \n                    \n                        getmfaEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:126\n                                \n                            \n                    \n                        \n                                Whether the user has two factor enabled on their account\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:141\n                                \n                            \n                    \n                        \n                                The User's chosen language option\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlocale(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:144\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        verified\n                    \n                \n\n                \n                    \n                        getverified()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:159\n                                \n                            \n                    \n                        \n                                Whether the email on this account has been verified\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setverified(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:162\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:177\n                                \n                            \n                    \n                        \n                                The User's email\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setemail(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:180\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        flags\n                    \n                \n\n                \n                    \n                        getflags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:195\n                                \n                            \n                    \n                        \n                                The flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setflags(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:198\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        premiumType\n                    \n                \n\n                \n                    \n                        getpremiumType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:213\n                                \n                            \n                    \n                        \n                                The type of Nitro subscription on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        publicFlags\n                    \n                \n\n                \n                    \n                        getpublicFlags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:228\n                                \n                            \n                    \n                        \n                                The public flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avatarUrl\n                    \n                \n\n                \n                    \n                        getavatarUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:236\n                                \n                            \n                    \n                        \n                                Helper accessor returning the unique avatar URL for this\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayName\n                    \n                \n\n                \n                    \n                        getdisplayName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:245\n                                \n                            \n                    \n                        \n                                Helper accessor returning the User's username as displayed in Discord\nwith the User and User\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { environment } from \"@env\";\n\n/**\n * User object as defined by [Discord's user structure specification]{@link https://discord.com/developers/docs/resources/user#user-object-user-structure}\n */\nexport class User {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _id: string;\n\n  /**\n   * The {@link User}'s id\n   * @returns {string}\n   */\n  public get id(): string {\n    return this._id;\n  }\n  public set id(value: string) {\n    this._id = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _username: string;\n\n  /**\n   * The {@link User}'s username, not unique across the platform\n   * @returns {string}\n   */\n  public get username(): string {\n    return this._username;\n  }\n  public set username(value: string) {\n    this._username = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _discriminator: string;\n\n  /**\n   * The {@link User}'s 4-digit Discord tag\n   * @returns {string}\n   */\n  public get discriminator(): string {\n    return this._discriminator;\n  }\n  public set discriminator(value: string) {\n    this._discriminator = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _avatar: string;\n\n  /**\n   * The {@link User}'s [avatar hash]{@link https://discord.com/developers/docs/reference#image-formatting}\n   * @returns {string}\n   */\n  public get avatar(): string {\n    return this._avatar;\n  }\n  public set avatar(value: string) {\n    this._avatar = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _bot?: boolean;\n\n  /**\n   * Whether the {@link User} belongs to an OAuth2 application\n   * @returns {boolean}\n   */\n  public get bot(): boolean {\n    return this._bot;\n  }\n  public set bot(value: boolean) {\n    this._bot = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _system?: boolean;\n\n  /**\n   * Whether the user is an Official Discord System user (part of the urgent message system)\n   * @returns {boolean}\n   */\n  public get system(): boolean {\n    return this._system;\n  }\n  public set system(value: boolean) {\n    this._system = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private mfa_enabled?: boolean;\n\n  /**\n   * Whether the user has two factor enabled on their account\n   * @returns {boolean}\n   */\n  public get mfaEnabled(): boolean {\n    return this.mfa_enabled;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _locale?: string;\n\n  /**\n   * The {@link User}'s chosen language option\n   * @returns {string}\n   */\n  public get locale(): string {\n    return this._locale;\n  }\n  public set locale(value: string) {\n    this._locale = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _verified?: boolean;\n\n  /**\n   * Whether the email on this account has been verified\n   * @returns {boolean}\n   */\n  public get verified(): boolean {\n    return this._verified;\n  }\n  public set verified(value: boolean) {\n    this._verified = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _email?: string;\n\n  /**\n   * The {@link User}'s email\n   * @returns {string}\n   */\n  public get email(): string {\n    return this._email;\n  }\n  public set email(value: string) {\n    this._email = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private _flags?: number;\n\n  /**\n   * The [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get flags(): number {\n    return this._flags;\n  }\n  public set flags(value: number) {\n    this._flags = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private premium_type?: number;\n\n  /**\n   * The [type of Nitro subscription]{@link https://discord.com/developers/docs/resources/user#user-object-premium-types} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get premiumType(): number {\n    return this.premium_type;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private public_flags?: number;\n\n  /**\n   * The public [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get publicFlags(): number {\n    return this.public_flags;\n  }\n\n  /**\n   * Helper accessor returning the unique avatar URL for [this]{@link User}\n   * @returns {string} The unique avatar URL\n   */\n  public get avatarUrl(): string {\n    return `${environment.discordCdnRootUrl}avatars/${this.id}/${this.avatar}.png`;\n  }\n\n  /**\n   * Helper accessor returning the {@link User}'s username as displayed in Discord\n   * with the {@link User#username} and {@link User#discriminator}\n   * @returns {string} The display name\n   */\n  public get displayName(): string {\n    return `${this.username}#${this.discriminator}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInterfaceModule.html":{"url":"modules/UserInterfaceModule.html","title":"module - UserInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/user-interface/user-interface.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for exposing the UI component library to other areas of the application via the SharedModule\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ClarityModule } from \"@clr/angular\";\n\n/**\n * Module for exposing the UI component library to other areas of the application via the {@link SharedModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ClarityModule],\n  exports: [ClarityModule]\n})\nexport class UserInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/user.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieve the current User's information from Discord\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the current user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { EMPTY, Observable } from \"rxjs\";\nimport { User } from \"@core/model/user.model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"@env\";\nimport { catchError, map, take } from \"rxjs/operators\";\nimport { plainToClass } from \"class-transformer\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n  /**\n   * @ignore\n   * @param {HttpClient} http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieve the current {@link User}'s information from Discord\n   * @returns {Observable} Observable containing the current user\n   * @private\n   */\n  public getCurrentUser(): Observable {\n    return this.http\n      .get(`${environment.discordApiRootUrl}/users/@me`)\n      .pipe(\n        take(1),\n        map((user: User) => plainToClass(User, user)),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        catchError((error) => EMPTY)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/helper/mouse-parallax.helper.ts\n            \n            variable\n            mouseParallaxHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/import.guard.ts\n            \n            variable\n            throwIfAlreadyLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptor/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/model/token.model.ts\n            \n            class\n            TokenWrapper\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/resolver/auth-redirect.resolver.ts\n            \n            guard\n            AuthRedirectResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n            \n            component\n            AuthRedirectComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/server/server.component.ts\n            \n            component\n            ServerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/safe-resource-url.pipe.ts\n            \n            pipe\n            SafeResourceUrlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            @webcomponents/webcomponentsjs : ^2.0.0\n        \n            class-transformer : ^0.3.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSiltstride Admin\nFolder Structure\nFollowed these guides for scaffolding folder structure:\n\nHow to define a highly scalable folder structure for your Angular project\nAngular Folder Structure\n\nThese guides have overlapping concepts\nPresentation/Container components\nImplementing this common practice to isolate business logic from presentation.\nFollowed these guides for this pattern:\n\nAn enterprise approach to the Smart and Dumb components pattern in Angular\n\nGetting Started\nAfter cloning the repository, one can simply run npm run start in a terminal to start the webpack dev server and see live updates.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nAuthRedirectContainer\n\nAuthRedirectContainer\n\nAppModule -->\n\nAuthRedirectContainer->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mouseParallaxHelper   (src/.../mouse-parallax.helper.ts)\n                        \n                        \n                            throwIfAlreadyLoaded   (src/.../import.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/helper/mouse-parallax.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mouseParallaxHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : (\n  element: HTMLElement,\n  event: MouseEvent\n): void => {\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  element.style.setProperty(\n    \"--mouseX\",\n    `${(event.clientX * 9) / offsetWidth}%`\n  );\n  element.style.setProperty(\n    \"--mouseY\",\n    `${(event.clientY * 16) / offsetHeight}%`\n  );\n}\n                        \n                    \n\n                \n                    \n                        Visual parallax effect helper function designed to be tied to the\nGlobalEventHandlers#onmousemove\nevent of any HTMLElement\nUsed this Stack Overflow post\nto determine parallax logic\n\n                    \n                \n\n            \n        \n\n    src/app/core/import.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            throwIfAlreadyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  parentModule: CoreModule,\n  moduleName: string\n): void => {\n  if (parentModule) {\n    throw new Error(\n      `${moduleName} has already been loaded. Import ${moduleName} modules in the AppModule only.`\n    );\n  }\n}\n                        \n                    \n\n                \n                    \n                        Helper function preventing the CoreModule from being imported more than once as implemented in the Angular reference documentation\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
