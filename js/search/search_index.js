var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.389,1,0.815]],["body/components/AppComponent.html",[0,0.711,1,1.436,2,1.75,3,0.335,4,0.335,5,1.467,6,1.467,7,1.467,8,1.467,9,0.284,10,2.89,11,0.846,12,4.558,13,1.919,14,1.221,15,2.547,16,2.34,17,3.781,18,1.919,19,5.08,20,1.919,21,4.558,22,0.284,23,0.035,24,0.501,25,0.335,26,0.101,27,1.115,28,1.337,29,1.467,30,0.929,31,3.484,32,2.206,33,3.484,34,0.929,35,1.919,36,1.597,37,1.467,38,2.269,39,1.467,40,1.215,41,1.467,42,0.929,43,1.467,44,1.467,45,0.929,46,1.467,47,1.018,48,1.467,49,1.018,50,1.467,51,0.929,52,1.467,53,0.929,54,1.467,55,0.929,56,1.337,57,1.467,58,1.467,59,0.02,60,0.026,61,0.02]],["title/modules/AppModule.html",[62,0.742,63,1.731]],["body/modules/AppModule.html",[1,1.595,3,0.286,4,0.286,9,0.242,22,0.488,23,0.036,24,0.428,25,0.286,26,0.086,34,0.793,42,1.461,47,1.601,49,1.601,51,1.461,53,1.461,59,0.017,60,0.023,61,0.017,62,0.722,63,3.545,64,0.869,65,1.376,66,2.17,67,2.656,68,1.684,69,1.252,70,2.467,71,2.467,72,2.467,73,2.467,74,3.103,75,2.307,76,2.536,77,2.321,78,1.684,79,1.684,80,2.974,81,1.725,82,4.098,83,3.399,84,1.883,85,1.725,86,2.467,87,2.467,88,2.974,89,2.467,90,2.974,91,2.974,92,2.467,93,4.098,94,2.974,95,2.133,96,2.467,97,2.467,98,1.883,99,2.467]],["title/classes/AppPage.html",[26,0.089,100,2.193]],["body/classes/AppPage.html",[1,1.341,3,0.391,4,0.391,9,0.332,11,0.988,17,3.375,22,0.332,23,0.036,25,0.391,26,0.159,27,1.61,36,1.763,59,0.023,60,0.028,61,0.023,84,2.577,100,3.608,101,2.577,102,3.375,103,5.031,104,4.069,105,1.713,106,1.61,107,4.955,108,4.069,109,1.763,110,4.069,111,4.069,112,4.069,113,3.375,114,4.069,115,4.069]],["title/modules/AppRoutingModule.html",[62,0.742,74,1.731]],["body/modules/AppRoutingModule.html",[0,0.664,3,0.354,4,0.354,9,0.301,22,0.464,23,0.036,24,0.53,25,0.354,26,0.107,42,1.261,51,1.261,53,1.261,59,0.021,60,0.027,61,0.021,64,1.078,69,1.553,74,2.678,81,1.553,85,1.991,86,3.06,89,3.06,92,3.06,97,3.06,98,2.336,99,3.06,116,3.689,117,3.06,118,3.923,119,3.307,120,2.089,121,1.883,122,4.833,123,3.06,124,3.06,125,3.923,126,4.73,127,2.336,128,3.689,129,3.689,130,3.689,131,3.689,132,3.689,133,3.689]],["title/guards/AuthGuard.html",[134,2.193,135,1.936]],["body/guards/AuthGuard.html",[3,0.287,4,0.287,9,0.244,11,0.726,22,0.448,23,0.036,24,0.43,25,0.287,26,0.087,28,1.58,30,1.254,40,1.097,59,0.017,60,0.023,61,0.017,75,1.733,95,2.147,106,1.318,107,3.903,109,1.049,120,1.695,135,2.607,136,2.993,137,2.483,138,0.958,139,2.331,140,4.407,141,1.385,142,2.993,143,2.803,144,4.17,145,1.443,146,2.993,147,2.102,148,1.905,149,2.993,150,5.313,151,5.491,152,5.313,153,2.993,154,4.117,155,3.415,156,4.204,157,4.117,158,4.117,159,2.102,160,3.415,161,3.415,162,1.806,163,4.117,164,4.117,165,3.415,166,3.634,167,3.903,168,5.068,169,2.331,170,1.895,171,2.147,172,2.993,173,2.147,174,2.483,175,1.149,176,1.895,177,1.695,178,2.331,179,2.993,180,2.993,181,1.695,182,0.958,183,2.993]],["title/components/AuthRedirectComponent.html",[0,0.389,42,0.815]],["body/components/AuthRedirectComponent.html",[0,0.547,1,0.481,2,1.087,3,0.173,4,0.173,5,1.813,6,0.76,7,0.76,8,0.76,9,0.231,11,0.688,14,0.632,15,2.193,16,1.999,18,1.193,20,1.193,22,0.373,23,0.036,24,0.259,25,0.173,26,0.082,27,0.577,28,0.693,29,2.235,30,1.056,34,0.481,35,1.668,36,1.389,37,0.76,38,1.924,39,0.76,40,0.932,41,0.76,42,1.056,43,2.084,44,0.76,45,0.481,46,0.76,47,0.527,48,0.76,49,0.527,50,0.76,51,0.481,52,0.76,53,0.481,54,0.76,55,0.481,56,0.693,57,0.76,58,0.76,59,0.01,60,0.016,61,0.01,98,2.509,105,1.193,106,1.378,109,0.993,113,1.497,120,1.022,121,2.023,127,1.794,138,1.268,139,1.604,141,0.835,143,2.198,144,3.088,145,1.226,147,0.921,148,0.835,156,2.35,171,1.294,175,1.087,177,2.707,178,2.244,182,1.463,184,3.287,185,1.497,186,2.35,187,3.963,188,2.032,189,2.032,190,2.35,191,2.032,192,1.619,193,3.498,194,2.833,195,1.834,196,2.833,197,1.311,198,2.901,199,1.804,200,2.35,201,2.527,202,4.949,203,2.833,204,1.804,205,1.993,206,2.833,207,2.35,208,2.833,209,2.803,210,2.509,211,2.032,212,2.833,213,2.032,214,2.032,215,2.032,216,2.35,217,2.35,218,1.497,219,1.804,220,1.604,221,2.35,222,2.509,223,1.472,224,2.35,225,1.497,226,1.497,227,3.498,228,1.497,229,1.497,230,1.143,231,1.804,232,1.804,233,2.032,234,2.032,235,2.032,236,1.497,237,1.294,238,1.804,239,1.804,240,1.804,241,1.804,242,1.143,243,1.497,244,1.804,245,2.833,246,2.35,247,2.35,248,2.35,249,2.35,250,1.804,251,1.294,252,1.804,253,1.804,254,1.804,255,1.804,256,1.804,257,2.833,258,1.804,259,2.35,260,1.804,261,1.804,262,2.508,263,1.294,264,2.833,265,1.497,266,2.833,267,1.804,268,1.804,269,2.833,270,1.804,271,1.804,272,2.032,273,2.842,274,1.804,275,2.35,276,1.294,277,1.294,278,1.294,279,1.497,280,1.294,281,1.294,282,2.35,283,1.794,284,1.804,285,4.306,286,4.306,287,1.804,288,1.804,289,1.804,290,1.804,291,1.804,292,1.497,293,1.804,294,1.804,295,1.804]],["title/injectables/AuthService.html",[143,1.561,169,1.731]],["body/injectables/AuthService.html",[3,0.336,4,0.173,9,0.147,11,0.848,22,0.424,23,0.036,24,0.259,25,0.173,26,0.082,27,0.577,28,1.753,30,1.319,40,0.754,59,0.01,60,0.016,61,0.01,75,1.191,95,1.292,105,2.011,106,1.667,109,1.508,120,1.02,121,0.92,127,1.792,138,0.577,139,1.603,143,1.445,144,3.086,145,1.674,147,1.445,148,1.31,159,3.053,160,3.285,161,2.348,165,4.104,166,4.217,169,1.603,170,1.141,173,1.292,174,1.495,176,1.141,177,3.099,178,2.242,181,1.603,186,2.348,197,1.31,205,1.832,209,3.228,210,2.508,213,3.87,214,2.84,215,3.807,228,1.495,229,1.495,230,1.141,243,2.348,296,1.802,297,1.495,298,2.83,299,2.348,300,3.495,301,3.495,302,2.83,303,3.96,304,2.83,305,1.802,306,2.83,307,4.688,308,2.84,309,2.348,310,2.893,311,2.83,312,2.83,313,1.802,314,2.83,315,2.83,316,2.83,317,1.802,318,2.83,319,1.445,320,2.83,321,2.83,322,2.83,323,5.472,324,2.348,325,3.222,326,1.802,327,1.802,328,1.802,329,1.802,330,2.348,331,1.495,332,1.802,333,1.495,334,1.495,335,3.495,336,3.495,337,1.495,338,0.92,339,1.141,340,2.83,341,1.802,342,1.802,343,2.83,344,2.348,345,1.802,346,1.802,347,2.83,348,1.802,349,2.83,350,1.802,351,1.802,352,1.802,353,1.802,354,1.802,355,1.802,356,1.802,357,1.802,358,1.802,359,1.802,360,1.495,361,2.83,362,1.495]],["title/modules/CoreModule.html",[62,0.742,75,1.287]],["body/modules/CoreModule.html",[3,0.377,4,0.377,9,0.32,22,0.459,23,0.035,24,0.565,25,0.377,26,0.114,34,1.048,59,0.022,60,0.028,61,0.022,62,0.954,64,1.148,65,1.819,66,1.819,67,2.225,68,2.225,69,2.073,75,2.558,77,2.788,78,2.225,79,2.225,81,2.073,85,2.073,148,1.819,337,3.26,363,3.26,364,3.26,365,3.024,366,3.93,367,4.924,368,2.818,369,3.93,370,5.377,371,3.26,372,2.818,373,3.26,374,3.93,375,3.26,376,3.93]],["title/components/DashboardComponent.html",[0,0.389,45,0.815]],["body/components/DashboardComponent.html",[0,0.65,1,0.72,2,1.471,3,0.259,4,0.259,5,1.137,6,1.137,7,1.137,8,1.137,9,0.22,11,0.655,13,2.04,14,0.946,15,2.425,16,2.211,18,1.613,20,1.613,22,0.312,23,0.036,24,0.388,25,0.259,26,0.078,27,1.226,29,1.874,30,1.021,34,0.72,35,1.613,36,1.343,37,1.137,38,2.04,39,1.137,40,1.021,41,1.137,42,0.72,43,1.137,44,1.137,45,1.292,46,1.137,47,0.789,48,1.137,49,0.789,50,1.137,51,0.72,52,1.137,53,0.72,54,1.137,55,0.72,56,2.098,57,1.137,58,1.137,59,0.015,60,0.021,61,0.015,106,1.226,109,0.946,138,0.864,141,1.25,145,0.946,162,1.471,175,1.471,182,0.864,192,2.06,195,1.25,197,1.773,201,2.273,205,1.773,220,2.17,223,1.613,242,3.069,263,1.937,281,1.937,283,1.71,309,3.178,310,3.069,319,1.956,338,1.379,339,1.71,377,2.24,378,3.178,379,3.178,380,3.831,381,3.178,382,3.831,383,3.831,384,2.748,385,3.831,386,3.831,387,4.453,388,3.831,389,4.453,390,2.7,391,2.7,392,2.748,393,4.846,394,3.178,395,2.7,396,1.613,397,1.613,398,1.613,399,1.25,400,2.06,401,2.273,402,1.137,403,1.379,404,1.379,405,2.7,406,2.7,407,2.7]],["title/modules/DataModule.html",[62,0.742,408,2.193]],["body/modules/DataModule.html",[3,0.423,4,0.423,9,0.359,22,0.431,23,0.035,24,0.634,25,0.423,26,0.128,59,0.025,60,0.03,61,0.025,64,1.288,66,2.039,81,1.855,85,2.223,162,1.691,396,1.855,397,1.855,398,1.855,399,2.039,400,2.039,408,3.788,409,4.406,410,3.345,411,2.791,412,4.406,413,4.406]],["title/components/FooterComponent.html",[0,0.389,47,0.893]],["body/components/FooterComponent.html",[0,0.693,1,0.859,2,1.662,3,0.31,4,0.31,5,1.357,6,1.357,7,1.357,8,1.357,9,0.263,11,0.782,13,1.823,14,1.13,15,2.512,16,2.291,18,1.823,20,1.823,22,0.263,23,0.036,24,0.464,25,0.31,26,0.094,27,1.386,30,0.859,34,0.859,35,1.823,36,1.517,37,1.357,38,2.2,39,1.357,40,1.154,41,1.357,42,0.859,43,1.357,44,1.357,45,0.859,46,1.357,47,1.527,48,1.357,49,0.942,50,1.357,51,0.859,52,1.357,53,0.859,54,1.357,55,0.859,56,1.237,57,1.357,58,1.357,59,0.018,60,0.024,61,0.018,141,1.492,162,1.662,175,1.662,182,1.032,192,2.262,195,1.492,223,1.823,319,2.21,396,1.823,397,1.823,398,1.823,399,1.492,400,2.262,401,2.496,402,1.357,403,1.646,404,1.646,414,2.674,415,5.226,416,3.105,417,4.889,418,4.33]],["title/components/HeaderComponent.html",[0,0.389,49,0.893]],["body/components/HeaderComponent.html",[0,0.562,1,0.508,2,1.135,3,0.183,4,0.183,5,0.803,6,0.803,7,0.803,8,0.803,9,0.155,11,0.463,13,1.245,14,0.668,15,2.227,16,2.128,18,1.245,20,1.245,22,0.36,23,0.036,24,0.274,25,0.183,26,0.055,27,0.947,30,1.246,32,1.873,34,0.508,35,1.245,36,1.036,37,0.803,38,1.719,39,0.803,40,0.788,41,0.803,42,0.508,43,0.803,44,0.803,45,0.508,46,0.803,47,0.557,48,0.803,49,1.193,50,0.803,51,0.508,52,0.803,53,0.508,54,0.803,55,0.508,56,1.391,57,0.803,58,0.803,59,0.011,60,0.017,61,0.011,105,1.86,106,1.693,109,1.549,138,0.61,143,2.256,145,1.549,159,2.997,162,0.732,166,4.231,170,1.207,171,1.367,173,1.367,175,1.135,176,1.207,178,1.08,182,0.61,192,1.677,195,0.882,197,1.369,201,1.51,205,2.448,213,3.169,220,2.996,223,0.803,242,1.873,263,2.121,272,1.367,273,2.121,278,1.367,280,2.121,281,2.121,283,1.207,307,4.697,308,2.928,319,1.51,331,1.581,333,1.581,334,1.581,360,1.581,362,1.581,392,3.794,396,0.803,397,0.803,398,0.803,400,1.369,401,1.51,402,0.803,403,0.973,404,0.973,416,2.121,419,1.581,420,4.083,421,3.623,422,2.957,423,3.169,424,4.046,425,4.046,426,3.005,427,1.906,428,1.581,429,1.906,430,1.581,431,1.906,432,1.581,433,1.906,434,1.581,435,1.906,436,3.387,437,1.906,438,1.906,439,1.906,440,4.083,441,1.906,442,1.906,443,1.906,444,1.906,445,1.906,446,1.906,447,1.906,448,1.906,449,4.083,450,2.957,451,2.957,452,1.906,453,1.906,454,1.581,455,3.623,456,2.957,457,2.957,458,1.906,459,1.906]],["title/modules/HomeModule.html",[62,0.742,460,1.936]],["body/modules/HomeModule.html",[3,0.354,4,0.354,9,0.301,22,0.475,23,0.036,24,0.53,25,0.354,26,0.107,34,0.983,45,1.553,55,1.553,59,0.021,60,0.027,61,0.021,62,0.895,64,1.078,65,1.707,66,2.416,67,2.089,68,2.089,69,1.553,76,2.696,77,2.678,78,2.089,79,2.089,81,1.991,85,1.991,87,3.06,96,3.06,410,2.995,411,2.336,460,3.917,461,3.06,462,3.06,463,3.06,464,3.3,465,3.689,466,3.689,467,3.689,468,3.689]],["title/modules/HomeRoutingModule.html",[62,0.742,464,1.731]],["body/modules/HomeRoutingModule.html",[0,0.626,3,0.377,4,0.377,9,0.32,22,0.473,23,0.036,24,0.565,25,0.377,26,0.114,45,1.312,55,1.312,56,1.509,59,0.022,60,0.028,61,0.022,64,1.148,69,1.654,81,1.654,85,2.073,117,3.26,118,4.084,119,3.405,120,2.225,121,2.006,122,4.46,123,3.26,124,3.26,125,3.26,135,3.405,140,4.084,242,3.118,464,2.788,469,3.93,470,3.93,471,3.93,472,3.93,473,3.93]],["title/components/LayoutComponent.html",[0,0.389,51,0.815]],["body/components/LayoutComponent.html",[0,0.691,1,0.853,2,1.654,3,0.307,4,0.307,5,1.348,6,1.348,7,1.348,8,1.348,9,0.261,11,0.777,13,1.814,14,1.122,15,2.509,16,2.288,18,1.814,20,1.814,22,0.261,23,0.036,24,0.46,25,0.307,26,0.093,27,1.379,30,0.853,34,0.853,35,1.814,36,1.51,37,1.348,38,2.194,39,1.348,40,1.149,41,1.348,42,0.853,43,1.348,44,1.348,45,0.853,46,1.348,47,0.936,48,1.348,49,0.936,50,1.348,51,1.389,52,1.348,53,0.853,54,1.348,55,0.853,56,1.229,57,1.348,58,1.348,59,0.018,60,0.024,61,0.018,141,1.481,162,1.654,175,1.654,182,1.025,192,2.254,195,1.481,223,1.814,396,1.814,397,1.814,398,1.814,399,1.481,400,2.254,401,2.487,402,1.348,403,1.634,404,1.634,416,3.737,474,2.655,475,4.309,476,3.574,477,3.09,478,4.871,479,4.309]],["title/components/LoginComponent.html",[0,0.389,53,0.815]],["body/components/LoginComponent.html",[0,0.612,1,0.618,2,1.317,3,0.223,4,0.223,5,1.719,6,0.976,7,0.976,8,0.976,9,0.189,11,0.563,13,1.9,14,0.813,15,2.343,16,2.193,18,1.444,20,1.444,22,0.333,23,0.036,24,0.334,25,0.223,26,0.067,27,1.098,29,1.719,30,1.089,32,2.173,34,0.618,35,1.9,36,1.582,37,0.976,38,2.123,39,0.976,40,0.915,41,0.976,42,0.618,43,0.976,44,0.976,45,0.618,46,0.976,47,0.678,48,0.976,49,0.678,50,0.976,51,0.618,52,0.976,53,1.203,54,0.976,55,0.618,56,0.89,57,0.976,58,0.976,59,0.013,60,0.019,61,0.013,105,0.976,106,1.444,109,1.202,127,3.05,138,0.742,141,1.073,145,1.202,162,1.317,175,1.317,182,1.444,189,3.454,190,3.387,191,2.929,192,1.89,195,1.073,197,1.588,198,3.387,201,2.085,205,2.229,218,1.924,220,2.556,221,2.846,222,2.858,223,2.028,224,2.846,225,1.924,226,1.924,233,2.461,234,2.461,235,2.461,236,1.924,237,1.663,259,1.924,272,1.663,273,3.237,275,2.846,276,2.461,277,2.461,278,1.663,279,1.924,280,1.663,283,1.469,292,1.924,310,3.304,319,1.752,338,1.184,339,1.469,378,2.846,379,2.846,381,2.846,392,2.461,394,2.846,396,1.444,397,1.444,398,1.444,399,1.073,400,1.89,401,2.085,402,0.976,403,1.184,404,1.184,454,2.846,480,1.924,481,3.431,482,3.431,483,3.431,484,4.084,485,3.431,486,4.084,487,2.319,488,2.319,489,2.319,490,2.319,491,3.431,492,3.431,493,2.319,494,2.319,495,2.319,496,2.319]],["title/pipes/SafeResourceUrlPipe.html",[497,1.936,498,1.731]],["body/pipes/SafeResourceUrlPipe.html",[3,0.333,4,0.333,9,0.283,11,1.103,14,1.215,22,0.37,23,0.036,24,0.498,25,0.333,26,0.101,28,1.331,29,2.264,30,1.211,40,1.351,59,0.019,60,0.025,61,0.019,83,2.875,84,2.195,105,1.459,106,1.454,109,1.215,139,1.963,145,1.215,147,1.77,148,1.604,175,1.331,176,2.195,178,1.963,201,2.925,207,4.461,211,2.486,497,3.406,498,2.573,499,3.466,500,3.768,501,4.336,502,2.875,503,4.543,504,5.73,505,4.543,506,5.73,507,4.543,508,3.466,509,4.543,510,3.466,511,4.543,512,4.543,513,4.543,514,4.543,515,4.543,516,3.466,517,3.466,518,3.466]],["title/components/ServerComponent.html",[0,0.389,55,0.815]],["body/components/ServerComponent.html",[0,0.603,1,0.81,2,1.597,3,0.292,4,0.292,5,1.279,6,1.279,7,1.279,8,1.279,9,0.248,14,1.065,15,2.484,16,2.265,18,1.751,20,1.751,22,0.248,23,0.035,24,0.437,25,0.292,26,0.088,30,1.264,34,0.81,35,1.751,36,1.458,37,1.279,38,2.147,39,1.279,40,1.109,41,1.279,42,0.81,43,1.279,44,1.279,45,0.81,46,1.279,47,0.888,48,1.279,49,0.888,50,1.279,51,0.81,52,1.279,53,0.81,54,1.279,55,1.36,56,2.168,57,1.279,58,1.279,59,0.017,60,0.023,61,0.017,106,0.973,138,0.973,139,2.356,141,2.195,145,1.458,162,1.597,175,1.597,182,1.331,192,2.195,195,2.36,223,1.751,396,1.751,397,1.751,398,1.751,399,1.406,400,2.195,401,2.421,402,1.279,403,1.552,404,1.552,519,2.521,520,4.743,521,4.16,522,3.039,523,3.039,524,4.16,525,5.101,526,5.101,527,4.16,528,5.101,529,4.16,530,4.16,531,4.16]],["title/modules/SharedModule.html",[62,0.742,76,1.415]],["body/modules/SharedModule.html",[3,0.351,4,0.351,9,0.298,22,0.463,23,0.035,24,0.526,25,0.351,26,0.106,34,0.975,59,0.021,60,0.026,61,0.021,62,0.888,64,1.069,65,1.693,66,2.407,67,2.072,68,2.072,69,2.19,76,2.824,77,2.665,78,2.072,79,2.072,81,1.981,85,1.981,365,3.154,371,3.035,372,2.624,373,3.035,410,2.98,411,2.317,498,3.499,501,2.624,532,3.035,533,3.035,534,3.035,535,3.659,536,3.659,537,5.202,538,3.659,539,3.659,540,3.659]],["title/classes/TokenWrapper.html",[26,0.089,209,1.731]],["body/classes/TokenWrapper.html",[3,0.232,4,0.232,9,0.197,11,0.587,22,0.197,23,0.036,25,0.232,26,0.103,27,1.473,28,2.123,29,2.398,30,1.306,40,0.644,59,0.014,60,0.02,61,0.014,101,1.531,106,1.77,109,1.717,121,1.234,138,0.774,145,1.717,147,1.234,148,1.118,162,1.767,177,3.07,181,2.003,182,0.774,188,2.536,191,1.733,197,1.637,209,2.003,211,1.733,214,3.513,215,4.085,216,2.934,217,2.934,230,1.531,246,2.005,247,2.005,248,2.005,249,3.47,251,1.733,325,1.531,330,2.934,396,1.938,397,1.938,398,1.938,399,2.13,423,2.536,541,2.005,542,3.537,543,3.537,544,4.183,545,4.183,546,4.183,547,2.417,548,2.417,549,2.417,550,2.417,551,2.417,552,2.417,553,4.603,554,5.421,555,2.417,556,2.417,557,3.537,558,5.118,559,2.417,560,2.417,561,4.183,562,2.417,563,2.417,564,2.417,565,4.603,566,4.183,567,4.603,568,4.183,569,4.183,570,4.603,571,2.417,572,2.417,573,3.537,574,2.417,575,2.417,576,2.417,577,2.417,578,2.417,579,2.417,580,2.417,581,3.537,582,2.417,583,2.005,584,2.417]],["title/classes/User.html",[26,0.089,159,1.561]],["body/classes/User.html",[3,0.115,4,0.115,9,0.098,11,0.29,13,0.852,22,0.098,23,0.036,25,0.115,26,0.035,27,1.566,28,2.143,29,2.549,30,1.497,40,1.211,59,0.007,60,0.011,61,0.007,101,0.758,105,1.912,106,1.886,109,1.747,138,0.383,145,1.968,147,2.319,148,2.102,155,3.496,159,2.691,167,4.731,177,3.181,181,3.046,182,1.454,188,1.452,189,1.452,197,0.937,200,1.68,201,1.344,205,0.937,210,2.383,220,1.147,251,3.78,308,3.149,310,1.962,338,0.611,339,0.758,344,3.642,423,2.485,424,2.874,425,2.184,426,2.184,428,0.992,430,0.992,432,0.992,434,0.992,436,3.496,477,1.888,583,3.768,585,0.992,586,1.196,587,2.633,588,4.008,589,2.633,590,2.633,591,3.465,592,4.008,593,4.008,594,2.633,595,2.633,596,1.196,597,1.196,598,1.196,599,1.196,600,3.465,601,2.025,602,1.196,603,1.196,604,1.196,605,2.025,606,2.025,607,2.025,608,1.196,609,1.196,610,1.196,611,1.196,612,1.196,613,1.196,614,1.196,615,1.196,616,1.196,617,2.025,618,1.196,619,1.196,620,1.196,621,1.196,622,2.025,623,2.025,624,2.025,625,2.025,626,1.196,627,1.196,628,1.196,629,1.196,630,2.025,631,2.025,632,2.025,633,4.542,634,1.196,635,1.196,636,2.025,637,2.025,638,2.025,639,1.196,640,1.196,641,1.196,642,1.196,643,1.196,644,1.196,645,1.196,646,1.196,647,1.196,648,1.196,649,1.196,650,1.196,651,1.196,652,1.196,653,1.196,654,1.196,655,2.025,656,1.196,657,1.196,658,1.196,659,1.196,660,1.196,661,3.098,662,1.196,663,2.025,664,1.196,665,1.196,666,2.025,667,1.196,668,1.196,669,2.025,670,1.196,671,1.196,672,1.196,673,1.196,674,1.196,675,2.025,676,1.196,677,1.196,678,2.025,679,1.196,680,1.196,681,2.025,682,1.196,683,1.196,684,1.196,685,1.196,686,2.025,687,1.196,688,1.196,689,2.025,690,1.196,691,1.196,692,2.025,693,1.196,694,1.196,695,2.025,696,2.025,697,1.196,698,1.196,699,1.196,700,1.196,701,1.196,702,1.196,703,1.196,704,1.196,705,1.196,706,1.196]],["title/modules/UserInterfaceModule.html",[62,0.742,365,1.561]],["body/modules/UserInterfaceModule.html",[0,0.642,3,0.393,4,0.393,9,0.334,11,0.993,13,2.126,22,0.446,23,0.035,24,0.589,25,0.393,26,0.119,59,0.023,60,0.028,61,0.023,62,1.226,64,1.196,66,1.894,69,1.723,76,2.337,81,1.723,85,2.126,105,1.723,365,2.578,372,2.935,410,3.198,411,2.592,707,4.093,708,4.093,709,5.05,710,5.05,711,5.05,712,5.05,713,5.05,714,5.477,715,4.093]],["title/coverage.html",[716,3.465]],["body/coverage.html",[0,0.754,1,0.933,9,0.285,10,2.904,23,0.035,26,0.148,28,1.344,42,0.933,45,0.933,47,1.023,49,1.023,51,0.933,53,0.933,55,0.933,59,0.02,60,0.026,61,0.02,98,2.217,100,2.511,102,2.904,134,2.511,135,2.217,137,2.904,143,1.788,159,1.788,169,1.983,184,2.904,185,2.904,209,1.983,222,2.217,262,3.28,282,5.143,297,2.904,325,2.217,338,1.788,368,2.511,377,2.904,414,2.904,419,2.904,474,2.904,480,2.904,497,2.217,498,1.983,500,2.904,501,2.511,502,2.904,519,2.904,541,2.904,585,2.904,716,2.904,717,2.904,718,3.501,719,3.501,720,6.139,721,3.501,722,3.501,723,2.904,724,2.904,725,5.093,726,3.501,727,2.904,728,3.501,729,3.501,730,2.904,731,3.501,732,3.501,733,3.501]],["title/dependencies.html",[65,1.702,734,2.551]],["body/dependencies.html",[14,1.595,23,0.035,26,0.132,59,0.026,60,0.03,61,0.026,65,2.106,170,2.882,230,2.882,735,4.552,736,4.552,737,4.552,738,4.552,739,4.552,740,4.552,741,4.552,742,4.552,743,4.552,744,4.552,745,4.552,746,4.552,747,4.552]],["title/index.html",[138,0.816,748,2.551,749,2.551]],["body/index.html",[16,1.765,23,0.03,32,2.911,59,0.026,60,0.03,61,0.026,402,1.935,477,4.13,750,5.946,751,4.597,752,5.416,753,4.597,754,4.597,755,4.597,756,4.597,757,4.597,758,4.597,759,4.597,760,4.597,761,4.597]],["title/modules.html",[64,1.221]],["body/modules.html",[23,0.03,59,0.025,60,0.03,61,0.025,63,2.48,64,1.28,74,2.48,75,1.843,76,2.026,84,3.706,365,2.235,408,3.14,460,2.773,464,2.48,762,5.852,763,5.852,764,6.199,765,5.852,766,5.852]],["title/overview.html",[384,2.996]],["body/overview.html",[1,1.528,2,1.234,23,0.035,34,0.857,42,1.302,45,1.302,47,1.427,49,1.427,51,1.302,53,1.302,55,1.302,59,0.018,60,0.024,61,0.018,62,0.781,63,3.555,64,0.94,65,1.488,66,1.488,67,1.821,68,1.821,69,1.354,70,2.668,71,2.668,72,2.668,73,2.668,74,2.765,75,2.293,76,2.76,77,2.448,78,1.821,79,1.821,101,2.037,134,2.306,169,1.821,262,2.306,265,4.05,363,2.668,364,2.668,365,2.975,384,2.306,460,3.777,461,2.668,462,2.668,463,2.668,464,2.765,497,2.037,498,3.246,532,2.668,533,2.668,534,2.668,767,4.323,768,3.216]],["title/routes.html",[119,2.645]],["body/routes.html",[23,0.032,59,0.028,60,0.032,61,0.028,119,3.13]],["title/miscellaneous/variables.html",[769,2.116,770,3.051]],["body/miscellaneous/variables.html",[22,0.279,23,0.036,28,1.73,29,1.441,36,1.2,59,0.019,60,0.025,61,0.019,63,1.939,64,1,75,1.897,121,2.3,138,1.096,181,2.852,182,1.442,205,2.085,210,2.168,222,2.854,223,1.897,233,3.232,234,3.232,235,2.455,237,3.232,276,2.455,277,2.455,299,2.84,319,1.748,324,4.178,325,2.168,338,2.3,368,3.232,375,3.738,402,1.441,476,2.84,717,2.84,723,2.84,724,3.738,727,2.84,730,2.84,769,2.84,770,2.84,771,3.423,772,3.423,773,3.423,774,3.423,775,3.423,776,3.423,777,4.506,778,3.423,779,4.506,780,3.423,781,4.506,782,3.423,783,3.423,784,3.423,785,3.423,786,3.423,787,3.423,788,3.423,789,3.423,790,3.423,791,3.423,792,3.423,793,3.423,794,5.037,795,3.423,796,3.423,797,3.423,798,3.423,799,3.423,800,3.423,801,3.423,802,3.423,803,3.423,804,3.423,805,3.423]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":262,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1.13",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":265,"title":{},"body":{"components/AuthRedirectComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":282,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":292,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["11px",{"_index":457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["150",{"_index":280,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["16",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":768,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["36px",{"_index":455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":605,"title":{},"body":{"classes/User.html":{}}}],["50",{"_index":454,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["500px",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6.5.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":767,"title":{},"body":{"overview.html":{}}}],["9",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_avatar",{"_index":671,"title":{},"body":{"classes/User.html":{}}}],["_bot",{"_index":677,"title":{},"body":{"classes/User.html":{}}}],["_discriminator",{"_index":668,"title":{},"body":{"classes/User.html":{}}}],["_email",{"_index":691,"title":{},"body":{"classes/User.html":{}}}],["_flags",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["_id",{"_index":662,"title":{},"body":{"classes/User.html":{}}}],["_locale",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["_scope",{"_index":580,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["_system",{"_index":680,"title":{},"body":{"classes/User.html":{}}}],["_username",{"_index":665,"title":{},"body":{"classes/User.html":{}}}],["_verified",{"_index":688,"title":{},"body":{"classes/User.html":{}}}],["access",{"_index":214,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["access_token",{"_index":246,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["accessor",{"_index":220,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["accessors",{"_index":197,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":544,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["account",{"_index":633,"title":{},"body":{"classes/User.html":{}}}],["activated",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":227,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["activatedroutesnapshot",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["admin",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["already",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["angular/common/http",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["angular/forms",{"_index":538,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["angular/router",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/HomeRoutingModule.html":{}}}],["app",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/dashboard",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apppage",{"_index":100,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":74,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["areas",{"_index":712,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["array",{"_index":558,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["associated",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["async",{"_index":449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["attempting",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attributes",{"_index":217,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["auth",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["auth/redirect",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticate",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authentication",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["authguard",{"_index":135,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["authorization",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["authredirectcomponent",{"_index":42,"title":{"components/AuthRedirectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":143,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["auto",{"_index":279,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["available",{"_index":766,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":436,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["avatar(value",{"_index":676,"title":{},"body":{"classes/User.html":{}}}],["avatarurl",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["b",{"_index":530,"title":{},"body":{"components/ServerComponent.html":{}}}],["background",{"_index":273,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["based",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["behaviorsubject",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["being",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belongs",{"_index":617,"title":{},"body":{"classes/User.html":{}}}],["blacklist",{"_index":579,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["blacklist,id",{"_index":569,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["block",{"_index":267,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blur(5px",{"_index":286,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["boolean",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bot",{"_index":587,"title":{},"body":{"classes/User.html":{}}}],["bot(value",{"_index":679,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":764,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/SafeResourceUrlPipe.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":110,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["by.css(\"siltstride",{"_index":112,"title":{},"body":{"classes/AppPage.html":{}}}],["bypasses",{"_index":509,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["call",{"_index":413,"title":{},"body":{"modules/DataModule.html":{}}}],["called",{"_index":268,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["canactivate",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{}}}],["canactivate(next",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{}}}],["center",{"_index":295,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["children",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chosen",{"_index":636,"title":{},"body":{"classes/User.html":{}}}],["claritymodule",{"_index":714,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["class",{"_index":26,"title":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":101,"title":{},"body":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"overview.html":{}}}],["clr",{"_index":450,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clr/angular",{"_index":715,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["cluster_appmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":363,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":364,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":461,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":462,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":463,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":532,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":534,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":533,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":535,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":564,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["commonmodule",{"_index":410,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"overview.html":{}}}],["concepts",{"_index":761,"title":{},"body":{"index.html":{}}}],["configured",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/HomeRoutingModule.html":{},"classes/TokenWrapper.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["constructor(@optional",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(authservice",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["containing",{"_index":213,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["content",{"_index":113,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{}}}],["convention",{"_index":577,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convention,no",{"_index":566,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["core/core.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["core/guard/auth.guard",{"_index":471,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["core/helper/mouse",{"_index":225,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["core/http/auth.service",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{}}}],["core/import.guard",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/model/token.model",{"_index":228,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["core/model/user.model",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["coremodule",{"_index":75,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":716,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["d987de65ec7",{"_index":757,"title":{},"body":{"index.html":{}}}],["dangle",{"_index":578,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dangle,id",{"_index":568,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dashboard",{"_index":242,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["dashboard.component.html",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":45,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamodule",{"_index":408,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{}}}],["date",{"_index":554,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["default",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["defining",{"_index":475,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["designed",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determines",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["digit",{"_index":606,"title":{},"body":{"classes/User.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["disable",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{}}}],["discord",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["discord's",{"_index":188,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["discordoauthimplicitflowurl",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{}}}],["discordserverwidgeturl",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["discriminator",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["discriminator(value",{"_index":670,"title":{},"body":{"classes/User.html":{}}}],["discriminator]{@link",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["display",{"_index":266,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["documentation",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":528,"title":{},"body":{"components/ServerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["domsanitizer",{"_index":515,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer's",{"_index":510,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer}'s",{"_index":517,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["e2e",{"_index":103,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts",{"_index":102,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["effect",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"miscellaneous/variables.html":{}}}],["element.offsetheight",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.offsetwidth",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.style.setproperty",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elements",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":592,"title":{},"body":{"classes/User.html":{}}}],["email(value",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["empty",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["enabled",{"_index":632,"title":{},"body":{"classes/User.html":{}}}],["env",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["environment",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.discordcdnrooturl}avatars/${this.id}/${this.avatar}.png",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["environment.discordoauthimplicitflowurl",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.discordserverwidgeturl",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["equivalent",{"_index":208,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["error",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{}}}],["eslint/naming",{"_index":565,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["eslint/no",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["event",{"_index":234,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["event.clientx",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.clienty",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":553,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiration.setseconds(expiration.getseconds",{"_index":574,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expires_in",{"_index":248,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["expiresin",{"_index":546,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["exports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["exposing",{"_index":709,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["factor",{"_index":631,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{}}}],["filter",{"_index":285,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["fixed",{"_index":260,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["flags",{"_index":593,"title":{},"body":{"classes/User.html":{}}}],["flags(value",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["flags]{@link",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["float",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["folder",{"_index":750,"title":{},"body":{"index.html":{}}}],["followed",{"_index":751,"title":{},"body":{"index.html":{}}}],["footer",{"_index":415,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["footer.component.html",{"_index":418,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":417,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":47,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreground",{"_index":257,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["formatting",{"_index":674,"title":{},"body":{"classes/User.html":{}}}],["formsmodule",{"_index":537,"title":{},"body":{"modules/SharedModule.html":{}}}],["fragment",{"_index":202,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["fragment?.split",{"_index":244,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["full",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["function",{"_index":223,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"miscellaneous/variables.html":{}}}],["get(`${environment.discordapirooturl}/users/@me",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccesstoken",{"_index":547,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getavatar",{"_index":610,"title":{},"body":{"classes/User.html":{}}}],["getavatarurl",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["getbot",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["getdiscordoauthimplicitflowurl",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["getdiscordserverwidgeturl",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getdiscriminator",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["getemail",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["getexpiresin",{"_index":551,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getflags",{"_index":649,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["getlocale",{"_index":634,"title":{},"body":{"classes/User.html":{}}}],["getmfaenabled",{"_index":628,"title":{},"body":{"classes/User.html":{}}}],["getonmousemove",{"_index":218,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["getpremiumtype",{"_index":653,"title":{},"body":{"classes/User.html":{}}}],["getpublicflags",{"_index":657,"title":{},"body":{"classes/User.html":{}}}],["getscope",{"_index":555,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getsystem",{"_index":620,"title":{},"body":{"classes/User.html":{}}}],["gettext",{"_index":115,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":748,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":111,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokentype",{"_index":549,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getuser",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["getuserinfo",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserinfo(tokenwrapper",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusername",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["getverified",{"_index":641,"title":{},"body":{"classes/User.html":{}}}],["globaleventhandlers#onmousemove",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":191,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{}}}],["grant]{@link",{"_index":231,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["graph",{"_index":765,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":291,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["guard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guides",{"_index":752,"title":{},"body":{"index.html":{}}}],["handling",{"_index":186,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["handshake",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["hash",{"_index":612,"title":{},"body":{"classes/User.html":{}}}],["hash]{@link",{"_index":672,"title":{},"body":{"classes/User.html":{}}}],["header",{"_index":420,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["header.component.html",{"_index":422,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":421,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":49,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["height",{"_index":283,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["helper",{"_index":205,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["highly",{"_index":755,"title":{},"body":{"index.html":{}}}],["home",{"_index":466,"title":{},"body":{"modules/HomeModule.html":{}}}],["homemodule",{"_index":460,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":464,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["htmlelement",{"_index":233,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclient",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclientmodule",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpheaders",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://angular",{"_index":758,"title":{},"body":{"index.html":{}}}],["https://discord.com/developers/docs/reference#image",{"_index":673,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/resources/user#user",{"_index":661,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#authorization",{"_index":563,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#implicit",{"_index":232,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["https://itnext.io/choosing",{"_index":754,"title":{},"body":{"index.html":{}}}],["icon",{"_index":451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["id",{"_index":423,"title":{},"body":{"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["id(value",{"_index":664,"title":{},"body":{"classes/User.html":{}}}],["id]{@link",{"_index":438,"title":{},"body":{"components/HeaderComponent.html":{}}}],["identifier",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["image",{"_index":272,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["implemented",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{}}}],["implicit",{"_index":190,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"miscellaneous/variables.html":{}}}],["import(\\\"@module/home/home.module\\\").then((m",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imported",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["index",{"_index":138,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["information",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{}}}],["initiate",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["injectable",{"_index":169,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["inline",{"_index":270,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["innocuous",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["interface.module",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["interface.module.ts",{"_index":708,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["interface/user",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["isloggedin",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":294,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["jane",{"_index":531,"title":{},"body":{"components/ServerComponent.html":{}}}],["john",{"_index":527,"title":{},"body":{"components/ServerComponent.html":{}}}],["landing",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":637,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":416,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["layout.component.html",{"_index":479,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":478,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/auth",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/footer/footer.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header/header.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout/layout.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/login/login.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layoutcomponent",{"_index":51,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":261,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["library",{"_index":711,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["lifecycle",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["line",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{}}}],["link",{"_index":105,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["loadchildren",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locale",{"_index":590,"title":{},"body":{"classes/User.html":{}}}],["locale(value",{"_index":687,"title":{},"body":{"classes/User.html":{}}}],["log",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["logic",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["login(tokenwrapper",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m.homemodule",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["map((user",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["match",{"_index":570,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["matching",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":625,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"dependencies.html":{}}}],["method",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["method,@typescript",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["methods",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{}}}],["mfa_enabled",{"_index":683,"title":{},"body":{"classes/User.html":{}}}],["mfaenabled",{"_index":589,"title":{},"body":{"classes/User.html":{}}}],["min",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["miscellaneou",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":769,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":542,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["module/home/page/dashboard/dashboard.component",{"_index":470,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/server/server.component",{"_index":472,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["modulename",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouse",{"_index":236,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["mouseevent",{"_index":235,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mouseparallaxhelper",{"_index":222,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mousex",{"_index":276,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mousey",{"_index":277,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["moz",{"_index":287,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["ms",{"_index":289,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["navigated",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigateto",{"_index":108,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{}}}],["ngmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["ngoninit",{"_index":195,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["nitro",{"_index":655,"title":{},"body":{"classes/User.html":{}}}],["null",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":251,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["o",{"_index":288,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["oauth2",{"_index":189,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["obj",{"_index":245,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["obj[property[0",{"_index":254,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["object",{"_index":210,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["official",{"_index":622,"title":{},"body":{"classes/User.html":{}}}],["offsetheight",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offsetwidth",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oninit",{"_index":192,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["onmousemove",{"_index":198,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["option",{"_index":638,"title":{},"body":{"classes/User.html":{}}}],["optional",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["overflow",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlapping",{"_index":760,"title":{},"body":{"index.html":{}}}],["overview",{"_index":384,"title":{"overview.html":{}},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["owner",{"_index":526,"title":{},"body":{"components/ServerComponent.html":{}}}],["package",{"_index":734,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["page/dashboard/dashboard.component",{"_index":467,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/server/server.component",{"_index":468,"title":{},"body":{"modules/HomeModule.html":{}}}],["parallax",{"_index":237,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parallax.helper",{"_index":226,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["parallax.helper.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["parameters",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["params.value",{"_index":575,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["params.value).split",{"_index":582,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["parentmodule",{"_index":375,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":623,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pipe",{"_index":497,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(catcherror((error",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((user",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe/safe",{"_index":539,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes",{"_index":499,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["pipetransform",{"_index":514,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["place",{"_index":293,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["plaintoclass",{"_index":229,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["plaintoclass(tokenwrapper",{"_index":256,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["plaintoclass(user",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["platform",{"_index":601,"title":{},"body":{"classes/User.html":{}}}],["position",{"_index":259,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["post",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["premium",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["premium_type",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["premiumtype",{"_index":594,"title":{},"body":{"classes/User.html":{}}}],["preventing",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["production",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":525,"title":{},"body":{"components/ServerComponent.html":{}}}],["promise",{"_index":107,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{}}}],["properties",{"_index":243,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["properties?.foreach((value",{"_index":250,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["properties[index]?.split",{"_index":253,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["property",{"_index":252,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["property[1",{"_index":255,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["protractor",{"_index":104,"title":{},"body":{"classes/AppPage.html":{}}}],["provided",{"_index":207,"title":{},"body":{"components/AuthRedirectComponent.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["providedin",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["public_flags",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["publicflags",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["radius",{"_index":453,"title":{},"body":{"components/HeaderComponent.html":{}}}],["redirect",{"_index":187,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["redirect.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["redirect.component.html",{"_index":194,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.scss",{"_index":193,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts",{"_index":185,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirect.component.ts:33",{"_index":219,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts:40",{"_index":199,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts:55",{"_index":204,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect/auth",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirectto",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["reference",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeat",{"_index":275,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["request",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["requesting",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":271,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["resource",{"_index":501,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["resourceurl",{"_index":512,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["response",{"_index":216,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["response]{@link",{"_index":562,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["result",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["retrieve",{"_index":200,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/User.html":{}}}],["retrieves",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["retrieving",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["return",{"_index":109,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["returning",{"_index":221,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["returns",{"_index":106,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["right",{"_index":263,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["route",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{}}}],["router",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["routermodule",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":473,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":119,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["routing.module.ts",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["rxjs",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["safe",{"_index":513,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurl",{"_index":506,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurlpipe",{"_index":498,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":516,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["scaffolding",{"_index":753,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":756,"title":{},"body":{"index.html":{}}}],["scope",{"_index":249,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["scope(value",{"_index":584,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scopes",{"_index":557,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scss",{"_index":269,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["security",{"_index":511,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["see",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["server",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["server.component.html",{"_index":521,"title":{},"body":{"components/ServerComponent.html":{}}}],["server.component.scss",{"_index":520,"title":{},"body":{"components/ServerComponent.html":{}}}],["servercomponent",{"_index":55,"title":{"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":583,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["setavatar(value",{"_index":613,"title":{},"body":{"classes/User.html":{}}}],["setbot(value",{"_index":618,"title":{},"body":{"classes/User.html":{}}}],["setdiscriminator(value",{"_index":608,"title":{},"body":{"classes/User.html":{}}}],["setemail(value",{"_index":647,"title":{},"body":{"classes/User.html":{}}}],["setflags(value",{"_index":651,"title":{},"body":{"classes/User.html":{}}}],["setid(value",{"_index":597,"title":{},"body":{"classes/User.html":{}}}],["setlocale(value",{"_index":639,"title":{},"body":{"classes/User.html":{}}}],["setscope(value",{"_index":559,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setsystem(value",{"_index":626,"title":{},"body":{"classes/User.html":{}}}],["setusername(value",{"_index":602,"title":{},"body":{"classes/User.html":{}}}],["setverified(value",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["shared/shared.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["shared/user",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":76,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["siltstride",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"index.html":{}}}],["size",{"_index":278,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["skipself",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["span",{"_index":114,"title":{},"body":{"classes/AppPage.html":{}}}],["specification",{"_index":586,"title":{},"body":{"classes/User.html":{}}}],["specification]{@link",{"_index":660,"title":{},"body":{"classes/User.html":{}}}],["spinner",{"_index":290,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["spinner::before",{"_index":258,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["src/.../environment.ts",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../import.guard.ts",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mouse",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guard/auth.guard.ts",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guard/auth.guard.ts:17",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guard/auth.guard.ts:26",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helper/mouse",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/auth.service.ts",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/http/auth.service.ts:24",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:32",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:41",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:49",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:65",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:78",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/http/auth.service.ts:94",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/import.guard.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/model/token.model.ts",{"_index":541,"title":{},"body":{"classes/TokenWrapper.html":{},"coverage.html":{}}}],["src/app/core/model/token.model.ts:19",{"_index":548,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:35",{"_index":550,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:57",{"_index":552,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:72",{"_index":556,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:77",{"_index":560,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/user.model.ts",{"_index":585,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:108",{"_index":621,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:111",{"_index":627,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:126",{"_index":629,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:141",{"_index":635,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:144",{"_index":640,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:159",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:162",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:177",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:18",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:180",{"_index":648,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:195",{"_index":650,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:198",{"_index":652,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:21",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:213",{"_index":654,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:228",{"_index":658,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:236",{"_index":659,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:36",{"_index":599,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:39",{"_index":603,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:54",{"_index":604,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:57",{"_index":609,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:72",{"_index":611,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:75",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:90",{"_index":616,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:93",{"_index":619,"title":{},"body":{"classes/User.html":{}}}],["src/app/data/data.module.ts",{"_index":409,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/layout/auth",{"_index":184,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":414,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts",{"_index":419,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts:20",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:28",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:36",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:44",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:52",{"_index":435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/layout/layout.component.ts",{"_index":474,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/login/login.component.ts",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/login/login.component.ts:18",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layout/login/login.component.ts:26",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/module/home/home",{"_index":469,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/module/home/home.module.ts",{"_index":465,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts:17",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts",{"_index":519,"title":{},"body":{"components/ServerComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/server/server.component.ts:13",{"_index":523,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts:8",{"_index":522,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/shared/pipe/safe",{"_index":500,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":536,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/user",{"_index":707,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["src/environments/environment.ts",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":524,"title":{},"body":{"components/ServerComponent.html":{}}}],["started",{"_index":749,"title":{"index.html":{}},"body":{}}],["state",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["stop",{"_index":529,"title":{},"body":{"components/ServerComponent.html":{}}}],["string",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":477,"title":{},"body":{"components/LayoutComponent.html":{},"classes/User.html":{},"index.html":{}}}],["structure.readthedocs.io/en/latest/index.html",{"_index":759,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["subscription",{"_index":656,"title":{},"body":{"classes/User.html":{}}}],["subscription]{@link",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["successful",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":762,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":763,"title":{},"body":{"modules.html":{}}}],["system",{"_index":588,"title":{},"body":{"classes/User.html":{}}}],["system(value",{"_index":682,"title":{},"body":{"classes/User.html":{}}}],["table",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":607,"title":{},"body":{"classes/User.html":{}}}],["tap",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap((value",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["tes3mp",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this._avatar",{"_index":675,"title":{},"body":{"classes/User.html":{}}}],["this._bot",{"_index":678,"title":{},"body":{"classes/User.html":{}}}],["this._discriminator",{"_index":669,"title":{},"body":{"classes/User.html":{}}}],["this._email",{"_index":692,"title":{},"body":{"classes/User.html":{}}}],["this._flags",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["this._id",{"_index":663,"title":{},"body":{"classes/User.html":{}}}],["this._locale",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["this._scope",{"_index":581,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this._system",{"_index":681,"title":{},"body":{"classes/User.html":{}}}],["this._username",{"_index":666,"title":{},"body":{"classes/User.html":{}}}],["this._verified",{"_index":689,"title":{},"body":{"classes/User.html":{}}}],["this.access_token",{"_index":571,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.authservice.isloggedin().pipe",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(tokenwrapper).subscribe",{"_index":240,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.authservice.user",{"_index":437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.user.pipe(map((user",{"_index":440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.expires_in",{"_index":576,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.getuserinfo(tokenwrapper).pipe",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mfa_enabled",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["this.premium_type",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["this.public_flags",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["this.route.snapshot.fragment",{"_index":239,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([\"app",{"_index":241,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"login",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(resourceurl",{"_index":518,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["this.token_type",{"_index":572,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.tokensubject.asobservable",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokensubject.next(tokenwrapper",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.transformfragmenttotokenwrapper",{"_index":238,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.user.pipe",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersubject.asobservable",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersubject.next(user",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this]{@link",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwifalreadyloaded",{"_index":368,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded(parentmodule",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{}}}],["tied",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":215,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token]{@link",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_type",{"_index":247,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["tokensubject",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":545,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokenwrapper",{"_index":209,"title":{"classes/TokenWrapper.html":{}},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{},"coverage.html":{}}}],["tokenwrapper?.accesstoken",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenwrapper?.tokentype",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["transform",{"_index":211,"title":{},"body":{"components/AuthRedirectComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["transform((params",{"_index":573,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transform(resourceurl",{"_index":507,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["transformed",{"_index":212,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transformer",{"_index":230,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":561,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transformfragmenttotokenwrapper",{"_index":196,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transformfragmenttotokenwrapper(fragment",{"_index":203,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transforming",{"_index":206,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["trust",{"_index":504,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["tslib",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":630,"title":{},"body":{"classes/User.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["typescript",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{}}}],["ui",{"_index":710,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["unauthenticated",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["underscore",{"_index":567,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["unique",{"_index":600,"title":{},"body":{"classes/User.html":{}}}],["unsafe",{"_index":412,"title":{},"body":{"modules/DataModule.html":{}}}],["urgent",{"_index":624,"title":{},"body":{"classes/User.html":{}}}],["url",{"_index":201,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/User.html":{}}}],["url(\"../../../assets/fargoth.jpg",{"_index":274,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["url(\"~assets/fargoth.jpg",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["url(~assets/siltstrider4.svg",{"_index":459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.pipe",{"_index":540,"title":{},"body":{"modules/SharedModule.html":{}}}],["url.pipe.ts",{"_index":502,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:18",{"_index":508,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["url]{@link",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urls",{"_index":505,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urltree",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":224,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["used",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":159,"title":{"classes/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user#avatarurl",{"_index":447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user#discriminator",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user#id",{"_index":439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user#username",{"_index":442,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user's",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/User.html":{}}}],["user.avatarurl",{"_index":448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.discriminator",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.id",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["user.username",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["userinterfacemodule",{"_index":365,"title":{"modules/UserInterfaceModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":424,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["username(value",{"_index":667,"title":{},"body":{"classes/User.html":{}}}],["username]{@link",{"_index":441,"title":{},"body":{"components/HeaderComponent.html":{}}}],["users",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["usersubject",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["user}'s",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["utility",{"_index":503,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["validate",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{}}}],["variable",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":770,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":591,"title":{},"body":{"classes/User.html":{}}}],["verified(value",{"_index":690,"title":{},"body":{"classes/User.html":{}}}],["via",{"_index":713,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["visual",{"_index":476,"title":{},"body":{"components/LayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["webcomponents/custom",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["webcomponents/webcomponentsjs",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":284,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["welcome",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{}}}],["whether",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["widget",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapping",{"_index":543,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["z",{"_index":264,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["zone.js",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Component for the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n/**\n * Main Component for the application\n */\n@Component({\n  selector: \"siltstride-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  /**\n   * @ignore\n   * @type {string}\n   */\n  public title = \"siltstride-admin-web\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthRedirectComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { HeaderComponent } from \"./layout/header/header.component\";\nimport { FooterComponent } from \"./layout/footer/footer.component\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { CoreModule } from \"@core/core.module\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/auth-redirect.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AuthRedirectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                e2e class for the AppComponent\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from \"protractor\";\n\n/**\n * e2e class for the {@link AppComponent}\n */\nexport class AppPage {\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  getTitleText(): Promise {\n    return element(\n      by.css(\"siltstride-root .content span\")\n    ).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/auth-redirect.component\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/app/dashboard\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"auth/redirect\", component: AuthRedirectComponent },\n  {\n    path: \"app\",\n    component: LayoutComponent,\n    children: [\n      {\n        path: \"\",\n        loadChildren: () =>\n          \"import(\\\"@module/home/home.module\\\").then((m) => m.HomeModule)\"\n      }\n    ]\n  },\n  { path: \"**\", redirectTo: \"/app/dashboard\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guard/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guard/auth.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines whether a route can be activated based on user authentication status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route attempting to be navigated to\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current Router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { CoreModule } from \"@core/core.module\";\nimport { AuthService } from \"@core/http/auth.service\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Determines whether a route can be activated based on user authentication status\n   * @param {ActivatedRouteSnapshot} next The route attempting to be navigated to\n   * @param {RouterStateSnapshot} state Current Router state\n   * @returns {Observable | Promise | boolean | UrlTree}\n   */\n  public canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isLoggedIn().pipe(\n      tap((value) => {\n        if (!value) {\n          void this.router.navigate([\"login\"]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthRedirectComponent.html":{"url":"components/AuthRedirectComponent.html","title":"component - AuthRedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthRedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth-redirect/auth-redirect.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling the redirect from Discord's OAuth2 implicit grant\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-auth-redirect\n            \n\n            \n                styleUrls\n                ./auth-redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                transformFragmentToTokenWrapper\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/auth-redirect/auth-redirect.component.ts:40\n                \n            \n\n\n            \n                \n                    Retrieve the URL fragment and login\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformFragmentToTokenWrapper\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformFragmentToTokenWrapper(fragment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/auth-redirect/auth-redirect.component.ts:55\n                \n            \n\n\n            \n                \n                    Helper transforming the provided URL fragment string into the equivalent TokenWrapper object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL fragment to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenWrapper\n\n                    \n                    \n                        Transformed object containing the access token response attributes\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/auth-redirect/auth-redirect.component.ts:33\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use in the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { mouseParallaxHelper } from \"@core/helper/mouse-parallax.helper\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"@core/http/auth.service\";\nimport { TokenWrapper } from \"@core/model/token.model\";\nimport { plainToClass } from \"class-transformer\";\n\n/**\n * Component handling the redirect from [Discord's OAuth2 implicit grant]{@link https://discord.com/developers/docs/topics/oauth2#implicit-grant}\n */\n@Component({\n  selector: \"siltstride-auth-redirect\",\n  templateUrl: \"./auth-redirect.component.html\",\n  styleUrls: [\"./auth-redirect.component.scss\"]\n})\nexport class AuthRedirectComponent implements OnInit {\n  /**\n   * @ignore\n   * @param {ActivatedRoute} route\n   * @param {Router} router\n   * @param {AuthService} authService\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n\n  /**\n   * Retrieve the URL fragment and login\n   */\n  public ngOnInit(): void {\n    const tokenWrapper: TokenWrapper = this.transformFragmentToTokenWrapper(\n      this.route.snapshot.fragment\n    );\n    this.authService.login(tokenWrapper).subscribe(() => {\n      void this.router.navigate([\"app\", \"dashboard\"]);\n    });\n  }\n\n  /**\n   * Helper transforming the provided URL fragment string into the equivalent {@link TokenWrapper} object\n   * @param {string} fragment URL fragment to transform\n   * @returns {TokenWrapper} Transformed object containing the access token response attributes\n   * @private\n   */\n  private transformFragmentToTokenWrapper(fragment: string): TokenWrapper {\n    const properties = fragment?.split(\"&\");\n    const obj: {\n      access_token: string;\n      token_type: string;\n      expires_in: string;\n      scope: string;\n    } = {\n      access_token: \"\",\n      token_type: \"\",\n      expires_in: \"\",\n      scope: \"\"\n    };\n    properties?.forEach((value: string, index: number) => {\n      const property = properties[index]?.split(\"=\");\n      obj[property[0]] = property[1];\n    });\n    return plainToClass(TokenWrapper, obj);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./auth-redirect.component.scss\n                \n                .foreground-spinner::before {\n  content: \"\";\n  position: fixed;\n  left: 0;\n  right: 0;\n  z-index: -1;\n  display: block;\n  // url must be called in scss template file.\n  // Inline scss template would not resolve image url.\n  background-image: url(\"../../../assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n  width: 100%;\n  height: 100%;\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -o-filter: blur(5px);\n  -ms-filter: blur(5px);\n  filter: blur(5px);\n}\n\n.foreground-spinner {\n  display: grid;\n  height: 100vh;\n  place-items: center;\n  z-index: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthRedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling authentication logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenSubject\n                            \n                            \n                                    Private\n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUserInfo\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInfo(tokenWrapper: TokenWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/auth.service.ts:78\n                \n            \n\n\n            \n                \n                    Helper for requesting the logged in User's information from Discord\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenWrapper\n                                    \n                                                TokenWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object containing the access token to authenticate the request to Discord\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the logged in user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/auth.service.ts:94\n                \n            \n\n\n            \n                \n                    Helper method to validate the current User is logged in\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the current user's authentication status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(tokenWrapper: TokenWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/auth.service.ts:65\n                \n            \n\n\n            \n                \n                    Retrieves the current User's info from Discord\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenWrapper\n                                    \n                                                TokenWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object containing the access token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Used for validation of successful retrieval of the current user\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new TokenWrapper()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                        The token for the logged in User\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new User()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                        The logged in User\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/http/auth.service.ts:32\n                                \n                            \n                    \n                        \n                                Get the token associated with the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/http/auth.service.ts:49\n                                \n                            \n                    \n                        \n                                Get the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CoreModule } from \"@core/core.module\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { TokenWrapper } from \"@core/model/token.model\";\nimport { Router } from \"@angular/router\";\nimport { plainToClass } from \"class-transformer\";\nimport { map } from \"rxjs/operators\";\nimport { User } from \"@core/model/user.model\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"@env\";\n\n/**\n * Service handling authentication logic\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthService {\n  /**\n   * The [token]{@link TokenWrapper} for the logged in {@link User}\n   * @type {BehaviorSubject} BehaviorSubject containing the token\n   * @private\n   */\n  private tokenSubject: BehaviorSubject = new BehaviorSubject(\n    new TokenWrapper()\n  );\n\n  /**\n   * Get the [token]{@link TokenWrapper} associated with the logged in {@link User}\n   * @returns {Observable} Observable containing the token\n   */\n  public get token(): Observable {\n    return this.tokenSubject.asObservable();\n  }\n\n  /**\n   * The logged in {@link User}\n   * @type {BehaviorSubject} BehaviorSubject containing the logged in user\n   * @private\n   */\n  private userSubject: BehaviorSubject = new BehaviorSubject(\n    new User()\n  );\n\n  /**\n   * Get the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user\n   */\n  public get user(): Observable {\n    return this.userSubject.asObservable();\n  }\n\n  /**\n   * @ignore\n   * @param {Router} router\n   * @param {HttpClient} http\n   */\n  constructor(private router: Router, private http: HttpClient) {}\n\n  /**\n   * Retrieves the current {@link User}'s info from Discord\n   * @param {TokenWrapper} tokenWrapper Object containing the access token\n   * @returns {Observable} Used for validation of successful retrieval of the current user\n   */\n  public login(tokenWrapper: TokenWrapper): Observable {\n    this.tokenSubject.next(tokenWrapper);\n    return this.getUserInfo(tokenWrapper).pipe(\n      map((user: User) => this.userSubject.next(user))\n    );\n  }\n\n  /**\n   * Helper for requesting the logged in {@link User}'s information from Discord\n   * @param {TokenWrapper} tokenWrapper Object containing the access token to authenticate the request to Discord\n   * @returns {Observable} Observable containing the logged in user\n   * @private\n   */\n  private getUserInfo(tokenWrapper: TokenWrapper): Observable {\n    const headers: HttpHeaders = new HttpHeaders({\n      Authorization: `${tokenWrapper?.tokenType} ${tokenWrapper?.accessToken}`\n    });\n    return this.http\n      .get(`${environment.discordApiRootUrl}/users/@me`, {\n        headers\n      })\n      .pipe(map((user: User) => plainToClass(User, user)));\n    // .pipe(catchError((error) => this.router.navigate([\"/login\"])));\n  }\n\n  /**\n   * Helper method to validate the current {@link User} is logged in\n   * @returns {Observable} Observable containing the current user's authentication status\n   */\n  public isLoggedIn(): Observable {\n    return this.user.pipe(\n      map((user: User) => user.id != null && user.username != null)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { throwIfAlreadyLoaded } from \"@core/import.guard\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\n\n@NgModule({\n  imports: [HttpClientModule, UserInterfaceModule],\n  exports: [HttpClientModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordServerWidgetUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordServerWidgetUrl\n                    \n                \n\n                \n                    \n                        getdiscordServerWidgetUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/dashboard/dashboard.component.ts:17\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord server widget URL configured for our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\n\n/**\n * Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n */\n@Component({\n  selector: \"siltstride-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord server widget URL configured for our application\n   * @returns {string} Discord server widget URL\n   */\n  public get discordServerWidgetUrl(): string {\n    return environment.discordServerWidgetUrl;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Dashboard\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .discord-server-widget {\n  float: right;\n  width: 350px;\n  height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dashboard          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n@NgModule({\n  declarations: [],\n  imports: [CommonModule]\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component used in the application layout\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n/**\n * Footer Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.scss\"]\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header Component used in the application layout\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    id\n                                \n                                \n                                    username\n                                \n                                \n                                    discriminator\n                                \n                                \n                                    avatarUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:20\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:28\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the id of the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:36\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the username of the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        discriminator\n                    \n                \n\n                \n                    \n                        getdiscriminator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:44\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the discriminator of the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avatarUrl\n                    \n                \n\n                \n                    \n                        getavatarUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:52\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the avatar URL of the logged in User\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"@core/http/auth.service\";\nimport { Observable } from \"rxjs\";\nimport { User } from \"@core/model/user.model\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Header Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\"]\n})\nexport class HeaderComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user\n   */\n  public get user(): Observable {\n    return this.authService.user;\n  }\n\n  /**\n   * Helper accessor retrieving the [id]{@link User#id} of the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user's id\n   */\n  public get id(): Observable {\n    return this.authService.user.pipe(map((user: User) => user.id));\n  }\n\n  /**\n   * Helper accessor retrieving the [username]{@link User#username} of the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user's username\n   */\n  public get username(): Observable {\n    return this.authService.user.pipe(map((user: User) => user.username));\n  }\n\n  /**\n   * Helper accessor retrieving the [discriminator]{@link User#discriminator} of the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user's discriminator\n   */\n  public get discriminator(): Observable {\n    return this.authService.user.pipe(map((user: User) => user.discriminator));\n  }\n\n  /**\n   * Helper accessor retrieving the [avatar URL]{@link User#avatarUrl} of the logged in {@link User}\n   * @returns {Observable} Observable containing the logged in user's avatar URL\n   */\n  public get avatarUrl(): Observable {\n    return this.authService.user.pipe(map((user: User) => user.avatarUrl));\n  }\n\n  /**\n   * @ignore\n   * @param {AuthService} authService\n   */\n  constructor(private authService: AuthService) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      Siltstride Admin\n    \n  \n  \n    Dashboard\n    Server\n  \n  \n    \n      \n      {{ username | async }}#{{ discriminator | async }}\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .clr-icon {\n  &.user-avatar {\n    border-radius: 50%;\n    //background-size: 150% 150%;\n    //width: 36px;\n    //margin-right: 11px;\n  }\n}\n\n.clr-icon {\n  &.siltstride-logo {\n    background-image: url(~assets/SiltStrider4.svg);\n    height: 36px;\n    width: 36px;\n    margin-right: 11px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Siltstride Admin            Dashboard    Server                    {{ username | async }}#{{ discriminator | async }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            ServerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeRoutingModule } from \"./home-routing.module\";\nimport { DashboardComponent } from \"./page/dashboard/dashboard.component\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { ServerComponent } from \"./page/server/server.component\";\n\n@NgModule({\n  declarations: [DashboardComponent, ServerComponent],\n  imports: [CommonModule, HomeRoutingModule, SharedModule]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"@module/home/page/dashboard/dashboard.component\";\nimport { AuthGuard } from \"@core/guard/auth.guard\";\nimport { ServerComponent } from \"@module/home/page/server/server.component\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/dashboard\" },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"server\", component: ServerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Layout Component defining the visual structure of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n/**\n * Layout Component defining the visual structure of the application\n */\n@Component({\n  selector: \"siltstride-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"]\n})\nexport class LayoutComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as the landing page for unauthenticated users of the application and where they will initiate the OAuth2 login handshake with Discord\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordOAuthImplicitFlowUrl\n                                \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordOAuthImplicitFlowUrl\n                    \n                \n\n                \n                    \n                        getdiscordOAuthImplicitFlowUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:18\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord OAuth2 implicit grant URL configured for our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:26\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use in the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\nimport { mouseParallaxHelper } from \"@core/helper/mouse-parallax.helper\";\n\n/**\n * Component used as the landing page for unauthenticated users of the application and where they will initiate the OAuth2 login handshake with Discord\n */\n@Component({\n  selector: \"siltstride-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord OAuth2 implicit grant URL configured for our application\n   * @returns {string} Discord OAuth2 implicit grant URL\n   */\n  public get discordOAuthImplicitFlowUrl(): string {\n    return environment.discordOAuthImplicitFlowUrl;\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to\n      Siltstride Admin\n    \n    \n      \n        Log In with Discord\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :host {\n  --mouseX: 50%;\n  --mouseY: 50%;\n}\n\n.login-wrapper {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to      Siltstride Admin                      Log In with Discord            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeResourceUrlPipe.html":{"url":"pipes/SafeResourceUrlPipe.html","title":"pipe - SafeResourceUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeResourceUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/safe-resource-url.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Utility Pipe to trust provided resource URLs\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeResourceUrl\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(resourceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipe/safe-resource-url.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Bypasses the DomSanitizer's security trust for the provided resource URL\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resource URL to trust\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        The safe resource URL\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n/**\n * Utility Pipe to trust provided resource URLs\n */\n@Pipe({\n  name: \"safeResourceUrl\"\n})\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  /**\n   * Bypasses the {@link DomSanitizer}'s security trust for the provided resource URL\n   * @param {string} resourceUrl Resource URL to trust\n   * @returns {SafeResourceUrl} The safe resource URL\n   */\n  public transform(resourceUrl: string): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerComponent.html":{"url":"components/ServerComponent.html","title":"component - ServerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/server/server.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-server\n            \n\n            \n                styleUrls\n                ./server.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/module/home/page/server/server.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/home/page/server/server.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"siltstride-server\",\n  templateUrl: \"./server.component.html\",\n  styleUrls: [\"./server.component.scss\"]\n})\nexport class ServerComponent implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Start Server\n      \n        \n          \n          \n             Project A \n             Owner: John Doe \n          \n        \n        ...\n      \n    \n  \n  \n    \n      Stop Server\n      \n        \n          \n          \n             Project B \n             Owner: Jane Doe \n          \n        \n        ...\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./server.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Server                                               Project A              Owner: John Doe                           ...                        Stop Server                                               Project B              Owner: Jane Doe                           ...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SafeResourceUrlPipe } from \"./pipe/safe-resource-url.pipe\";\n\n@NgModule({\n  declarations: [SafeResourceUrlPipe],\n  imports: [CommonModule, FormsModule, UserInterfaceModule],\n  exports: [FormsModule, UserInterfaceModule, SafeResourceUrlPipe]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenWrapper.html":{"url":"classes/TokenWrapper.html","title":"class - TokenWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/token.model.ts\n        \n\n            \n                Description\n            \n            \n                Model wrapping Discord's Access Token response attributes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    tokenType\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    scope\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:19\n                                \n                            \n                    \n                        \n                                The access token\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tokenType\n                    \n                \n\n                \n                    \n                        gettokenType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:35\n                                \n                            \n                    \n                        \n                                The token type\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:57\n                                \n                            \n                    \n                        \n                                The expiration date for the token\n\n\n                                \n                                \n                                \n                                    Returns :         Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        scope\n                    \n                \n\n                \n                    \n                        getscope()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:72\n                                \n                            \n                    \n                        \n                                The scopes associated to the token\n\n\n                                \n                                \n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n                \n                    \n                        setscope(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Transform, TransformFnParams, Type } from \"class-transformer\";\n\n/**\n * Model wrapping Discord's [Access Token response]{@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-response} attributes\n */\nexport class TokenWrapper {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private access_token: string;\n\n  /**\n   * The access token\n   * @returns {string}\n   */\n  public get accessToken(): string {\n    return this.access_token;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private token_type: string;\n\n  /**\n   * The token type\n   * @returns {string}\n   */\n  public get tokenType(): string {\n    return this.token_type;\n  }\n\n  /**\n   * @ignore\n   * @type {Date}\n   * @private\n   */\n  @Type(() => Number)\n  @Transform((params: TransformFnParams) => {\n    const expiration = new Date();\n    expiration.setSeconds(expiration.getSeconds() + params.value);\n    return expiration;\n  })\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private expires_in: Date;\n\n  /**\n   * The expiration date for the token\n   * @returns {Date}\n   */\n  public get expiresIn(): Date {\n    return this.expires_in;\n  }\n\n  /**\n   * @ignore\n   * @type {Array}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private _scope: Array;\n  /**\n   * The scopes associated to the token\n   * @returns {Array}\n   */\n  public get scope(): Array {\n    return this._scope;\n  }\n  @Type(() => String)\n  @Transform((params: TransformFnParams) => (params.value).split(\"+\"))\n  public set scope(value: Array) {\n    this._scope = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n            \n                Description\n            \n            \n                User object as defined by Discord's user structure specification\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    username\n                                \n                                \n                                    discriminator\n                                \n                                \n                                    avatar\n                                \n                                \n                                    bot\n                                \n                                \n                                    system\n                                \n                                \n                                    mfaEnabled\n                                \n                                \n                                    locale\n                                \n                                \n                                    verified\n                                \n                                \n                                    email\n                                \n                                \n                                    flags\n                                \n                                \n                                    premiumType\n                                \n                                \n                                    publicFlags\n                                \n                                \n                                    avatarUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:18\n                                \n                            \n                    \n                        \n                                The User's id\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:36\n                                \n                            \n                    \n                        \n                                The User's username, not unique across the platform\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        discriminator\n                    \n                \n\n                \n                    \n                        getdiscriminator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:54\n                                \n                            \n                    \n                        \n                                The User's 4-digit Discord tag\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdiscriminator(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n\n                \n                    \n                        getavatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:72\n                                \n                            \n                    \n                        \n                                The User's avatar hash\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setavatar(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bot\n                    \n                \n\n                \n                    \n                        getbot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:90\n                                \n                            \n                    \n                        \n                                Whether the User belongs to an OAuth2 application\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setbot(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        system\n                    \n                \n\n                \n                    \n                        getsystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:108\n                                \n                            \n                    \n                        \n                                Whether the user is an Official Discord System user (part of the urgent message system)\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsystem(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mfaEnabled\n                    \n                \n\n                \n                    \n                        getmfaEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:126\n                                \n                            \n                    \n                        \n                                Whether the user has two factor enabled on their account\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:141\n                                \n                            \n                    \n                        \n                                The User's chosen language option\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlocale(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:144\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        verified\n                    \n                \n\n                \n                    \n                        getverified()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:159\n                                \n                            \n                    \n                        \n                                Whether the email on this account has been verified\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setverified(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:162\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:177\n                                \n                            \n                    \n                        \n                                The User's email\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setemail(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:180\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        flags\n                    \n                \n\n                \n                    \n                        getflags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:195\n                                \n                            \n                    \n                        \n                                The flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setflags(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:198\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        premiumType\n                    \n                \n\n                \n                    \n                        getpremiumType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:213\n                                \n                            \n                    \n                        \n                                The type of Nitro subscription on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        publicFlags\n                    \n                \n\n                \n                    \n                        getpublicFlags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:228\n                                \n                            \n                    \n                        \n                                The public flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avatarUrl\n                    \n                \n\n                \n                    \n                        getavatarUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:236\n                                \n                            \n                    \n                        \n                                Helper accessor to retrieve the unique avatar URL for this\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { environment } from \"@env\";\n\n/**\n * User object as defined by [Discord's user structure specification]{@link https://discord.com/developers/docs/resources/user#user-object-user-structure}\n */\nexport class User {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _id: string;\n\n  /**\n   * The {@link User}'s id\n   * @returns {string}\n   */\n  public get id(): string {\n    return this._id;\n  }\n  public set id(value: string) {\n    this._id = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _username: string;\n\n  /**\n   * The {@link User}'s username, not unique across the platform\n   * @returns {string}\n   */\n  public get username(): string {\n    return this._username;\n  }\n  public set username(value: string) {\n    this._username = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _discriminator: string;\n\n  /**\n   * The {@link User}'s 4-digit Discord tag\n   * @returns {string}\n   */\n  public get discriminator(): string {\n    return this._discriminator;\n  }\n  public set discriminator(value: string) {\n    this._discriminator = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _avatar: string;\n\n  /**\n   * The {@link User}'s [avatar hash]{@link https://discord.com/developers/docs/reference#image-formatting}\n   * @returns {string}\n   */\n  public get avatar(): string {\n    return this._avatar;\n  }\n  public set avatar(value: string) {\n    this._avatar = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _bot?: boolean;\n\n  /**\n   * Whether the {@link User} belongs to an OAuth2 application\n   * @returns {boolean}\n   */\n  public get bot(): boolean {\n    return this._bot;\n  }\n  public set bot(value: boolean) {\n    this._bot = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _system?: boolean;\n\n  /**\n   * Whether the user is an Official Discord System user (part of the urgent message system)\n   * @returns {boolean}\n   */\n  public get system(): boolean {\n    return this._system;\n  }\n  public set system(value: boolean) {\n    this._system = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private mfa_enabled?: boolean;\n\n  /**\n   * Whether the user has two factor enabled on their account\n   * @returns {boolean}\n   */\n  public get mfaEnabled(): boolean {\n    return this.mfa_enabled;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _locale?: string;\n\n  /**\n   * The {@link User}'s chosen language option\n   * @returns {string}\n   */\n  public get locale(): string {\n    return this._locale;\n  }\n  public set locale(value: string) {\n    this._locale = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _verified?: boolean;\n\n  /**\n   * Whether the email on this account has been verified\n   * @returns {boolean}\n   */\n  public get verified(): boolean {\n    return this._verified;\n  }\n  public set verified(value: boolean) {\n    this._verified = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _email?: string;\n\n  /**\n   * The {@link User}'s email\n   * @returns {string}\n   */\n  public get email(): string {\n    return this._email;\n  }\n  public set email(value: string) {\n    this._email = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private _flags?: number;\n\n  /**\n   * The [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get flags(): number {\n    return this._flags;\n  }\n  public set flags(value: number) {\n    this._flags = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private premium_type?: number;\n\n  /**\n   * The [type of Nitro subscription]{@link https://discord.com/developers/docs/resources/user#user-object-premium-types} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get premiumType(): number {\n    return this.premium_type;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private public_flags?: number;\n\n  /**\n   * The public [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get publicFlags(): number {\n    return this.public_flags;\n  }\n\n  /**\n   * Helper accessor to retrieve the unique avatar URL for [this]{@link User}\n   * @returns {string} The unique avatar URL\n   */\n  public get avatarUrl(): string {\n    return `${environment.discordCdnRootUrl}avatars/${this.id}/${this.avatar}.png`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInterfaceModule.html":{"url":"modules/UserInterfaceModule.html","title":"module - UserInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/user-interface/user-interface.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for exposing the UI component library to other areas of the application via the SharedModule\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ClarityModule } from \"@clr/angular\";\n\n/**\n * Module for exposing the UI component library to other areas of the application via the {@link SharedModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ClarityModule],\n  exports: [ClarityModule]\n})\nexport class UserInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/helper/mouse-parallax.helper.ts\n            \n            variable\n            mouseParallaxHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/import.guard.ts\n            \n            variable\n            throwIfAlreadyLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/token.model.ts\n            \n            class\n            TokenWrapper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/auth-redirect/auth-redirect.component.ts\n            \n            component\n            AuthRedirectComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/server/server.component.ts\n            \n            component\n            ServerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/safe-resource-url.pipe.ts\n            \n            pipe\n            SafeResourceUrlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @webcomponents/webcomponentsjs : ^2.0.0\n        \n            @webcomponents/custom-elements : ^1.0.0\n        \n            class-transformer : ^0.3.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSiltstride Admin\nFolder Structure\nFollowed these guides for scaffolding folder structure:\n\nhttps://itnext.io/choosing-a-highly-scalable-folder-structure-in-angular-d987de65ec7\nhttps://angular-folder-structure.readthedocs.io/en/latest/index.html\n\nThese guides have overlapping concepts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mouseParallaxHelper   (src/.../mouse-parallax.helper.ts)\n                        \n                        \n                            throwIfAlreadyLoaded   (src/.../import.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/helper/mouse-parallax.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mouseParallaxHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : (\n  element: HTMLElement,\n  event: MouseEvent\n): void => {\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  element.style.setProperty(\n    \"--mouseX\",\n    `${(event.clientX * 9) / offsetWidth}%`\n  );\n  element.style.setProperty(\n    \"--mouseY\",\n    `${(event.clientY * 16) / offsetHeight}%`\n  );\n}\n                        \n                    \n\n                \n                    \n                        Visual parallax effect helper function designed to be tied to the\nGlobalEventHandlers#onmousemove\nevent of any HTMLElement\nUsed this Stack Overflow post\nto determine parallax logic\n\n                    \n                \n\n            \n        \n\n    src/app/core/import.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            throwIfAlreadyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  parentModule: CoreModule,\n  moduleName: string\n): void => {\n  if (parentModule) {\n    throw new Error(\n      `${moduleName} has already been loaded. Import ${moduleName} modules in the AppModule only.`\n    );\n  }\n}\n                        \n                    \n\n                \n                    \n                        Helper function preventing the CoreModule from being imported more than once as implemented in the Angular reference documentation\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
