var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.368,1,0.852]],["body/components/AppComponent.html",[0,0.582,1,1.263,2,1.194,3,0.198,4,0.198,5,0.934,6,0.934,7,0.934,8,0.934,9,0.172,10,2.128,11,0.77,12,3.729,13,1.599,14,0.809,15,2.308,16,2.165,17,2.037,18,1.379,19,4.431,20,1.379,21,3.729,22,0.445,23,1.379,24,1.943,25,3.729,26,1.194,27,5.647,28,3.729,29,5.46,30,0.77,31,2.527,32,1.283,33,2.23,34,2.751,35,4.029,36,3.139,37,3.729,38,3.27,39,4.431,40,3.729,41,0.934,42,3.729,43,0.809,44,0.028,45,0.915,46,1.321,47,0.753,48,3.167,49,3.729,50,3.729,51,0.846,52,0.895,53,2.527,54,2.527,55,1.379,56,1.872,57,2.461,58,2.851,59,0.301,60,0.282,61,3.729,62,3.729,63,3.729,64,3.729,65,1.171,66,3.12,67,2.128,68,0.198,69,0.076,70,1.063,71,1.006,72,0.712,73,1.864,74,1.668,75,2.527,76,2.527,77,0.522,78,4.431,79,2.527,80,0.563,81,1.194,82,2.527,83,2.527,84,2.128,85,1.668,86,1.864,87,2.527,88,2.527,89,2.527,90,2.527,91,2.527,92,2.527,93,2.527,94,1.511,95,2.128,96,2.527,97,2.527,98,2.527,99,1.38,100,2.527,101,2.527,102,1.419,103,1.269,104,2.527,105,2.527,106,4.892,107,2.128,108,2.128,109,3.729,110,1.864,111,2.128,112,2.527,113,1.511,114,1.864,115,1.668,116,2.527,117,2.527,118,2.527,119,0.652,120,1.379,121,1.194,122,0.934,123,1.809,124,0.934,125,0.934,126,0.652,127,0.934,128,0.934,129,0.652,130,0.934,131,0.701,132,0.934,133,0.701,134,0.934,135,0.652,136,0.934,137,0.652,138,0.934,139,0.652,140,0.934,141,0.701,142,0.809,143,0.934,144,0.652,145,0.934,146,0.701,147,0.934,148,0.934,149,0.934,150,0.01,151,0.015,152,0.01]],["title/modules/AppModule.html",[153,0.984,154,1.974]],["body/modules/AppModule.html",[1,1.666,3,0.251,4,0.251,9,0.218,44,0.028,59,0.445,60,0.357,68,0.251,69,0.096,86,2.365,107,2.699,119,0.827,126,1.526,131,1.64,133,1.64,135,1.526,137,1.526,150,0.013,151,0.018,152,0.013,153,0.955,154,4.055,155,1.103,156,1.609,157,2.539,158,3.024,159,3.024,160,1.485,161,2.699,162,2.699,163,2.699,164,2.699,165,2.699,166,3.535,167,2.967,168,2.967,169,3.535,170,2.643,171,1.917,172,1.917,173,3.205,174,2.047,175,4.419,176,3.72,177,1.917,178,2.047,179,2.699,180,3.205,181,2.699,182,3.205,183,3.205,184,2.699,185,4.419,186,3.205,187,2.699,188,2.699,189,2.699,190,2.116,191,2.699,192,4.419,193,2.116,194,3.205,195,2.116,196,3.205,197,3.205]],["title/classes/AppPage.html",[69,0.099,198,2.436]],["body/classes/AppPage.html",[1,1.424,3,0.353,4,0.353,9,0.307,11,0.931,17,2.463,44,0.028,51,1.054,59,0.307,68,0.353,69,0.178,70,1.324,77,1.139,80,1.004,121,1.767,150,0.018,151,0.023,152,0.018,177,2.696,198,4.072,199,2.976,200,3.796,201,5.518,202,4.509,203,6.487,204,4.509,205,4.509,206,4.509,207,4.509,208,3.796,209,4.509,210,4.509]],["title/modules/AppRoutingModule.html",[153,0.984,166,1.974]],["body/modules/AppRoutingModule.html",[0,0.632,3,0.316,4,0.316,9,0.274,41,0.77,44,0.029,59,0.429,60,0.45,65,1.868,68,0.316,69,0.121,86,2.975,126,1.328,135,1.328,137,1.328,150,0.017,151,0.021,152,0.017,155,1.387,160,1.868,166,3.078,174,1.868,178,2.384,181,3.395,184,3.395,189,3.395,190,2.662,191,3.395,211,4.033,212,3.395,213,4.333,214,3.742,215,3.078,216,3.395,217,2.025,218,5.311,219,4.033,220,4.033,221,5.146,222,5.146,223,3.395,224,4.033,225,2.662,226,4.033,227,4.033,228,4.033,229,4.033,230,4.033]],["title/guards/AuthGuard.html",[231,2.436,232,2.179]],["body/guards/AuthGuard.html",[3,0.265,4,0.265,9,0.231,11,0.699,17,1.851,22,0.597,23,1.697,24,1.166,30,0.947,35,4.183,41,0.876,43,1.47,44,0.028,45,0.947,46,1.368,47,1.368,51,0.876,52,0.813,57,3.683,58,1.851,59,0.397,60,0.378,65,1.57,68,0.265,69,0.101,72,0.994,77,0.699,81,1.085,94,2.745,99,2.508,102,1.47,103,1.701,150,0.014,151,0.019,152,0.014,232,3.03,233,2.5,234,2.853,235,4.909,236,3.389,237,3.284,238,3.389,239,3.389,240,4.909,241,5.06,242,4.909,243,3.389,244,4.59,245,3.865,246,3.336,247,4.59,248,4.59,249,3.387,250,1.505,251,4.59,252,4.59,253,2.785,254,1.827,255,3.387,256,1.827,257,1.453,258,2.5,259,3.389,260,1.851,261,2.026,262,1.349,263,1.185,264,1.185,265,1.185,266,1.185,267,1.273,268,3.387,269,3.387,270,3.389,271,3.389,272,1.349,273,3.389]],["title/components/AuthRedirectComponent.html",[0,0.368,126,0.852]],["body/components/AuthRedirectComponent.html",[0,0.566,1,0.61,2,1.136,3,0.185,4,0.185,5,1.876,6,0.874,7,0.874,8,0.874,9,0.241,11,0.488,14,0.757,15,2.278,16,2.119,18,1.312,20,1.312,22,0.751,23,1.312,24,1.465,26,1.136,30,0.732,32,1.465,35,2.811,38,1.744,41,0.677,44,0.028,45,0.732,48,1.938,51,0.813,52,1.278,55,1.312,59,0.345,60,0.264,65,1.095,68,0.185,69,0.071,70,0.567,72,0.904,77,0.488,80,0.526,81,0.757,94,1.413,110,3.143,111,1.99,113,2.122,114,1.744,115,1.56,119,0.61,120,1.751,121,1.516,122,0.874,123,2.102,124,0.874,125,0.874,126,1.222,127,2.102,128,0.874,129,0.61,130,0.874,131,0.656,132,0.874,133,0.656,134,0.874,135,0.61,136,0.874,137,0.61,138,0.874,139,0.61,140,0.874,141,0.656,142,0.757,143,0.874,144,0.61,145,0.874,146,0.656,147,0.874,148,0.874,149,0.874,150,0.01,151,0.015,152,0.01,190,2.811,208,1.99,217,1.187,225,1.56,237,2.327,246,1.413,258,1.744,262,1.412,274,3.586,275,1.99,276,2.987,277,4.734,278,2.618,279,2.342,280,2.618,281,2.342,282,2.327,283,4.259,284,3.548,285,2.586,286,3.586,287,2.364,288,2.618,289,2.193,290,2.987,291,3.548,292,1.99,293,2.364,294,2.122,295,3.125,296,1.27,297,2.618,298,1.99,299,2.618,300,2.327,301,0.941,302,2.364,303,2.364,304,1.99,305,2.364,306,2.364,307,2.364,308,2.364,309,1.56,310,2.618,311,2.618,312,1.99,313,1.744,314,3.548,315,2.364,316,2.364,317,2.618,318,1.744,319,3.548,320,2.987,321,2.364,322,2.364,323,3.548,324,2.364,325,2.811,326,4.289,327,2.364,328,3.986,329,2.618,330,2.618,331,2.618,332,2.987,333,2.618,334,2.987,335,3.548,336,5.921,337,5.921,338,3.548,339,3.548,340,3.548,341,1.99,342,1.99]],["title/injectables/AuthService.html",[237,1.804,256,1.314]],["body/injectables/AuthService.html",[3,0.227,4,0.227,9,0.197,11,0.851,22,0.511,23,1.524,24,1.795,26,1.32,30,1.077,32,1.418,33,2.465,34,3.042,41,0.997,43,0.929,44,0.028,45,0.599,46,1.429,47,0.865,51,1.093,52,0.989,57,2.721,59,0.375,60,0.324,68,0.227,69,0.087,70,0.696,72,1.125,77,0.851,80,1.162,81,0.929,85,2.721,94,3.757,99,2.851,102,0.929,150,0.012,151,0.017,152,0.012,167,2.07,187,2.444,237,2.252,249,3.042,250,0.749,253,2.911,254,2.279,255,3.851,256,1.64,257,1.245,260,1.586,261,1.736,263,0.749,264,0.749,265,0.749,266,0.749,267,0.805,272,1.155,276,3.471,279,2.721,280,3.042,281,2.721,296,0.865,300,3.562,301,1.155,304,3.471,343,1.916,344,2.444,345,3.042,346,3.042,347,4.794,348,5.219,349,4.122,350,2.902,351,4.122,352,3.471,353,4.122,354,2.902,355,3.471,356,4.122,357,2.07,358,2.252,359,3.471,360,1.524,361,4.122,362,4.122,363,4.122,364,4.96,365,2.444,366,2.418,367,2.902,368,2.902,369,2.902,370,3.471,371,1.736,372,2.902,373,0.998,374,2.902,375,2.902,376,2.902]],["title/modules/CoreModule.html",[153,0.984,167,1.657]],["body/modules/CoreModule.html",[3,0.342,4,0.342,9,0.297,44,0.028,47,1.303,59,0.418,60,0.487,68,0.342,69,0.131,119,1.128,150,0.018,151,0.022,152,0.018,153,1.303,155,1.504,156,2.194,157,2.194,158,2.614,159,2.614,160,2.508,167,3.311,170,3.238,171,2.614,172,2.614,174,2.508,178,2.508,193,2.885,377,3.68,378,3.68,379,3.517,380,4.371,381,5.414,382,3.225,383,4.371,384,5.882,385,3.68,386,3.225,387,3.68,388,4.371,389,3.68,390,4.371]],["title/guards/CurrentUserResolver.html",[215,1.974,231,2.436]],["body/guards/CurrentUserResolver.html",[3,0.267,4,0.267,9,0.231,11,0.95,17,1.859,22,0.599,23,1.702,30,0.702,35,3.038,36,3.875,41,1.175,43,1.089,44,0.028,45,0.702,46,1.014,47,1.014,51,0.879,59,0.397,60,0.379,65,1.576,68,0.267,69,0.102,70,0.816,72,0.996,77,0.702,80,1.025,99,3.419,102,1.67,103,1.708,150,0.014,151,0.019,152,0.014,215,2.752,225,4.061,233,2.51,240,4.915,241,5.066,242,4.915,246,3.679,250,1.188,253,2.788,254,1.831,256,1.831,257,1.459,261,2.034,262,1.354,263,1.188,264,1.188,265,1.188,266,1.188,267,1.277,268,3.396,269,3.396,288,3.396,301,1.354,345,3.396,357,2.311,360,1.702,391,3.875,392,2.864,393,4.602,394,4.602,395,4.602,396,4.602,397,3.402,398,3.402,399,4.602,400,4.602,401,3.854,402,3.402,403,3.402]],["title/components/DashboardComponent.html",[0,0.368,129,0.852]],["body/components/DashboardComponent.html",[0,0.624,1,0.781,2,1.359,3,0.237,4,0.237,5,1.119,6,1.119,7,1.119,8,1.119,9,0.206,11,0.624,13,2.28,14,0.969,15,2.382,16,2.216,18,1.57,20,1.57,22,0.533,26,1.359,30,0.624,32,1.46,41,0.81,44,0.028,45,0.876,51,0.81,52,0.726,55,1.57,56,2.131,59,0.289,60,0.337,68,0.237,69,0.09,70,1.018,71,1.951,72,0.81,77,0.624,81,0.969,113,1.809,115,1.997,119,0.781,120,1.57,121,1.359,122,1.119,123,1.966,124,1.119,125,1.119,126,0.781,127,1.119,128,1.119,129,1.372,130,1.119,131,0.839,132,1.119,133,0.839,134,1.119,135,0.781,136,1.119,137,0.781,138,1.119,139,0.781,140,1.119,141,0.839,142,0.969,143,1.119,144,0.781,145,1.119,146,0.839,147,1.119,148,1.119,149,1.119,150,0.012,151,0.017,152,0.012,250,1.095,262,1.689,263,1.095,264,1.095,265,1.095,266,0.781,267,1.36,282,2.679,285,1.653,289,2.272,296,1.265,309,3.509,318,2.232,357,2.669,360,1.57,373,1.687,404,2.547,405,3.573,406,3.132,407,4.244,408,3.573,409,3.573,410,4.244,411,3.132,412,3.573,413,4.244,414,4.244,415,3.471,416,4.903,417,4.244,418,4.903,419,3.025,420,3.025,421,5.316,422,3.573,423,1.653,424,1.997,425,3.025,426,1.402,427,1.809,428,1.809,429,3.025,430,3.025,431,3.025]],["title/modules/DataModule.html",[153,0.984,432,2.436]],["body/modules/DataModule.html",[3,0.379,4,0.379,9,0.329,44,0.028,59,0.392,60,0.54,68,0.379,69,0.145,150,0.02,151,0.024,152,0.02,155,1.664,157,2.429,174,2.242,178,2.668,250,1.249,263,1.249,264,1.249,265,1.249,266,1.249,267,1.342,432,4.249,433,4.838,434,3.801,435,3.194,436,4.074,437,4.074]],["title/components/FooterComponent.html",[0,0.368,131,0.916]],["body/components/FooterComponent.html",[0,0.66,1,0.914,2,1.514,3,0.277,4,0.277,5,1.31,6,1.31,7,1.31,8,1.31,9,0.241,11,0.731,13,2.028,14,1.134,15,2.44,16,2.27,18,1.749,20,1.749,41,0.903,44,0.028,45,0.976,52,0.85,59,0.241,60,0.395,68,0.277,69,0.106,70,1.134,72,0.676,81,1.134,119,0.914,120,1.749,121,1.514,122,1.31,123,2.101,124,1.31,125,1.31,126,0.914,127,1.31,128,1.31,129,0.914,130,1.31,131,1.576,132,1.31,133,0.983,134,1.31,135,0.914,136,1.31,137,0.914,138,1.31,139,0.914,140,1.31,141,0.983,142,1.134,143,1.31,144,0.914,145,1.31,146,0.983,147,1.31,148,1.31,149,1.31,150,0.015,151,0.019,152,0.015,250,1.221,262,1.882,263,1.221,264,1.221,265,1.221,266,0.914,267,1.477,282,2.908,285,1.935,296,1.41,360,1.749,373,1.831,426,1.641,427,2.118,428,2.118,438,2.982,439,5.68,440,3.489,441,5.323,442,4.729]],["title/components/HeaderComponent.html",[0,0.368,133,0.916]],["body/components/HeaderComponent.html",[0,0.673,1,0.619,2,1.149,3,0.188,4,0.188,5,0.887,6,0.887,7,0.887,8,0.887,9,0.163,11,0.741,13,1.539,14,0.768,15,2.285,16,2.179,18,1.327,20,1.327,22,0.423,24,1.234,26,1.149,30,0.985,32,1.234,41,1.259,43,0.768,44,0.028,45,0.887,46,0.715,47,0.715,51,0.975,52,0.576,55,1.764,56,2.395,59,0.244,60,0.268,68,0.188,69,0.072,70,0.861,71,1.71,72,0.821,74,2.369,77,0.741,80,0.799,81,0.768,102,0.768,113,1.435,115,2.369,119,0.619,120,1.327,121,1.149,122,0.887,123,1.764,124,0.887,125,0.887,126,0.619,127,0.887,128,0.887,129,0.619,130,0.887,131,0.666,132,0.887,133,1.323,134,0.887,135,0.619,136,0.887,137,0.619,138,0.887,139,0.619,140,0.887,141,0.666,142,0.768,143,0.887,144,0.619,145,0.887,146,0.666,147,0.887,148,0.887,149,0.887,150,0.01,151,0.015,152,0.01,195,1.584,249,2.648,250,0.619,263,0.619,264,0.619,265,0.619,266,0.619,267,0.666,272,2.132,289,2.366,296,1.422,301,0.955,309,2.369,318,2.648,325,1.584,326,2.648,331,1.771,333,2.648,357,1.802,358,2.348,360,1.764,366,1.112,373,0.826,415,2.146,437,3.619,440,2.648,443,2.021,444,3.519,445,2.369,446,2.648,447,2.648,448,4.298,449,3.589,450,2.648,451,4.298,452,3.589,453,3.171,454,3.171,455,3.619,456,3.171,457,1.771,458,2.4,459,2.021,460,3.021,461,2.4,462,2.4,463,3.619,464,1.584,465,3.619,466,3.589,467,3.589,468,1.771,469,2.648,470,2.021,471,3.021,472,2.021,473,1.311,474,2.021,475,1.584,476,1.584,477,1.771,478,1.771,479,1.771,480,2.4,481,3.589,482,2.4,483,3.021,484,3.021,485,2.4,486,3.021,487,3.589,488,2.648,489,3.589,490,3.589,491,2.021,492,2.021,493,1.584,494,4.298,495,3.589,496,3.589,497,2.4,498,2.4,499,2.4]],["title/modules/HomeModule.html",[153,0.984,500,2.179]],["body/modules/HomeModule.html",[3,0.312,4,0.312,9,0.271,44,0.028,59,0.435,60,0.444,68,0.312,69,0.119,119,1.029,129,1.623,139,1.623,144,1.623,150,0.016,151,0.021,152,0.016,153,1.188,155,1.371,156,2.001,157,2.83,158,2.384,159,2.384,160,1.847,168,3.157,170,3.055,171,2.384,172,2.384,174,2.367,178,2.367,179,3.356,188,3.356,434,3.372,435,2.631,500,4.445,501,3.356,502,3.356,503,3.356,504,3.436,505,3.986,506,3.986,507,3.986,508,3.986,509,3.986,510,2.631,511,3.356]],["title/modules/HomeRoutingModule.html",[153,0.984,504,1.804]],["body/modules/HomeRoutingModule.html",[0,0.64,3,0.324,4,0.324,9,0.282,41,0.79,44,0.028,59,0.439,60,0.462,65,1.918,68,0.324,69,0.124,73,3.054,129,1.351,139,1.351,144,1.351,150,0.017,151,0.021,152,0.017,155,1.424,160,1.918,174,1.918,178,2.424,212,3.485,213,4.406,214,3.787,215,3.129,216,3.485,217,2.078,218,4.831,225,2.732,232,3.98,235,4.831,309,2.732,415,2.475,488,3.861,504,2.859,510,2.732,511,3.485,512,4.139,513,4.139,514,4.139,515,4.139,516,4.139,517,3.054,518,4.139]],["title/components/LayoutComponent.html",[0,0.368,135,0.852]],["body/components/LayoutComponent.html",[0,0.672,1,0.698,2,1.255,3,0.212,4,0.212,5,1.001,6,1.001,7,1.001,8,1.001,9,0.184,11,0.559,13,1.681,14,0.866,15,2.337,16,2.174,18,1.45,20,1.45,22,0.477,26,1.255,30,0.809,32,1.739,41,1.168,44,0.028,45,0.809,51,0.965,52,0.649,55,1.869,56,2.537,59,0.365,60,0.302,65,1.254,68,0.212,69,0.081,70,0.94,72,0.88,77,0.809,80,0.873,99,2.931,103,1.358,119,0.698,120,1.45,121,1.255,122,1.001,123,1.869,124,1.001,125,1.001,126,0.698,127,1.001,128,1.001,129,0.698,130,1.001,131,0.751,132,1.001,133,1.402,134,1.001,135,1.304,136,1.001,137,0.698,138,1.001,139,0.698,140,1.001,141,0.751,142,0.866,143,1.001,144,0.698,145,1.001,146,0.751,147,1.001,148,1.001,149,1.001,150,0.011,151,0.016,152,0.011,246,1.618,250,1.012,253,2.79,254,1.56,257,1.161,260,1.478,262,1.56,263,1.012,264,1.012,265,1.012,266,0.698,267,1.279,282,2.518,285,1.478,289,2.591,296,1.168,297,2.892,299,2.892,301,1.077,360,1.45,371,1.618,373,1.586,426,1.254,427,1.618,428,1.618,440,3.729,444,1.997,445,3.336,457,1.997,517,2.892,519,2.278,520,4.255,521,3.92,522,2.588,523,5.054,524,3.92,525,3.92,526,4.609,527,3.92,528,2.706,529,2.706,530,2.706,531,3.92,532,3.92,533,3.92,534,2.706,535,2.706,536,2.278,537,2.706,538,2.706,539,2.706,540,2.706,541,2.278,542,2.706]],["title/components/LoginComponent.html",[0,0.368,137,0.852]],["body/components/LoginComponent.html",[0,0.599,1,0.702,2,1.259,3,0.213,4,0.213,5,1.709,6,1.005,7,1.005,8,1.005,9,0.185,11,0.561,13,2.172,14,0.871,15,2.339,16,2.208,18,1.455,20,1.455,22,0.479,26,1.259,30,0.812,32,1.849,41,0.751,44,0.028,45,0.812,48,2.149,51,0.967,52,1.109,55,1.873,56,1.975,59,0.314,60,0.303,68,0.213,69,0.081,70,0.652,71,1.839,72,0.751,74,2.596,77,0.812,80,0.605,81,0.871,110,2.006,113,1.626,114,2.006,119,0.702,120,1.873,121,1.622,122,1.005,123,2.072,124,1.005,125,1.005,126,0.702,127,1.005,128,1.005,129,0.702,130,1.005,131,0.754,132,1.005,133,0.754,134,1.005,135,0.702,136,1.005,137,1.307,138,1.005,139,0.702,140,1.005,141,0.754,142,0.871,143,1.005,144,0.702,145,1.005,146,0.754,147,1.005,148,1.005,149,1.005,150,0.011,151,0.016,152,0.011,223,4.525,250,0.702,263,0.702,264,0.702,265,0.702,266,0.702,267,0.754,279,3.548,280,3.41,281,3.051,286,3.891,289,2.141,292,2.289,294,2.352,295,3.343,296,1.51,297,2.902,298,2.289,310,2.902,311,2.902,312,2.289,313,2.006,325,1.795,326,3.737,328,3.312,329,2.902,330,2.902,331,2.006,332,2.289,333,2.006,341,2.289,342,2.289,357,2.901,360,1.455,373,0.935,405,3.312,406,2.902,408,3.312,422,3.312,423,1.485,424,1.795,493,2.596,543,2.289,544,3.933,545,3.933,546,3.933,547,3.933,548,4.622,549,3.933,550,4.622,551,2.719,552,2.719,553,2.719,554,2.719,555,3.933,556,3.933,557,2.719,558,2.719]],["title/pipes/SafeResourceUrlPipe.html",[559,1.974,560,1.974]],["body/pipes/SafeResourceUrlPipe.html",[3,0.306,4,0.306,9,0.266,11,1.041,14,1.25,23,1.444,30,0.806,43,1.25,44,0.028,45,1.152,46,1.164,47,1.164,51,0.963,59,0.343,60,0.435,68,0.306,69,0.117,71,2.348,72,0.963,77,0.806,80,0.87,102,1.25,103,1.96,150,0.016,151,0.021,152,0.016,176,3.287,177,2.335,262,1.554,289,2.898,559,3.528,560,3.014,561,3.904,562,4.244,563,5.533,564,3.287,565,5.041,566,6.255,567,4.967,568,5.041,569,6.255,570,3.287,571,5.041,572,3.904,573,5.041,574,3.904,575,5.041,576,5.041,577,5.041,578,5.041,579,5.041,580,3.904,581,3.904,582,3.904]],["title/components/ServerComponent.html",[0,0.368,139,0.852]],["body/components/ServerComponent.html",[0,0.578,1,0.868,2,1.462,3,0.263,4,0.263,5,1.243,6,1.243,7,1.243,8,1.243,9,0.229,14,1.077,15,2.422,16,2.253,18,1.688,20,1.688,22,0.592,23,1.688,30,0.942,41,0.872,44,0.028,45,0.942,51,0.642,52,1.095,59,0.229,60,0.375,68,0.263,69,0.101,72,0.99,81,1.66,119,0.868,120,1.688,121,1.462,122,1.243,123,2.056,124,1.243,125,1.243,126,0.868,127,1.243,128,1.243,129,0.868,130,1.243,131,0.933,132,1.243,133,0.933,134,1.243,135,0.868,136,1.243,137,0.868,138,1.243,139,1.435,140,1.243,141,0.933,142,1.077,143,1.243,144,0.868,145,1.243,146,0.933,147,1.243,148,1.243,149,1.243,150,0.014,151,0.019,152,0.014,250,1.178,262,1.817,263,1.178,264,1.178,265,1.178,266,0.868,267,1.438,282,2.832,285,3.038,296,1.361,373,1.783,415,3.586,426,1.558,427,2.011,428,2.011,583,2.831,584,5.184,585,4.566,586,3.362,587,3.362,588,3.844,589,4.682,590,5.561,591,4.566,592,5.561,593,4.566,594,4.566,595,4.566]],["title/modules/SharedModule.html",[153,0.984,168,1.657]],["body/modules/SharedModule.html",[3,0.291,4,0.291,9,0.252,44,0.028,59,0.428,60,0.414,68,0.291,69,0.111,119,0.958,141,1.833,146,1.833,150,0.015,151,0.02,152,0.015,153,1.106,155,1.276,156,1.863,157,2.735,158,2.219,159,2.219,160,2.524,168,3.377,170,2.916,171,2.219,172,2.219,174,2.259,178,2.259,379,3.609,385,3.124,386,2.738,387,3.124,434,3.219,435,2.449,560,3.951,596,3.124,597,3.124,598,3.124,599,3.711,600,3.711,601,5.447,602,3.711,603,3.711,604,4.876]],["title/components/ThemeChooserComponent.html",[0,0.368,141,0.916]],["body/components/ThemeChooserComponent.html",[0,0.666,1,0.556,2,1.059,3,0.169,4,0.169,5,1.489,6,0.797,7,0.797,8,0.797,9,0.147,11,0.831,14,0.69,15,2.235,16,2.079,18,1.224,20,1.224,22,0.38,24,1.554,26,1.059,30,1.061,32,1.138,41,0.982,43,1.059,44,0.028,45,0.932,46,1.533,47,0.986,48,2.2,51,0.93,52,0.794,55,1.67,59,0.225,60,0.24,68,0.169,69,0.064,70,0.794,72,0.862,77,0.932,80,1.006,81,1.059,102,1.059,119,0.556,120,1.67,121,1.059,122,0.797,123,1.67,124,0.797,125,0.797,126,0.556,127,0.797,128,0.797,129,0.556,130,0.797,131,0.598,132,0.797,133,0.598,134,0.797,135,0.556,136,0.797,137,0.556,138,0.797,139,0.556,140,0.797,141,1.426,142,2.171,143,0.797,144,0.556,145,0.797,146,0.598,147,0.797,148,0.797,149,0.797,150,0.009,151,0.014,152,0.009,195,1.423,250,1.166,254,0.858,263,1.166,264,1.166,265,1.166,266,1.166,267,1.253,272,2.046,294,1.979,296,0.643,301,0.858,366,1.533,373,0.742,436,3.39,445,2.184,446,2.441,447,2.441,450,2.441,453,3.595,454,2.971,456,2.971,468,1.591,469,2.441,473,1.808,475,1.423,476,1.423,477,1.591,478,1.591,520,3.802,605,4.507,606,4.507,607,1.815,608,3.309,609,3.309,610,3.309,611,2.441,612,3.309,613,3.309,614,4.026,615,3.309,616,3.309,617,4.872,618,4.026,619,3.309,620,3.309,621,4.026,622,3.39,623,4.872,624,2.156,625,3.309,626,3.309,627,4.026,628,3.39,629,2.156,630,2.156,631,3.309,632,2.786,633,1.591,634,2.156,635,3.309,636,2.786,637,3.309,638,1.815,639,3.309,640,2.156,641,2.156,642,3.309,643,3.309,644,2.786,645,3.309,646,3.309,647,2.156,648,2.156,649,3.309,650,2.786,651,3.309,652,1.815,653,2.156,654,2.156,655,2.156]],["title/injectables/ThemeService.html",[66,1.974,256,1.314]],["body/injectables/ThemeService.html",[3,0.217,4,0.217,9,0.189,11,0.823,13,1.711,17,1.514,22,0.488,23,1.475,24,1.758,26,1.277,30,1.055,32,0.953,33,2.385,43,0.887,44,0.028,45,0.572,46,1.393,47,0.826,51,0.892,52,1.121,55,1.475,58,2.179,59,0.318,60,0.309,66,2.385,68,0.217,69,0.083,72,0.976,77,0.572,80,1.206,81,1.496,102,1.496,142,2.143,150,0.011,151,0.016,152,0.011,177,2.385,217,2.002,253,2.509,254,1.587,256,1.587,257,1.189,261,1.657,294,2.385,296,0.826,301,1.103,343,1.829,345,2.943,346,2.943,355,3.358,360,1.475,364,4.559,366,1.284,426,1.848,463,2.333,464,2.633,522,1.829,611,2.943,628,4.892,633,2.045,644,3.358,656,2.045,657,3.988,658,3.358,659,3.988,660,4.672,661,2.771,662,3.934,663,3.988,664,5.11,665,3.988,666,4.672,667,4.672,668,3.988,669,3.988,670,3.988,671,3.988,672,3.988,673,2.771,674,3.988,675,3.988,676,5.811,677,2.771,678,2.943,679,4.559,680,2.333,681,2.771,682,2.771,683,2.771,684,2.943,685,2.771,686,2.771,687,2.771,688,2.771,689,2.771,690,2.771,691,2.333,692,2.771,693,2.771,694,2.333,695,2.943,696,2.771,697,2.771,698,2.771,699,2.771,700,2.771,701,2.771,702,2.771,703,2.333,704,2.333,705,2.771,706,2.771,707,2.771,708,3.934,709,2.333]],["title/interceptors/TokenInterceptor.html",[169,1.974,710,2.436]],["body/interceptors/TokenInterceptor.html",[3,0.256,4,0.351,9,0.223,11,0.925,22,0.577,23,1.658,30,0.676,33,2.68,43,1.048,44,0.028,45,0.676,46,0.975,47,0.975,48,3.004,51,0.856,59,0.405,60,0.365,68,0.256,69,0.098,70,0.785,71,1.302,72,0.976,77,0.676,80,0.729,102,1.435,103,1.643,150,0.013,151,0.018,152,0.013,169,2.68,193,2.16,217,1.643,237,2.793,250,1.572,253,2.756,254,1.784,256,1.784,257,1.404,258,2.415,260,1.788,262,1.302,263,0.845,264,0.845,265,0.845,266,0.845,267,0.908,296,0.975,300,2.793,301,1.302,360,1.658,371,1.957,373,1.126,444,4.057,710,4.057,711,3.273,712,2.755,713,4.482,714,5.498,715,5.948,716,5.498,717,5.112,718,3.273,719,5.948,720,5.76,721,3.273,722,4.482,723,6.09,724,4.482,725,4.482,726,4.482,727,3.273,728,5.112,729,4.482,730,3.273,731,2.755,732,3.273,733,3.273,734,3.273,735,3.273,736,3.273,737,3.273,738,3.273,739,2.755,740,3.273,741,3.273,742,3.273,743,3.273,744,3.273]],["title/classes/TokenWrapper.html",[69,0.099,300,1.804]],["body/classes/TokenWrapper.html",[3,0.169,4,0.169,9,0.147,11,0.683,22,0.583,23,1.224,24,1.9,26,1.059,30,1.105,32,1.554,33,1.979,34,2.441,43,1.059,44,0.029,45,0.683,46,1.724,47,0.986,51,1.154,52,0.517,57,2.184,58,2.2,59,0.147,68,0.169,69,0.099,70,1.083,71,2.562,72,1.082,77,1.105,80,0.737,94,3.613,102,0.69,150,0.009,151,0.014,152,0.009,199,1.423,217,2.446,250,1.166,254,1.317,255,3.332,263,1.166,264,1.166,265,1.166,266,1.166,272,1.317,278,2.441,281,1.423,289,2.092,290,4.329,300,3.018,346,1.591,352,2.786,358,2.467,359,4.507,366,1.533,370,2.786,473,1.178,475,2.981,541,4.329,567,2.786,570,3.39,658,1.815,731,1.815,739,3.39,745,1.815,746,3.309,747,3.309,748,4.516,749,4.516,750,4.026,751,3.309,752,4.516,753,4.026,754,4.026,755,4.872,756,3.309,757,2.156,758,3.309,759,3.309,760,3.309,761,2.156,762,2.156,763,2.156,764,2.156,765,2.156,766,2.156,767,2.156,768,4.516,769,5.664,770,2.156,771,2.156,772,3.309,773,2.156,774,2.156,775,1.815,776,4.026,777,1.591,778,2.156,779,2.156,780,4.516,781,4.026,782,4.516,783,4.026,784,4.026,785,4.516,786,4.026,787,2.156,788,4.026,789,2.156,790,2.786,791,3.309,792,2.156,793,2.156,794,4.026,795,2.156,796,2.156,797,2.156,798,2.786,799,2.156,800,2.156,801,3.309,802,2.156,803,2.156,804,2.156,805,3.309,806,2.156,807,2.156,808,2.156,809,2.156,810,2.156,811,2.156,812,3.309,813,2.156,814,2.156,815,2.156,816,2.156]],["title/classes/User.html",[41,0.63,69,0.099]],["body/classes/User.html",[3,0.108,4,0.108,9,0.094,11,0.286,13,0.994,22,0.244,24,2.11,26,0.742,30,1.273,32,1.203,38,1.022,41,1.125,43,1.611,44,0.029,45,1.067,46,1.819,47,1.5,51,1.231,52,1.207,55,1.293,58,3.4,59,0.094,68,0.108,69,0.041,70,1.294,71,2.628,72,1.177,77,1.151,80,1.201,150,0.006,151,0.009,152,0.006,199,0.914,245,3.947,272,2.345,278,1.71,279,1.53,289,1.385,294,2.091,357,2.113,358,2.3,423,0.757,424,0.914,464,3.321,465,3.947,473,2.748,479,3.712,484,1.952,486,4.236,522,1.974,650,1.166,691,1.952,790,4.869,798,3.277,817,1.166,818,1.385,819,4.47,820,2.99,821,2.99,822,4.47,823,2.99,824,2.99,825,3.892,826,3.764,827,4.47,828,2.99,829,2.99,830,2.99,831,2.99,832,1.385,833,1.385,834,1.385,835,1.385,836,1.385,837,1.385,838,3.892,839,2.318,840,1.385,841,1.385,842,1.385,843,1.385,844,2.318,845,2.318,846,2.318,847,1.385,848,1.385,849,1.385,850,1.385,851,1.385,852,1.385,853,1.385,854,1.385,855,1.385,856,2.318,857,1.385,858,1.385,859,1.385,860,1.385,861,2.318,862,2.318,863,2.318,864,2.318,865,1.385,866,1.385,867,1.385,868,1.385,869,2.318,870,2.318,871,1.385,872,1.385,873,2.318,874,2.318,875,1.385,876,1.385,877,1.385,878,1.385,879,1.385,880,1.385,881,1.385,882,1.385,883,1.385,884,1.385,885,1.385,886,1.385,887,1.385,888,1.385,889,1.385,890,1.385,891,2.318,892,1.385,893,1.385,894,1.385,895,1.385,896,1.385,897,1.385,898,1.385,899,2.318,900,1.385,901,3.496,902,1.385,903,2.318,904,1.385,905,1.385,906,2.318,907,1.385,908,1.385,909,2.318,910,1.385,911,1.385,912,1.385,913,1.385,914,1.385,915,2.318,916,1.385,917,1.385,918,2.318,919,1.385,920,1.385,921,2.318,922,1.385,923,1.385,924,1.385,925,1.385,926,2.318,927,1.385,928,1.385,929,2.318,930,1.385,931,1.385,932,2.318,933,1.385,934,1.385,935,2.318,936,2.318,937,1.385,938,1.385,939,1.385,940,1.385,941,1.385,942,1.385,943,1.385,944,1.385,945,1.385,946,1.385,947,1.385,948,1.385]],["title/modules/UserInterfaceModule.html",[153,0.984,379,1.804]],["body/modules/UserInterfaceModule.html",[0,0.617,3,0.355,4,0.355,9,0.308,11,0.936,13,2.374,44,0.028,59,0.407,60,0.505,68,0.355,69,0.135,80,1.009,150,0.019,151,0.023,152,0.019,153,1.65,155,1.559,157,2.275,160,2.1,168,2.779,174,2.1,178,2.565,379,3.024,386,3.344,434,3.654,435,2.992,636,4.661,949,4.532,950,4.532,951,5.536,952,5.536,953,5.536,954,5.536,955,5.977,956,4.532]],["title/components/UserPreferencesComponent.html",[0,0.368,144,0.852]],["body/components/UserPreferencesComponent.html",[0,0.525,1,0.726,2,1.29,3,0.22,4,0.22,5,1.04,6,1.04,7,1.04,8,1.04,9,0.191,14,0.9,15,2.353,16,2.189,18,1.49,20,1.49,22,0.496,24,1.386,26,1.29,30,0.972,41,1.161,43,0.9,44,0.028,45,0.972,47,0.838,51,0.899,52,0.967,55,1.49,56,2.023,59,0.385,60,0.314,65,1.303,66,3.257,67,2.368,68,0.22,69,0.084,70,0.967,71,1.119,72,0.982,73,4.405,77,0.832,80,0.626,81,0.9,102,1.29,119,0.726,120,1.49,121,1.29,122,1.04,123,1.902,124,1.04,125,1.04,126,0.726,127,1.04,128,1.04,129,0.726,130,1.04,131,0.78,132,1.04,133,0.78,134,1.04,135,0.726,136,1.04,137,0.726,138,1.04,139,0.726,140,1.04,141,0.78,142,1.912,143,1.04,144,1.328,145,1.04,146,0.78,147,1.04,148,1.04,149,1.04,150,0.012,151,0.017,152,0.012,246,2.41,250,1.04,253,2.626,254,1.119,257,1.206,260,1.536,262,1.604,263,1.04,264,1.04,265,1.04,266,0.726,267,1.307,272,1.119,282,2.573,285,1.536,296,1.201,299,3.476,371,1.682,373,1.62,406,3.476,426,1.303,427,1.682,428,1.682,473,1.536,488,2.974,504,2.202,510,3.396,517,2.974,536,2.368,633,2.075,638,2.368,652,2.368,957,4.332,958,2.368,959,4.711,960,4.03,961,2.812,962,2.812,963,2.812,964,2.812,965,2.812,966,2.812,967,2.812,968,2.812,969,4.03]],["title/components/UserProfileComponent.html",[0,0.368,146,0.916]],["body/components/UserProfileComponent.html",[0,0.675,1,0.712,2,1.273,3,0.216,4,0.216,5,1.02,6,1.02,7,1.02,8,1.02,9,0.188,11,0.569,14,0.883,15,2.345,16,2.181,18,1.47,20,1.47,22,0.486,24,1.367,26,1.273,30,1.053,41,1.292,43,0.883,44,0.028,45,0.962,46,0.822,47,0.822,51,0.89,52,0.662,55,1.47,56,1.995,59,0.27,60,0.308,68,0.216,69,0.082,70,0.662,72,0.759,77,0.569,80,0.614,81,1.492,102,0.883,119,0.712,120,1.47,121,1.273,122,1.02,123,1.886,124,1.02,125,1.02,126,0.712,127,1.02,128,1.02,129,0.712,130,1.02,131,0.765,132,1.02,133,0.765,134,1.02,135,0.712,136,1.02,137,0.712,138,1.02,139,0.712,140,1.02,141,0.765,142,0.883,143,1.02,144,0.712,145,1.02,146,1.415,147,1.723,148,1.02,149,1.02,150,0.011,151,0.016,152,0.011,195,1.821,250,0.712,263,0.712,264,0.712,265,0.712,266,0.712,267,0.765,272,2.24,296,0.822,301,1.098,325,1.821,358,2.546,360,1.47,366,1.278,373,0.949,446,2.933,447,2.933,450,2.933,453,3.438,454,3.438,455,3.923,456,3.438,457,2.035,459,2.322,460,3.346,468,2.035,469,2.933,470,2.322,471,3.346,472,2.322,473,1.507,474,2.322,475,1.821,476,1.821,477,2.035,478,2.035,491,2.322,492,2.322,493,1.821,826,3.346,970,4.551,971,4.551,972,2.322,973,4.659,974,3.974,975,2.758,976,3.974,977,2.758,978,3.974,979,3.974,980,3.974,981,2.758,982,2.758]],["title/injectables/UserService.html",[256,1.314,401,2.179]],["body/injectables/UserService.html",[3,0.296,4,0.296,9,0.257,17,2.067,22,0.667,23,1.827,24,1.302,30,0.781,41,1.155,44,0.028,51,0.943,59,0.43,60,0.422,68,0.296,69,0.148,70,0.908,72,1.05,77,0.781,80,0.843,99,3.185,102,1.212,103,1.9,150,0.016,151,0.02,152,0.016,193,2.498,250,0.977,253,2.874,254,1.966,256,1.966,257,1.623,260,2.067,261,2.263,263,0.977,264,0.977,265,0.977,266,0.977,267,1.05,268,2.792,269,2.792,288,3.645,301,1.506,343,2.498,357,2.48,371,2.263,373,1.699,401,3.261,412,4.159,423,2.067,424,2.498,464,2.498,479,2.792,559,2.263,775,3.186,777,2.792,983,3.186,984,5.829,985,3.784,986,5.499,987,3.784,988,3.784,989,4.939,990,3.784,991,3.784,992,3.784,993,3.784,994,3.784,995,3.784]],["title/coverage.html",[996,3.797]],["body/coverage.html",[0,0.723,1,0.892,9,0.235,10,2.91,41,0.66,44,0.028,46,1.03,66,2.067,69,0.157,126,0.892,129,0.892,131,0.959,133,0.959,135,0.892,137,0.892,139,0.892,141,0.959,144,0.892,146,0.959,150,0.014,151,0.019,152,0.014,169,2.067,190,2.282,198,2.551,200,2.91,215,2.067,231,3.433,232,2.282,234,2.91,237,1.889,256,2.092,274,2.91,275,2.91,295,2.282,300,1.889,317,4.15,334,5.671,344,2.91,366,1.602,382,2.551,391,2.91,392,2.91,401,2.282,404,2.91,423,1.889,438,2.91,443,2.91,493,2.282,510,2.282,519,2.91,543,2.91,559,2.067,560,2.067,562,2.91,563,2.91,564,2.91,583,2.91,605,2.91,606,2.91,607,2.91,622,4.942,656,3.88,678,2.551,695,2.551,710,2.551,712,2.91,745,2.91,817,2.91,957,2.91,958,2.91,970,2.91,971,2.91,972,2.91,983,2.91,996,2.91,997,2.91,998,3.457,999,3.457,1000,6.431,1001,5.87,1002,4.652,1003,4.652,1004,2.91,1005,2.91,1006,3.457,1007,2.91,1008,4.652,1009,4.652,1010,5.258,1011,3.457,1012,2.91,1013,3.457,1014,3.457]],["title/dependencies.html",[156,1.994,1015,2.755]],["body/dependencies.html",[14,1.594,44,0.028,69,0.149,150,0.02,151,0.024,152,0.02,156,2.5,257,2.135,777,3.673,1016,4.979,1017,4.979,1018,4.979,1019,4.979,1020,4.979,1021,4.979,1022,4.979,1023,4.979,1024,4.979,1025,4.979,1026,4.979,1027,4.979,1028,4.979]],["title/miscellaneous/enumerations.html",[1029,1.819,1030,3.344]],["body/miscellaneous/enumerations.html",[22,0.903,44,0.027,142,1.908,150,0.021,151,0.024,152,0.021,272,2.371,684,4.396,694,5.016,1029,3.384,1030,4.317,1031,5.127,1032,5.127]],["title/index.html",[22,0.486,1033,2.32,1034,2.32]],["body/index.html",[2,1.773,16,1.559,44,0.023,74,2.992,84,4.661,85,2.992,150,0.019,151,0.023,152,0.019,409,3.816,415,2.71,426,2.769,445,2.992,522,4.109,588,4.661,589,3.816,662,5.241,1033,3.816,1034,3.816,1035,5.536,1036,5.977,1037,4.532,1038,4.532,1039,4.532,1040,4.532,1041,4.532,1042,4.532,1043,4.532,1044,4.532,1045,4.532,1046,4.532,1047,4.532,1048,4.532,1049,5.536,1050,4.532,1051,4.532,1052,4.532,1053,4.532,1054,4.532,1055,4.532,1056,4.532,1057,4.532,1058,4.532,1059,4.532,1060,4.532,1061,4.532,1062,4.532,1063,4.532]],["title/modules.html",[155,1.551]],["body/modules.html",[44,0.024,150,0.02,151,0.024,152,0.02,154,2.877,155,1.655,166,2.877,167,2.416,168,2.416,177,3.798,379,2.629,432,3.55,500,3.176,504,2.629,632,5.348,1064,6.352,1065,6.352,1066,6.71,1067,6.352]],["title/overview.html",[411,3.327]],["body/overview.html",[1,1.586,2,1.083,44,0.028,119,0.873,126,1.342,129,1.342,131,1.443,133,1.443,135,1.342,137,1.342,139,1.342,141,1.704,144,1.342,146,1.704,150,0.014,151,0.019,152,0.014,153,1.008,154,4.058,155,1.163,156,1.698,157,1.698,158,2.022,159,2.022,160,1.567,161,2.847,162,2.847,163,2.847,164,2.847,165,2.847,166,3.109,167,2.925,168,3.34,169,3.109,170,2.741,171,2.022,172,2.022,199,2.232,233,2.495,317,2.495,320,2.847,343,2.232,377,2.847,378,2.847,379,3.414,411,2.495,483,2.847,500,4.299,501,2.847,502,2.847,503,2.847,504,2.841,559,2.022,560,3.674,596,2.847,597,2.847,598,2.847,1068,3.382,1069,3.382,1070,4.584]],["title/routes.html",[214,2.977]],["body/routes.html",[44,0.025,150,0.022,151,0.025,152,0.022,214,3.532]],["title/miscellaneous/variables.html",[1029,1.819,1071,3.344]],["body/miscellaneous/variables.html",[22,0.629,32,1.839,44,0.028,46,1.593,48,2.598,52,1.282,58,1.951,59,0.243,71,1.421,85,2.358,95,3.007,108,3.007,121,1.144,150,0.015,151,0.019,152,0.015,154,2.136,155,1.229,167,2.387,217,2.387,272,2.362,295,3.139,296,1.593,310,3.508,311,2.635,313,3.508,329,2.635,330,2.635,358,1.951,360,1.321,365,4.997,366,1.655,382,3.508,389,4.003,423,2.598,426,1.655,476,2.358,611,2.635,656,2.635,678,3.508,679,4.798,680,3.007,684,2.635,695,3.508,703,3.007,704,3.007,708,4.003,709,3.007,997,3.007,1004,3.007,1005,4.003,1007,3.007,1012,3.007,1029,2.358,1071,3.007,1072,4.755,1073,3.572,1074,3.572,1075,3.572,1076,3.572,1077,3.572,1078,4.755,1079,3.572,1080,4.755,1081,3.572,1082,4.755,1083,3.572,1084,3.572,1085,3.572,1086,3.572,1087,3.572,1088,3.572,1089,3.572,1090,3.572,1091,3.572,1092,3.572,1093,3.572,1094,3.572,1095,5.345,1096,3.572,1097,3.572,1098,3.572,1099,3.572,1100,3.572,1101,3.572,1102,3.572,1103,3.572,1104,3.572]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":317,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1.13",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":320,"title":{},"body":{"components/AuthRedirectComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":334,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["100vw",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1069,"title":{},"body":{"overview.html":{}}}],["11px",{"_index":496,"title":{},"body":{"components/HeaderComponent.html":{}}}],["150",{"_index":333,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["16",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":483,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1070,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["36px",{"_index":494,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":844,"title":{},"body":{"classes/User.html":{}}}],["4/4",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":493,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["500px",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6.5.4",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1068,"title":{},"body":{"overview.html":{}}}],["9",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_avatar",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["_bot",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["_discriminator",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["_email",{"_index":931,"title":{},"body":{"classes/User.html":{}}}],["_flags",{"_index":934,"title":{},"body":{"classes/User.html":{}}}],["_id",{"_index":902,"title":{},"body":{"classes/User.html":{}}}],["_loading",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["_locale",{"_index":925,"title":{},"body":{"classes/User.html":{}}}],["_scope",{"_index":800,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["_system",{"_index":920,"title":{},"body":{"classes/User.html":{}}}],["_theme",{"_index":648,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["_user",{"_index":470,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["_username",{"_index":905,"title":{},"body":{"classes/User.html":{}}}],["_verified",{"_index":928,"title":{},"body":{"classes/User.html":{}}}],["access",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["access_token",{"_index":786,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["accessible",{"_index":647,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["accessor",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["accessors",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["accesstoken",{"_index":739,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["account",{"_index":486,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["activated",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":299,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["activatedroutesnapshot",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["actual_component",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["adapted",{"_index":657,"title":{},"body":{"injectables/ThemeService.html":{}}}],["adding",{"_index":722,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["admin",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["against",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["allowing",{"_index":608,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["already",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":435,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["angular/common/http",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":602,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafeResourceUrlPipe.html":{}}}],["angular/router",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["app",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/dashboard",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app_initializer]{@link",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{}}}],["appmodule",{"_index":154,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apppage",{"_index":198,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approach",{"_index":1051,"title":{},"body":{"index.html":{}}}],["approutingmodule",{"_index":166,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["areas",{"_index":954,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["array",{"_index":541,"title":{},"body":{"components/LayoutComponent.html":{},"classes/TokenWrapper.html":{}}}],["assignment",{"_index":653,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["associated",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["async",{"_index":969,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["attempting",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{}}}],["attributes",{"_index":749,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["auth",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth/redirect",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authentication",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["authguard",{"_index":232,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["authorization",{"_index":714,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authredirectcomponent",{"_index":126,"title":{"components/AuthRedirectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":237,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["auto",{"_index":332,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["available",{"_index":632,"title":{},"body":{"components/ThemeChooserComponent.html":{},"modules.html":{}}}],["avatar",{"_index":465,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["avatar(value",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["avatarurl",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["b",{"_index":594,"title":{},"body":{"components/ServerComponent.html":{}}}],["background",{"_index":326,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["background::before",{"_index":315,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["backgroundimageurl",{"_index":451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["based",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bearer",{"_index":738,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bears",{"_index":523,"title":{},"body":{"components/LayoutComponent.html":{}}}],["behaviorsubject",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{}}}],["being",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belongs",{"_index":856,"title":{},"body":{"classes/User.html":{}}}],["better",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":610,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["blacklist",{"_index":799,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["blacklist,id",{"_index":784,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["block",{"_index":321,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blur(5px",{"_index":337,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["blurred",{"_index":314,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["bot",{"_index":821,"title":{},"body":{"classes/User.html":{}}}],["bot(value",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":1066,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"pipes/SafeResourceUrlPipe.html":{},"injectables/ThemeService.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":205,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["business",{"_index":1048,"title":{},"body":{"index.html":{}}}],["by.css(\"siltstride",{"_index":207,"title":{},"body":{"classes/AppPage.html":{}}}],["bypasses",{"_index":573,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["call",{"_index":437,"title":{},"body":{"modules/DataModule.html":{},"components/HeaderComponent.html":{}}}],["called",{"_index":322,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["canactivate",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"modules/HomeRoutingModule.html":{}}}],["canactivate(next",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":981,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["catcherror",{"_index":987,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror((error",{"_index":995,"title":{},"body":{"injectables/UserService.html":{}}}],["center",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":644,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{}}}],["changedetection",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changedetectionstrategy",{"_index":468,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":447,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["changing",{"_index":675,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrouterevent(event",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choose",{"_index":609,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser",{"_index":613,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["chooser.component.html",{"_index":615,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.scss",{"_index":614,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts",{"_index":607,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["chooser.component.ts:26",{"_index":630,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:43",{"_index":634,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:54",{"_index":620,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:69",{"_index":624,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser.component.ts:76",{"_index":641,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["chooser/theme",{"_index":606,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["chosen",{"_index":691,"title":{},"body":{"injectables/ThemeService.html":{},"classes/User.html":{}}}],["clarity",{"_index":659,"title":{},"body":{"injectables/ThemeService.html":{}}}],["claritymodule",{"_index":955,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["class",{"_index":69,"title":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":199,"title":{},"body":{"classes/AppPage.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"overview.html":{}}}],["cloning",{"_index":1054,"title":{},"body":{"index.html":{}}}],["clr",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clr/angular",{"_index":956,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["cluster_appmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":501,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":503,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":502,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":596,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":597,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":598,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":599,"title":{},"body":{"modules/SharedModule.html":{}}}],["code",{"_index":658,"title":{},"body":{"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{}}}],["common",{"_index":1045,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":434,"title":{},"body":{"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["completion",{"_index":396,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["concatmap",{"_index":730,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concatmap((clone",{"_index":743,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["concepts",{"_index":1042,"title":{},"body":{"index.html":{}}}],["configured",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["consider",{"_index":481,"title":{},"body":{"components/HeaderComponent.html":{}}}],["const",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(@optional",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(authservice",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["container",{"_index":520,"title":{},"body":{"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{}}}],["containing",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["content",{"_index":208,"title":{},"body":{"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{}}}],["convention",{"_index":796,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convention,no",{"_index":781,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["convert",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["core/core.module",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["core/guard",{"_index":514,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["core/helper",{"_index":298,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["core/http",{"_index":402,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["core/import.guard",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/interceptor",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["core/model",{"_index":301,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["core/model/theme.model",{"_index":965,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["core/resolver",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["core/service",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["core/service/theme.service",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["coremodule",{"_index":167,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":996,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["css",{"_index":463,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeService.html":{}}}],["current",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/UserService.html":{}}}],["currently",{"_index":676,"title":{},"body":{"injectables/ThemeService.html":{}}}],["currentuserresolver",{"_index":215,"title":{"guards/CurrentUserResolver.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["dangle",{"_index":797,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dangle,id",{"_index":783,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["dark",{"_index":684,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["darkthemestylesheet",{"_index":678,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["darkthemestylesheet.disabled",{"_index":709,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["dashboard",{"_index":309,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["dashboard'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component.html",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":129,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":517,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["data[\"title",{"_index":968,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["data[\"user",{"_index":537,"title":{},"body":{"components/LayoutComponent.html":{}}}],["datamodule",{"_index":432,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{}}}],["date",{"_index":769,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["declarations",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["default",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1038,"title":{},"body":{"index.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["defining",{"_index":521,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dependencies",{"_index":156,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserProfileComponent.html":{}}}],["designed",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determines",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{}}}],["determining",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["dev",{"_index":1061,"title":{},"body":{"index.html":{}}}],["di",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["digit",{"_index":845,"title":{},"body":{"classes/User.html":{}}}],["directive",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["disable",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["discord",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["discord's",{"_index":278,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["discordoauthimplicitflowurl",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["discordserverwidgeturl",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{}}}],["discriminator",{"_index":820,"title":{},"body":{"classes/User.html":{}}}],["discriminator(value",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["display",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"classes/User.html":{}}}],["displayed",{"_index":899,"title":{},"body":{"classes/User.html":{}}}],["displaying",{"_index":531,"title":{},"body":{"components/LayoutComponent.html":{}}}],["displayname",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["dm",{"_index":980,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["document.stylesheets[4",{"_index":680,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":592,"title":{},"body":{"components/ServerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["domsanitizer",{"_index":579,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer's",{"_index":574,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["domsanitizer}'s",{"_index":581,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["dumb",{"_index":1053,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":201,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts",{"_index":200,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["effect",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["element.offsetheight",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.offsetwidth",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.style.setproperty",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elements",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":826,"title":{},"body":{"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["email(value",{"_index":933,"title":{},"body":{"classes/User.html":{}}}],["emitter",{"_index":625,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["emitting",{"_index":642,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["empty",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["enable",{"_index":708,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":870,"title":{},"body":{"classes/User.html":{}}}],["enabling",{"_index":499,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enabling&nbsp",{"_index":482,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enabling/disabling",{"_index":703,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["enterprise",{"_index":1050,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1030,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.discordcdnrooturl}avatars/${this.id}/${this.avatar}.png",{"_index":945,"title":{},"body":{"classes/User.html":{}}}],["environment.discordoauthimplicitflowurl",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.discordserverwidgeturl",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ephemeral",{"_index":532,"title":{},"body":{"components/LayoutComponent.html":{}}}],["equivalent",{"_index":759,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["error",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"must",{"_index":477,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["eslint",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["eslint/naming",{"_index":780,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["eslint/no",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["event",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["event.clientx",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.clienty",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":623,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["experience",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":768,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiration.setseconds(expiration.getseconds",{"_index":792,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expires_in",{"_index":794,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["expiresin",{"_index":754,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["exposing",{"_index":951,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["factor",{"_index":484,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["false",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":336,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["fixed",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{}}}],["flags",{"_index":827,"title":{},"body":{"classes/User.html":{}}}],["flags(value",{"_index":937,"title":{},"body":{"classes/User.html":{}}}],["flags]{@link",{"_index":935,"title":{},"body":{"classes/User.html":{}}}],["float",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["folder",{"_index":662,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["followed",{"_index":1035,"title":{},"body":{"index.html":{}}}],["footer",{"_index":439,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.html",{"_index":442,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":441,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["formatting",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["formsmodule",{"_index":601,"title":{},"body":{"modules/SharedModule.html":{}}}],["fragment",{"_index":290,"title":{},"body":{"components/AuthRedirectComponent.html":{},"classes/TokenWrapper.html":{}}}],["fragment?.split",{"_index":804,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["full",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":296,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["get(`${environment.discordapirooturl}/users/@me",{"_index":991,"title":{},"body":{"injectables/UserService.html":{}}}],["getaccesstoken",{"_index":762,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getavatar",{"_index":849,"title":{},"body":{"classes/User.html":{}}}],["getavatarurl",{"_index":895,"title":{},"body":{"classes/User.html":{}}}],["getbackgroundimageurl",{"_index":461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbot",{"_index":854,"title":{},"body":{"classes/User.html":{}}}],["getcurrentuser",{"_index":984,"title":{},"body":{"injectables/UserService.html":{}}}],["getdiscordoauthimplicitflowurl",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["getdiscordserverwidgeturl",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getdiscriminator",{"_index":842,"title":{},"body":{"classes/User.html":{}}}],["getdisplayname",{"_index":897,"title":{},"body":{"classes/User.html":{}}}],["getemail",{"_index":881,"title":{},"body":{"classes/User.html":{}}}],["getexpiresin",{"_index":766,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getflags",{"_index":885,"title":{},"body":{"classes/User.html":{}}}],["getid",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["getloading",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["getlocale",{"_index":871,"title":{},"body":{"classes/User.html":{}}}],["getlocaltheme",{"_index":629,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["getmfaenabled",{"_index":867,"title":{},"body":{"classes/User.html":{}}}],["getonmousemove",{"_index":292,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["getpremiumtype",{"_index":889,"title":{},"body":{"classes/User.html":{}}}],["getpublicflags",{"_index":893,"title":{},"body":{"classes/User.html":{}}}],["getscope",{"_index":770,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["getsystem",{"_index":859,"title":{},"body":{"classes/User.html":{}}}],["gettext",{"_index":210,"title":{},"body":{"classes/AppPage.html":{}}}],["gettheme",{"_index":633,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{}}}],["getting",{"_index":1033,"title":{"index.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":963,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["gettitletext",{"_index":206,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokentype",{"_index":764,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment",{"_index":751,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["gettokenwrapperfromurlfragment(fragment",{"_index":756,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["geturl",{"_index":529,"title":{},"body":{"components/LayoutComponent.html":{}}}],["getuser",{"_index":457,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["getusername",{"_index":836,"title":{},"body":{"classes/User.html":{}}}],["getverified",{"_index":877,"title":{},"body":{"classes/User.html":{}}}],["globaleventhandlers#onmousemove",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":281,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/TokenWrapper.html":{}}}],["grant]{@link",{"_index":302,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["graph",{"_index":1067,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":231,"title":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"overview.html":{}}}],["guides",{"_index":1036,"title":{},"body":{"index.html":{}}}],["hack",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["handler",{"_index":726,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["handling",{"_index":276,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["handshake",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["hash",{"_index":851,"title":{},"body":{"classes/User.html":{}}}],["hash]{@link",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["header",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["header'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.html",{"_index":449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header]{@link",{"_index":538,"title":{},"body":{"components/LayoutComponent.html":{}}}],["headercomponent",{"_index":133,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":742,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["height",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["helper",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["highly",{"_index":1039,"title":{},"body":{"index.html":{}}}],["home",{"_index":506,"title":{},"body":{"modules/HomeModule.html":{}}}],["homemodule",{"_index":500,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":504,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["housing",{"_index":637,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlelement",{"_index":310,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":989,"title":{},"body":{"injectables/UserService.html":{}}}],["http_interceptors",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":986,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":727,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":720,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":728,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":729,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httprequest",{"_index":719,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["https://angular.io/api/core/app_initializer",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":706,"title":{},"body":{"injectables/ThemeService.html":{}}}],["https://discord.com/developers/docs/reference#image",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/resources/user#user",{"_index":901,"title":{},"body":{"classes/User.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#authorization",{"_index":779,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["https://discord.com/developers/docs/topics/oauth2#implicit",{"_index":303,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["https://github.com/mathisgarberg/angular",{"_index":687,"title":{},"body":{"injectables/ThemeService.html":{}}}],["https://github.com/mathisscott/clarity",{"_index":682,"title":{},"body":{"injectables/ThemeService.html":{}}}],["icon",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{}}}],["id",{"_index":798,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["id(value",{"_index":904,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["image",{"_index":325,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["implemented",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementing",{"_index":1044,"title":{},"body":{"index.html":{}}}],["implements",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{}}}],["implicit",{"_index":280,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["import(\\\"@module/home/home.module\\\").then((m",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imported",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["include",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["incoming",{"_index":460,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserService.html":{}}}],["initiate",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject",{"_index":713,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["injectable",{"_index":256,"title":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":324,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["innocuous",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":469,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["inputs",{"_index":450,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["inserted",{"_index":466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instance",{"_index":455,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["instanceof",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["instead",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["intended",{"_index":399,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["intercept",{"_index":717,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":718,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercepted",{"_index":724,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":710,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":711,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface.module",{"_index":387,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["interface.module.ts",{"_index":950,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["interface/user",{"_index":386,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["internal",{"_index":621,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["isolate",{"_index":1047,"title":{},"body":{"index.html":{}}}],["isvalid",{"_index":752,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["isvalidtoken",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["jane",{"_index":595,"title":{},"body":{"components/ServerComponent.html":{}}}],["john",{"_index":591,"title":{},"body":{"components/ServerComponent.html":{}}}],["landing",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":873,"title":{},"body":{"classes/User.html":{}}}],["last",{"_index":690,"title":{},"body":{"injectables/ThemeService.html":{}}}],["layout",{"_index":440,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["layout.component.html",{"_index":527,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":526,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/auth",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/footer/footer.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header/header.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout/layout.component",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout/login/login.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layoutcomponent",{"_index":135,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":316,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthRedirectComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["library",{"_index":953,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["lifecycle",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["light",{"_index":694,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["line",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["link",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["links",{"_index":533,"title":{},"body":{"components/LayoutComponent.html":{}}}],["live",{"_index":1062,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["locale",{"_index":824,"title":{},"body":{"classes/User.html":{}}}],["locale(value",{"_index":927,"title":{},"body":{"classes/User.html":{}}}],["localstorage.getitem(\"siltstridevisualtheme",{"_index":693,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem",{"_index":698,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localtheme",{"_index":618,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["log",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":535,"title":{},"body":{"components/LayoutComponent.html":{}}}],["logic",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["login.component.html",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":137,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":497,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m.homemodule",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["making",{"_index":631,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["map",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["map((accesstoken",{"_index":736,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((httpheaders",{"_index":740,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((segments",{"_index":540,"title":{},"body":{"components/LayoutComponent.html":{}}}],["map((token",{"_index":734,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((user",{"_index":993,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":495,"title":{},"body":{"components/HeaderComponent.html":{}}}],["match",{"_index":785,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["matching",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":982,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["member",{"_index":456,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["message",{"_index":864,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["method,@typescript",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["mfa_enabled",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["mfaenabled",{"_index":823,"title":{},"body":{"classes/User.html":{}}}],["min",{"_index":341,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["miscellaneou",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1029,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":746,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["module",{"_index":153,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"overview.html":{}}}],["module/home/page/dashboard/dashboard.component",{"_index":513,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/server/server.component",{"_index":515,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["module/home/page/user",{"_index":516,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["modulename",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":155,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["mouse",{"_index":312,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["mouseevent",{"_index":311,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mouseparallaxhelper",{"_index":295,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mousex",{"_index":329,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["mousey",{"_index":330,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["moz",{"_index":338,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["ms",{"_index":340,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["multi",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["mutator",{"_index":453,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["navigated",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["navigateto",{"_index":204,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":395,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["navigationcancel",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp;on",{"_index":485,"title":{},"body":{"components/HeaderComponent.html":{}}}],["new",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":627,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["newtheme",{"_index":619,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["newtheme(value",{"_index":654,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["next",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["next.handle(clone",{"_index":744,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ngmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DataModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{}}}],["ngoninit",{"_index":285,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["nitro",{"_index":891,"title":{},"body":{"classes/User.html":{}}}],["now",{"_index":812,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["npm",{"_index":1058,"title":{},"body":{"index.html":{}}}],["null",{"_index":475,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/TokenWrapper.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":790,"title":{},"body":{"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["o",{"_index":339,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["oauth2",{"_index":279,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["obj",{"_index":805,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["obj[property[0",{"_index":809,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["object",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["occur",{"_index":725,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["official",{"_index":861,"title":{},"body":{"classes/User.html":{}}}],["offsetheight",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offsetwidth",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":1056,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":282,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LayoutComponent.html":{},"components/ServerComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["onmousemove",{"_index":286,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["option",{"_index":874,"title":{},"body":{"classes/User.html":{}}}],["optional",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["order",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["outgoing",{"_index":715,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["output",{"_index":645,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["outputs",{"_index":616,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["over",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overlapping",{"_index":1041,"title":{},"body":{"index.html":{}}}],["overview",{"_index":411,"title":{"overview.html":{}},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["owner",{"_index":590,"title":{},"body":{"components/ServerComponent.html":{}}}],["package",{"_index":1015,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["page/dashboard/dashboard.component",{"_index":507,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/server/server.component",{"_index":508,"title":{},"body":{"modules/HomeModule.html":{}}}],["page/user",{"_index":509,"title":{},"body":{"modules/HomeModule.html":{}}}],["parallax",{"_index":313,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["parallax.helper.ts",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["params.value",{"_index":793,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["params.value).split",{"_index":802,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["parentmodule",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":862,"title":{},"body":{"classes/User.html":{}}}],["passed",{"_index":635,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["path",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["pathmatch",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1049,"title":{},"body":{"index.html":{}}}],["pick",{"_index":663,"title":{},"body":{"injectables/ThemeService.html":{}}}],["pipe",{"_index":559,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":561,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["pipetransform",{"_index":578,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["place",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["plaintoclass",{"_index":775,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{}}}],["plaintoclass(tokenwrapper",{"_index":811,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["plaintoclass(user",{"_index":994,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":839,"title":{},"body":{"classes/User.html":{}}}],["position",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["post",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":1046,"title":{},"body":{"index.html":{}}}],["preferences",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{}}}],["preferences'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["preferences.component",{"_index":511,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["preferences.component.html",{"_index":960,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.scss",{"_index":959,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts",{"_index":958,"title":{},"body":{"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["preferences.component.ts:14",{"_index":961,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts:18",{"_index":962,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences.component.ts:26",{"_index":964,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["preferences/user",{"_index":510,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["premium",{"_index":940,"title":{},"body":{"classes/User.html":{}}}],["premium_type",{"_index":938,"title":{},"body":{"classes/User.html":{}}}],["premiumtype",{"_index":828,"title":{},"body":{"classes/User.html":{}}}],["presentation",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/ThemeChooserComponent.html":{},"index.html":{}}}],["presentation/container",{"_index":1043,"title":{},"body":{"index.html":{}}}],["presentational",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{}}}],["preventing",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prior",{"_index":394,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["private",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":974,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":973,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":972,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:22",{"_index":977,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":976,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":975,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":971,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":589,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["promise",{"_index":203,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{}}}],["properties?.foreach((value",{"_index":806,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["properties[index]?.split",{"_index":808,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property",{"_index":807,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["property[1",{"_index":810,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["protractor",{"_index":202,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["provided",{"_index":567,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["providedin",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providing",{"_index":626,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["public",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["public_flags",{"_index":943,"title":{},"body":{"classes/User.html":{}}}],["publicflags",{"_index":829,"title":{},"body":{"classes/User.html":{}}}],["radius",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["readonly",{"_index":666,"title":{},"body":{"injectables/ThemeService.html":{}}}],["received",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect",{"_index":277,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["redirect.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["redirect.component.html",{"_index":284,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.scss",{"_index":283,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts",{"_index":275,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirect.component.ts:29",{"_index":287,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect.component.ts:43",{"_index":293,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["redirect/presentation/auth",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["redirectto",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeat",{"_index":328,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["repository",{"_index":1055,"title":{},"body":{"index.html":{}}}],["request",{"_index":723,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":741,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.append(\"authorization",{"_index":737,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requests",{"_index":716,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"modules/HomeRoutingModule.html":{}}}],["resolve(route",{"_index":397,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["resolver",{"_index":393,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["resource",{"_index":563,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["resourceurl",{"_index":576,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["response",{"_index":748,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["response]{@link",{"_index":778,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["responsibilities",{"_index":524,"title":{},"body":{"components/LayoutComponent.html":{}}}],["responsibility",{"_index":525,"title":{},"body":{"components/LayoutComponent.html":{}}}],["result",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":288,"title":{},"body":{"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["return",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":294,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["right",{"_index":318,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"guards/CurrentUserResolver.html":{}}}],["routerevent",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":518,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["routes",{"_index":214,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["routing.module.ts",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["run",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["rxjs",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LayoutComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserPreferencesComponent.html":{},"injectables/UserService.html":{}}}],["safe",{"_index":577,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurl",{"_index":569,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saferesourceurlpipe",{"_index":560,"title":{"pipes/SafeResourceUrlPipe.html":{}},"body":{"pipes/SafeResourceUrlPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":580,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["saved",{"_index":671,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":1037,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":1040,"title":{},"body":{"index.html":{}}}],["scope",{"_index":755,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scope(value",{"_index":803,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scopes",{"_index":772,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["scss",{"_index":323,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["security",{"_index":575,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["see",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["segments.join",{"_index":542,"title":{},"body":{"components/LayoutComponent.html":{}}}],["selected",{"_index":628,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["selects",{"_index":643,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["semantically",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/ServerComponent.html":{},"index.html":{}}}],["server'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["server.component.html",{"_index":585,"title":{},"body":{"components/ServerComponent.html":{}}}],["server.component.scss",{"_index":584,"title":{},"body":{"components/ServerComponent.html":{}}}],["servercomponent",{"_index":139,"title":{"components/ServerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"injectables/ThemeService.html":{}}}],["set",{"_index":473,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["setavatar(value",{"_index":852,"title":{},"body":{"classes/User.html":{}}}],["setbot(value",{"_index":857,"title":{},"body":{"classes/User.html":{}}}],["setdiscriminator(value",{"_index":847,"title":{},"body":{"classes/User.html":{}}}],["setemail(value",{"_index":883,"title":{},"body":{"classes/User.html":{}}}],["setflags(value",{"_index":887,"title":{},"body":{"classes/User.html":{}}}],["setid(value",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["setlocale(value",{"_index":875,"title":{},"body":{"classes/User.html":{}}}],["setnewtheme(value",{"_index":640,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["sets",{"_index":670,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setscope(value",{"_index":773,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["setsystem(value",{"_index":865,"title":{},"body":{"classes/User.html":{}}}],["setter",{"_index":674,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme",{"_index":668,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":672,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(value",{"_index":638,"title":{},"body":{"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["setting",{"_index":454,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["setuser(value",{"_index":459,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["setusername(value",{"_index":840,"title":{},"body":{"classes/User.html":{}}}],["setverified(value",{"_index":879,"title":{},"body":{"classes/User.html":{}}}],["shared/component",{"_index":604,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/pipe",{"_index":603,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["shared/user",{"_index":385,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":168,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["siltstride",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["siltstridevisualtheme",{"_index":699,"title":{},"body":{"injectables/ThemeService.html":{}}}],["simply",{"_index":1057,"title":{},"body":{"index.html":{}}}],["size",{"_index":331,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["skipself",{"_index":381,"title":{},"body":{"modules/CoreModule.html":{}}}],["smart",{"_index":1052,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":400,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["solution",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"modules/UserInterfaceModule.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["source.pipe",{"_index":733,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["span",{"_index":209,"title":{},"body":{"classes/AppPage.html":{}}}],["specification",{"_index":818,"title":{},"body":{"classes/User.html":{}}}],["specification]{@link",{"_index":900,"title":{},"body":{"classes/User.html":{}}}],["spinner",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../environment.ts",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../import.guard.ts",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mouse",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../theme.model.ts",{"_index":1031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../theme.service.ts",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:38",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guard/auth.guard.ts",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guard/auth.guard.ts:15",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guard/auth.guard.ts:24",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helper/mouse",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/user.service.ts",{"_index":983,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/http/user.service.ts:24",{"_index":985,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/import.guard.ts",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptor/token.interceptor.ts",{"_index":712,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptor/token.interceptor.ts:33",{"_index":721,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/core/model/theme.model.ts",{"_index":1032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/model/token.model.ts",{"_index":745,"title":{},"body":{"classes/TokenWrapper.html":{},"coverage.html":{}}}],["src/app/core/model/token.model.ts:117",{"_index":761,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:24",{"_index":763,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:40",{"_index":765,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:62",{"_index":767,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:77",{"_index":771,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:82",{"_index":774,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/token.model.ts:93",{"_index":757,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["src/app/core/model/user.model.ts",{"_index":817,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/core/model/user.model.ts:108",{"_index":860,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:111",{"_index":866,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:126",{"_index":868,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:141",{"_index":872,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:144",{"_index":876,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:159",{"_index":878,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:162",{"_index":880,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:177",{"_index":882,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:18",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:180",{"_index":884,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:195",{"_index":886,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:198",{"_index":888,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:21",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:213",{"_index":890,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:228",{"_index":894,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:236",{"_index":896,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:245",{"_index":898,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:36",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:39",{"_index":841,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:54",{"_index":843,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:57",{"_index":848,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:72",{"_index":850,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:75",{"_index":853,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:90",{"_index":855,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/model/user.model.ts:93",{"_index":858,"title":{},"body":{"classes/User.html":{}}}],["src/app/core/resolver/current",{"_index":391,"title":{},"body":{"guards/CurrentUserResolver.html":{},"coverage.html":{}}}],["src/app/core/service/auth.service.ts",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/service/auth.service.ts:19",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:27",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:42",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/auth.service.ts:50",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/service/theme.service.ts",{"_index":656,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/theme.service.ts:24",{"_index":669,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:43",{"_index":673,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/service/theme.service.ts:57",{"_index":677,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/data/data.module.ts",{"_index":433,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/layout/auth",{"_index":274,"title":{},"body":{"components/AuthRedirectComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":438,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/layout/header/header.component.ts:25",{"_index":458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:34",{"_index":452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/header/header.component.ts:46",{"_index":462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/layout/layout/layout.component.ts",{"_index":519,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout/layout.component.ts:24",{"_index":528,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout/layout.component.ts:34",{"_index":530,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/login/login.component.ts",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/layout/login/login.component.ts:21",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/layout/login/login.component.ts:31",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/module/home/home",{"_index":512,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/module/home/home.module.ts",{"_index":505,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/dashboard/dashboard.component.ts:17",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts",{"_index":583,"title":{},"body":{"components/ServerComponent.html":{},"coverage.html":{}}}],["src/app/module/home/page/server/server.component.ts:13",{"_index":587,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/server/server.component.ts:8",{"_index":586,"title":{},"body":{"components/ServerComponent.html":{}}}],["src/app/module/home/page/user",{"_index":957,"title":{},"body":{"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/theme",{"_index":605,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/user",{"_index":970,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipe/safe",{"_index":562,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":600,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/user",{"_index":949,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["src/environments/environment.ts",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":588,"title":{},"body":{"components/ServerComponent.html":{},"index.html":{}}}],["started",{"_index":1034,"title":{"index.html":{}},"body":{"index.html":{}}}],["starter",{"_index":661,"title":{},"body":{"injectables/ThemeService.html":{}}}],["starter/blob/clarity",{"_index":683,"title":{},"body":{"injectables/ThemeService.html":{}}}],["starter]{@link",{"_index":681,"title":{},"body":{"injectables/ThemeService.html":{}}}],["startup",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{}}}],["statements",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":750,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["status",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["stop",{"_index":593,"title":{},"body":{"components/ServerComponent.html":{}}}],["storage",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":291,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["stored",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["stores",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ThemeService.html":{}}}],["storetoken",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(tokenwrapper",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":522,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"index.html":{}}}],["structure/blob/master/src/app/layout/nav/nav.component.ts",{"_index":688,"title":{},"body":{"injectables/ThemeService.html":{}}}],["structure]{@link",{"_index":686,"title":{},"body":{"injectables/ThemeService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["stylesheet",{"_index":679,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["stylesheet]{@link",{"_index":705,"title":{},"body":{"injectables/ThemeService.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["subject",{"_index":689,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subscription",{"_index":892,"title":{},"body":{"classes/User.html":{}}}],["subscription]{@link",{"_index":939,"title":{},"body":{"classes/User.html":{}}}],["successful",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1064,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1065,"title":{},"body":{"modules.html":{}}}],["switcher/src/app/app.component.ts",{"_index":685,"title":{},"body":{"injectables/ThemeService.html":{}}}],["system",{"_index":822,"title":{},"body":{"classes/User.html":{}}}],["system(value",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["table",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":846,"title":{},"body":{"classes/User.html":{}}}],["take",{"_index":988,"title":{},"body":{"injectables/UserService.html":{}}}],["take(1",{"_index":992,"title":{},"body":{"injectables/UserService.html":{}}}],["tap",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap((value",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["terminal",{"_index":1059,"title":{},"body":{"index.html":{}}}],["tes3mp",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["theme",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["theme(value",{"_index":652,"title":{},"body":{"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["theme.css",{"_index":704,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["theme.dark",{"_index":664,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.light",{"_index":665,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme]{@link",{"_index":649,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themechange",{"_index":617,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themechoosercomponent",{"_index":141,"title":{"components/ThemeChooserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["themes",{"_index":612,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["themeservice",{"_index":66,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"components/UserPreferencesComponent.html":{},"coverage.html":{}}}],["themesubject",{"_index":667,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theming",{"_index":660,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this._avatar",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["this._bot",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["this._discriminator",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["this._email",{"_index":932,"title":{},"body":{"classes/User.html":{}}}],["this._flags",{"_index":936,"title":{},"body":{"classes/User.html":{}}}],["this._id",{"_index":903,"title":{},"body":{"classes/User.html":{}}}],["this._loading",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this._locale",{"_index":926,"title":{},"body":{"classes/User.html":{}}}],["this._scope",{"_index":801,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this._system",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["this._theme",{"_index":651,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["this._user",{"_index":471,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._username",{"_index":906,"title":{},"body":{"classes/User.html":{}}}],["this._verified",{"_index":929,"title":{},"body":{"classes/User.html":{}}}],["this.access_token",{"_index":787,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.accesstoken",{"_index":813,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.authservice.isvalidtoken$().pipe",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.storetoken(tokenwrapper",{"_index":307,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.authservice.token",{"_index":732,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.checkrouterevent(event",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.expires_in",{"_index":795,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.expiresin",{"_index":815,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.http",{"_index":990,"title":{},"body":{"injectables/UserService.html":{}}}],["this.mfa_enabled",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["this.premium_type",{"_index":942,"title":{},"body":{"classes/User.html":{}}}],["this.public_flags",{"_index":944,"title":{},"body":{"classes/User.html":{}}}],["this.route.data.pipe(map((data",{"_index":536,"title":{},"body":{"components/LayoutComponent.html":{},"components/UserPreferencesComponent.html":{}}}],["this.route.snapshot.fragment",{"_index":306,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.route.url.pipe",{"_index":539,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([\"app",{"_index":308,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["this.router.navigate([\"login",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(resourceurl",{"_index":582,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["this.scope",{"_index":816,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.themechange.emit(value",{"_index":655,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["this.themeservice.settheme(value",{"_index":967,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["this.themeservice.theme",{"_index":966,"title":{},"body":{"components/UserPreferencesComponent.html":{}}}],["this.themesubject",{"_index":692,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.asobservable",{"_index":702,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.next(theme",{"_index":697,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.value",{"_index":696,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themesubject.value.tostring",{"_index":700,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.token$.pipe(map((token",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token_type",{"_index":789,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.tokensubject.asobservable",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokensubject.next(tokenwrapper",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentype",{"_index":814,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["this.username}#${this.discriminator",{"_index":948,"title":{},"body":{"classes/User.html":{}}}],["this.userservice.getcurrentuser",{"_index":403,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["this]{@link",{"_index":650,"title":{},"body":{"components/ThemeChooserComponent.html":{},"classes/User.html":{}}}],["throw",{"_index":476,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwifalreadyloaded(parentmodule",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["tied",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/HomeRoutingModule.html":{},"components/UserPreferencesComponent.html":{}}}],["toggledarkthemestylesheet",{"_index":695,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggledarkthemestylesheet(darkthemestylesheet",{"_index":701,"title":{},"body":{"injectables/ThemeService.html":{}}}],["token",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token's",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["token.accesstoken",{"_index":735,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["token.isvalid",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["token]{@link",{"_index":304,"title":{},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{}}}],["token_type",{"_index":788,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokeninterceptor",{"_index":169,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tokensubject",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":753,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["tokenwrapper",{"_index":300,"title":{"classes/TokenWrapper.html":{}},"body":{"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"coverage.html":{}}}],["tokenwrapper#accesstoken",{"_index":731,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{}}}],["tokenwrapper.gettokenwrapperfromurlfragment",{"_index":305,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["transform",{"_index":570,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{}}}],["transform((params",{"_index":791,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transform(resourceurl",{"_index":571,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["transformed",{"_index":760,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transformer",{"_index":777,"title":{},"body":{"classes/TokenWrapper.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transformfnparams",{"_index":776,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transforming",{"_index":758,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["transit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/CurrentUserResolver.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["trust",{"_index":566,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["tslib",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":869,"title":{},"body":{"classes/User.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/HeaderComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":646,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["types",{"_index":941,"title":{},"body":{"classes/User.html":{}}}],["typescript",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"modules/DataModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/TokenWrapper.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["ui",{"_index":952,"title":{},"body":{"modules/UserInterfaceModule.html":{}}}],["unauthenticated",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["underscore",{"_index":782,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["unique",{"_index":838,"title":{},"body":{"classes/User.html":{}}}],["unsafe",{"_index":436,"title":{},"body":{"modules/DataModule.html":{},"components/ThemeChooserComponent.html":{}}}],["unused",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["update",{"_index":639,"title":{},"body":{"components/ThemeChooserComponent.html":{}}}],["updates",{"_index":1063,"title":{},"body":{"index.html":{}}}],["urgent",{"_index":863,"title":{},"body":{"classes/User.html":{}}}],["url",{"_index":289,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"pipes/SafeResourceUrlPipe.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{}}}],["url(\"../../../../assets/fargoth.jpg",{"_index":327,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["url(\"~assets/fargoth.jpg",{"_index":342,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LoginComponent.html":{}}}],["url(${this.user.avatarurl",{"_index":480,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url(~assets/siltstrider4.svg",{"_index":498,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.pipe.ts",{"_index":564,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:18",{"_index":572,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urls",{"_index":568,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["urlsegment",{"_index":534,"title":{},"body":{"components/LayoutComponent.html":{}}}],["us/docs/web/api/stylesheet",{"_index":707,"title":{},"body":{"injectables/ThemeService.html":{}}}],["use",{"_index":297,"title":{},"body":{"components/AuthRedirectComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{}}}],["useclass",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"injectables/ThemeService.html":{},"interceptors/TokenInterceptor.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":41,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"guards/CurrentUserResolver.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user#discriminator",{"_index":947,"title":{},"body":{"classes/User.html":{}}}],["user#username",{"_index":946,"title":{},"body":{"classes/User.html":{}}}],["user's",{"_index":464,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["user(value",{"_index":474,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["user.discriminator",{"_index":979,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.displayname",{"_index":487,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.resolver.ts",{"_index":392,"title":{},"body":{"guards/CurrentUserResolver.html":{},"coverage.html":{}}}],["user.resolver.ts:31",{"_index":398,"title":{},"body":{"guards/CurrentUserResolver.html":{}}}],["user.username",{"_index":978,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user]{@link",{"_index":472,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["userinterfacemodule",{"_index":379,"title":{"modules/UserInterfaceModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserInterfaceModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":819,"title":{},"body":{"classes/User.html":{}}}],["username(value",{"_index":907,"title":{},"body":{"classes/User.html":{}}}],["userpreferencescomponent",{"_index":144,"title":{"components/UserPreferencesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprofilecomponent",{"_index":146,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"modules/SharedModule.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["userservice",{"_index":401,"title":{"injectables/UserService.html":{}},"body":{"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user}'s",{"_index":479,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["using",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["utility",{"_index":565,"title":{},"body":{"pipes/SafeResourceUrlPipe.html":{}}}],["valid",{"_index":478,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserProfileComponent.html":{}}}],["validation",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["validity",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/TokenWrapper.html":{}}}],["value",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/ThemeChooserComponent.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":622,"title":{},"body":{"components/ThemeChooserComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1071,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CurrentUserResolver.html":{},"injectables/UserService.html":{}}}],["verified",{"_index":825,"title":{},"body":{"classes/User.html":{}}}],["verified(value",{"_index":930,"title":{},"body":{"classes/User.html":{}}}],["via",{"_index":636,"title":{},"body":{"components/ThemeChooserComponent.html":{},"modules/UserInterfaceModule.html":{}}}],["visual",{"_index":611,"title":{},"body":{"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/AuthRedirectComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ServerComponent.html":{},"components/ThemeChooserComponent.html":{},"injectables/ThemeService.html":{},"classes/TokenWrapper.html":{},"classes/User.html":{},"components/UserPreferencesComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["webcomponents/custom",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":335,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["webpack",{"_index":1060,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["whether",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"classes/User.html":{}}}],["widget",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AuthRedirectComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapping",{"_index":747,"title":{},"body":{"classes/TokenWrapper.html":{}}}],["z",{"_index":319,"title":{},"body":{"components/AuthRedirectComponent.html":{}}}],["zone.js",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main Component for the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkRouterEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkRouterEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRouterEvent(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n                    Helper method determining when the router is in transit in order to display\na loading spinner for a better user experience\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The router event to check against\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:38\n                                \n                            \n                    \n                        \n                                Accessor retrieving the loading status of the router\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n  RouterEvent\n} from \"@angular/router\";\nimport { ThemeService } from \"@core/service/theme.service\";\n\n/**\n * Main Component for the application\n */\n@Component({\n  selector: \"siltstride-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  /**\n   * @ignore\n   * @type {string}\n   */\n  public title = \"siltstride-admin-web\";\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _loading: boolean;\n\n  /**\n   * Accessor retrieving the loading status of the router\n   * @returns {boolean}\n   */\n  public get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @ignore\n   *\n   * Include {@link ThemeService} in the constructor to force it to be created\n   * and run its constructor logic on app startup\n   *\n   * May convert this over to using\n   * [APP_INITIALIZER]{@link https://angular.io/api/core/APP_INITIALIZER} DI token\n   * to be more semantically correct instead of the current hack solution\n   * @param {Router} router\n   * @param themeService\n   */\n  constructor(private router: Router, private themeService: ThemeService) {\n    this.router.events.subscribe((event: RouterEvent) =>\n      this.checkRouterEvent(event)\n    );\n  }\n\n  /**\n   * Helper method determining when the router is in transit in order to display\n   * a loading spinner for a better user experience\n   * @param {RouterEvent} event The router event to check against\n   * @private\n   */\n  private checkRouterEvent(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this._loading = true;\n    }\n\n    if (\n      event instanceof NavigationEnd ||\n      event instanceof NavigationCancel ||\n      event instanceof NavigationError\n    ) {\n      this._loading = false;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .center-spinner {\n  position: fixed;\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n  place-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthRedirectComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { HeaderComponent } from \"./layout/header/header.component\";\nimport { FooterComponent } from \"./layout/footer/footer.component\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { CoreModule } from \"@core/core.module\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { TokenInterceptor } from \"@core/interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AuthRedirectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                e2e class for the AppComponent\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from \"protractor\";\n\n/**\n * e2e class for the {@link AppComponent}\n */\nexport class AppPage {\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  /**\n   * @ignore\n   * @returns {Promise}\n   */\n  getTitleText(): Promise {\n    return element(\n      by.css(\"siltstride-root .content span\")\n    ).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./layout/login/login.component\";\nimport { LayoutComponent } from \"./layout/layout/layout.component\";\nimport { AuthRedirectComponent } from \"./layout/auth-redirect/presentation/auth-redirect.component\";\nimport { CurrentUserResolver } from \"@core/resolver\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/app/dashboard\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"auth/redirect\", component: AuthRedirectComponent },\n  {\n    path: \"app\",\n    component: LayoutComponent,\n    resolve: {\n      user: CurrentUserResolver\n    },\n    children: [\n      {\n        path: \"\",\n        loadChildren: () =>\n          \"import(\\\"@module/home/home.module\\\").then((m) => m.HomeModule)\"\n      }\n    ]\n  },\n  { path: \"**\", redirectTo: \"/app/dashboard\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guard/auth.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guard/auth.guard.ts:24\n                \n            \n\n\n            \n                \n                    Determines whether a route can be activated based on user authentication status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route attempting to be navigated to\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current Router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token validity status\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/service\";\nimport { tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Determines whether a route can be activated based on user authentication status\n   * @param {ActivatedRouteSnapshot} next The route attempting to be navigated to\n   * @param {RouterStateSnapshot} state Current Router state\n   * @returns {Observable} Observable containing the token validity status\n   */\n  public canActivate(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    next: ActivatedRouteSnapshot,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.authService.isValidToken$().pipe(\n      tap((value: boolean) => {\n        if (!value) {\n          void this.router.navigate([\"login\"]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthRedirectComponent.html":{"url":"components/AuthRedirectComponent.html","title":"component - AuthRedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthRedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n\n\n    \n        Description\n    \n    \n        Component handling the redirect from\nDiscord's OAuth2 implicit grant\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-auth-redirect\n            \n\n            \n                styleUrls\n                ./auth-redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:29\n                \n            \n\n\n            \n                \n                    Retrieve the token from the URL fragment and store it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/auth-redirect/presentation/auth-redirect.component.ts:43\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { mouseParallaxHelper } from \"@core/helper\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { TokenWrapper } from \"@core/model\";\nimport { AuthService } from \"@core/service\";\n\n/**\n * Component handling the redirect from\n * [Discord's OAuth2 implicit grant]{@link https://discord.com/developers/docs/topics/oauth2#implicit-grant}\n */\n@Component({\n  selector: \"siltstride-auth-redirect\",\n  templateUrl: \"./auth-redirect.component.html\",\n  styleUrls: [\"./auth-redirect.component.scss\"]\n})\nexport class AuthRedirectComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  /**\n   * Retrieve the [token]{@link TokenWrapper} from the URL fragment and store it\n   */\n  public ngOnInit(): void {\n    const tokenWrapper = TokenWrapper.getTokenWrapperFromUrlFragment(\n      this.route.snapshot.fragment\n    );\n    this.authService.storeToken(tokenWrapper);\n    void this.router.navigate([\"app\", \"dashboard\"]);\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./auth-redirect.component.scss\n                \n                //.blurred-background::before {\n//  content: \"\";\n//  position: fixed;\n//  left: 0;\n//  right: 0;\n//  z-index: -1;\n//  display: block;\n//  // url must be called in scss template file.\n//  // Inline scss template would not resolve image url.\n//  background-image: url(\"../../../../assets/Fargoth.jpg\");\n//  background-repeat: no-repeat;\n//  background-position: var(--mouseX) var(--mouseY);\n//  background-size: auto 150%;\n//  width: 100%;\n//  height: 100%;\n//  -webkit-filter: blur(5px);\n//  -moz-filter: blur(5px);\n//  -o-filter: blur(5px);\n//  -ms-filter: blur(5px);\n//  filter: blur(5px);\n//}\n\n.blurred-background {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -o-filter: blur(5px);\n  -ms-filter: blur(5px);\n  filter: blur(5px);\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthRedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling authentication logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isValidToken$\n                            \n                            \n                                    Public\n                                storeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidToken$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidToken$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/auth.service.ts:50\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the stored TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable containing the token's validity status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeToken(tokenWrapper: TokenWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Stores the TokenWrapper received from Discord OAuth2 implicit grant\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tokenWrapper\n                                    \n                                                TokenWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object containing the access token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Used for validation of successful token storage\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    new TokenWrapper()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                        The token for the current User\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token$\n                    \n                \n\n                \n                    \n                        gettoken$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/auth.service.ts:27\n                                \n                            \n                    \n                        \n                                Get the token associated with the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CoreModule } from \"@core/core.module\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { TokenWrapper } from \"@core/model\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Service handling authentication logic\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthService {\n  /**\n   * The [token]{@link TokenWrapper} for the current {@link User}\n   * @type {BehaviorSubject} BehaviorSubject containing the token\n   * @private\n   */\n  private tokenSubject: BehaviorSubject = new BehaviorSubject(\n    new TokenWrapper()\n  );\n\n  /**\n   * Get the [token]{@link TokenWrapper} associated with the current {@link User}\n   * @returns {Observable} Observable containing the token\n   */\n  public get token$(): Observable {\n    return this.tokenSubject.asObservable();\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * Stores the {@link TokenWrapper} received from Discord OAuth2 implicit grant\n   * @param {TokenWrapper} tokenWrapper Object containing the access token\n   * @returns {Observable} Used for validation of successful token storage\n   */\n  public storeToken(tokenWrapper: TokenWrapper): void {\n    this.tokenSubject.next(tokenWrapper);\n  }\n\n  /**\n   * Helper method determining the validity of the stored {@link TokenWrapper}\n   * @returns {Observable} Observable containing the token's validity status\n   */\n  public isValidToken$(): Observable {\n    return this.token$.pipe(map((token: TokenWrapper) => token.isValid()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { throwIfAlreadyLoaded } from \"@core/import.guard\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\n\n@NgModule({\n  imports: [HttpClientModule, UserInterfaceModule],\n  exports: [HttpClientModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CurrentUserResolver.html":{"url":"guards/CurrentUserResolver.html","title":"guard - CurrentUserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CurrentUserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/resolver/current-user.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolver service used to retrieve the current User from Discord\nprior to navigation completion\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/resolver/current-user.resolver.ts:31\n                \n            \n\n\n            \n                \n                    Resolve the intended route with the current User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        In transit to this route\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Snapshot of the current router state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the current user\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"@core/model\";\nimport { UserService } from \"@core/http\";\n\n/**\n * Resolver service used to retrieve the current {@link User} from Discord\n * prior to navigation completion\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CurrentUserResolver implements Resolve {\n  /**\n   * @ignore\n   * @param {UserService} userService\n   */\n  constructor(private userService: UserService) {}\n\n  /**\n   * Resolve the intended route with the current {@link User}\n   * @param {ActivatedRouteSnapshot} route In transit to this route\n   * @param {RouterStateSnapshot} state Snapshot of the current router state\n   * @returns {Observable} Observable containing the current user\n   */\n  public resolve(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    route: ActivatedRouteSnapshot,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    state: RouterStateSnapshot\n  ): Observable {\n    return this.userService.getCurrentUser();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordServerWidgetUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordServerWidgetUrl\n                    \n                \n\n                \n                    \n                        getdiscordServerWidgetUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/dashboard/dashboard.component.ts:17\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord server widget URL configured for our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { environment } from \"@env\";\n\n/**\n * Component used as the landing page for authenticated users of the application where they will see innocuous overview information related to the TES3MP server\n */\n@Component({\n  selector: \"siltstride-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the Discord server widget URL configured for our application\n   * @returns {string} Discord server widget URL\n   */\n  public get discordServerWidgetUrl(): string {\n    return environment.discordServerWidgetUrl;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Dashboard\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .discord-server-widget {\n  float: right;\n  width: 350px;\n  height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dashboard          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n@NgModule({\n  declarations: [],\n  imports: [CommonModule]\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component used in the application layout\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n/**\n * Footer Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.scss\"]\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header Presentation Component used in the application layout\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    backgroundImageUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/header/header.component.ts:34\n                            \n                        \n                \n                    \n                        Mutator setting the user instance member for this component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:25\n                                \n                            \n                    \n                        \n                                Accessor retrieving the User object used for this component\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n                \n                    \n                        setuser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:34\n                                \n                            \n                    \n                        \n                                Mutator setting the user instance member for this component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The incoming user value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        backgroundImageUrl\n                    \n                \n\n                \n                    \n                        getbackgroundImageUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/header/header.component.ts:46\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the CSS url() function call with the\nUser's avatar URL inserted as a parameter\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { User } from \"@core/model\";\n\n/**\n * Header Presentation Component used in the application layout\n */\n@Component({\n  selector: \"siltstride-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /**\n   * @ignore\n   * @type {User}\n   * @private\n   */\n  private _user: User;\n\n  /**\n   * Accessor retrieving the {@link User} object used for this component\n   * @returns {User} The user in this component\n   */\n  public get user(): User {\n    return this._user;\n  }\n\n  /**\n   * Mutator setting the [user]{@link User} instance member for this component\n   * @param {User} value The incoming user value\n   */\n  @Input()\n  public set user(value: User) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid User object!\");\n    }\n    this._user = value;\n  }\n\n  /**\n   * Helper accessor retrieving the CSS url() function call with the\n   * {@link User}'s avatar URL inserted as a parameter\n   * @returns {string} The CSS url() function call\n   */\n  public get backgroundImageUrl(): string {\n    return `url(${this.user.avatarUrl})`;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    Consider enabling&nbsp;\n    \n      2-Factor authentication\n    \n    &nbsp;on your Discord account!\n  \n\n\n  \n    \n      \n      Siltstride Admin\n    \n  \n  \n    \n      Dashboard\n    \n    \n      Server\n    \n  \n  \n    \n      \n        \n        {{ user.displayName }}\n        \n      \n      \n        Preferences\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .clr-icon {\n  &.user-avatar {\n    border-radius: 50%;\n    //background-size: 150% 150%;\n    //width: 36px;\n    //margin-right: 11px;\n  }\n}\n\n.clr-icon {\n  &.siltstride-logo {\n    background-image: url(~assets/SiltStrider4.svg);\n    height: 36px;\n    width: 36px;\n    margin-right: 11px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Consider enabling           2-Factor authentication         on your Discord account!                    Siltstride Admin                  Dashboard              Server                                  {{ user.displayName }}                            Preferences            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nUserPreferencesComponent\n\nUserPreferencesComponent\n\nHomeModule -->\n\nUserPreferencesComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            ServerComponent\n                        \n                        \n                            UserPreferencesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeRoutingModule } from \"./home-routing.module\";\nimport { DashboardComponent } from \"./page/dashboard/dashboard.component\";\nimport { SharedModule } from \"@shared/shared.module\";\nimport { ServerComponent } from \"./page/server/server.component\";\nimport { UserPreferencesComponent } from \"./page/user-preferences/user-preferences.component\";\n\n@NgModule({\n  declarations: [DashboardComponent, ServerComponent, UserPreferencesComponent],\n  imports: [CommonModule, HomeRoutingModule, SharedModule]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/home/home-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"@module/home/page/dashboard/dashboard.component\";\nimport { AuthGuard } from \"@core/guard\";\nimport { ServerComponent } from \"@module/home/page/server/server.component\";\nimport { UserPreferencesComponent } from \"@module/home/page/user-preferences/user-preferences.component\";\nimport { CurrentUserResolver } from \"@core/resolver\";\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"preferences\",\n    component: UserPreferencesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      title: \"Preferences\"\n    },\n    resolve: {\n      user: CurrentUserResolver\n    }\n  },\n  { path: \"server\", component: ServerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout/layout.component.ts\n\n\n    \n        Description\n    \n    \n        Layout Container Component defining the structure of the application\nThis Component bears no Presentation responsibilities, so it is used as a\nContainer component for HeaderComponent which bears Presentation\nresponsibility\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user$\n                                \n                                \n                                    url$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user$\n                    \n                \n\n                \n                    \n                        getuser$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/layout/layout.component.ts:24\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the current User\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url$\n                    \n                \n\n                \n                    \n                        geturl$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/layout/layout.component.ts:34\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the current URL for use in displaying ephemeral\nHeader links\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"@core/model\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute, Data, UrlSegment } from \"@angular/router\";\n\n/**\n * Layout Container Component defining the structure of the application\n *\n * This Component bears no Presentation responsibilities, so it is used as a\n * Container component for {@link HeaderComponent} which bears Presentation\n * responsibility\n */\n@Component({\n  selector: \"siltstride-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"]\n})\nexport class LayoutComponent implements OnInit {\n  /**\n   * Helper accessor retrieving the current {@link User}\n   * @returns {Observable} Observable containing the logged in user\n   */\n  public get user$(): Observable {\n    return this.route.data.pipe(map((data: Data) => data[\"user\"] as User));\n  }\n\n  /**\n   * Helper accessor retrieving the current URL for use in displaying ephemeral\n   * [Header]{@link HeaderComponent} links\n   * @returns {Observable>} Observable containing the current\n   * URL\n   */\n  public get url$(): Observable {\n    return this.route.url.pipe(\n      map((segments: Array) => segments.join(\"\"))\n    );\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Presentational Component used as the landing page for unauthenticated users\nof the application and where they will initiate the OAuth2 login handshake\nwith Discord\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    discordOAuthImplicitFlowUrl\n                                \n                                \n                                    onMouseMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        discordOAuthImplicitFlowUrl\n                    \n                \n\n                \n                    \n                        getdiscordOAuthImplicitFlowUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:21\n                                \n                            \n                    \n                        \n                                Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\nfor our application\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseMove\n                    \n                \n\n                \n                    \n                        getonMouseMove()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/login/login.component.ts:31\n                                \n                            \n                    \n                        \n                                Helper accessor returning the mouseParallaxHelper function for use\nin the HTML template\n\n\n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { environment } from \"@env\";\nimport { mouseParallaxHelper } from \"@core/helper\";\n\n/**\n * Presentational Component used as the landing page for unauthenticated users\n * of the application and where they will initiate the OAuth2 login handshake\n * with Discord\n */\n@Component({\n  selector: \"siltstride-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent {\n  /**\n   * Helper accessor retrieving the Discord OAuth2 implicit grant URL configured\n   * for our application\n   * @returns {string} Discord OAuth2 implicit grant URL\n   */\n  public get discordOAuthImplicitFlowUrl(): string {\n    return environment.discordOAuthImplicitFlowUrl;\n  }\n\n  /**\n   * Helper accessor returning the {@link mouseParallaxHelper} function for use\n   * in the HTML template\n   * @returns {(element: HTMLElement, event: MouseEvent) => void} Mouse parallax\n   * helper function\n   */\n  public get onMouseMove(): (element: HTMLElement, event: MouseEvent) => void {\n    return mouseParallaxHelper;\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to\n      Siltstride Admin\n    \n    \n      \n        Log In with Discord\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :host {\n  --mouseX: 50%;\n  --mouseY: 50%;\n}\n\n.login-wrapper {\n  min-height: 100vh;\n  background-image: url(\"~assets/Fargoth.jpg\");\n  background-repeat: no-repeat;\n  background-position: var(--mouseX) var(--mouseY);\n  background-size: auto 150%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to      Siltstride Admin                      Log In with Discord            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeResourceUrlPipe.html":{"url":"pipes/SafeResourceUrlPipe.html","title":"pipe - SafeResourceUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeResourceUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/safe-resource-url.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Utility Pipe to trust provided resource URLs\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeResourceUrl\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(resourceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipe/safe-resource-url.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Bypasses the DomSanitizer's security trust for the provided resource URL\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resource URL to trust\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        The safe resource URL\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n/**\n * Utility Pipe to trust provided resource URLs\n */\n@Pipe({\n  name: \"safeResourceUrl\"\n})\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  /**\n   * Bypasses the {@link DomSanitizer}'s security trust for the provided resource URL\n   * @param {string} resourceUrl Resource URL to trust\n   * @returns {SafeResourceUrl} The safe resource URL\n   */\n  public transform(resourceUrl: string): SafeResourceUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(resourceUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerComponent.html":{"url":"components/ServerComponent.html","title":"component - ServerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/server/server.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-server\n            \n\n            \n                styleUrls\n                ./server.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./server.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/module/home/page/server/server.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/home/page/server/server.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"siltstride-server\",\n  templateUrl: \"./server.component.html\",\n  styleUrls: [\"./server.component.scss\"]\n})\nexport class ServerComponent implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      Start Server\n      \n        \n          \n          \n            Project A\n            Owner: John Doe\n          \n        \n        ...\n      \n    \n  \n  \n    \n      Stop Server\n      \n        \n          \n          \n            Project B\n            Owner: Jane Doe\n          \n        \n        ...\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./server.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Server                                              Project A            Owner: John Doe                          ...                        Stop Server                                              Project B            Owner: Jane Doe                          ...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nThemeChooserComponent\n\nThemeChooserComponent\n\nSharedModule -->\n\nThemeChooserComponent->SharedModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nSharedModule -->\n\nUserProfileComponent->SharedModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nThemeChooserComponent \n\nThemeChooserComponent \n\nThemeChooserComponent  -->\n\nSharedModule->ThemeChooserComponent \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nSharedModule->UserProfileComponent \n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            ThemeChooserComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInterfaceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SafeResourceUrlPipe\n                        \n                        \n                            ThemeChooserComponent\n                        \n                        \n                            UserInterfaceModule\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserInterfaceModule } from \"@shared/user-interface/user-interface.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SafeResourceUrlPipe } from \"@shared/pipe\";\nimport { UserProfileComponent } from \"@shared/component\";\nimport { ThemeChooserComponent } from \"@shared/component\";\n\n@NgModule({\n  declarations: [\n    SafeResourceUrlPipe,\n    UserProfileComponent,\n    ThemeChooserComponent\n  ],\n  imports: [CommonModule, FormsModule, UserInterfaceModule],\n  exports: [\n    FormsModule,\n    UserInterfaceModule,\n    SafeResourceUrlPipe,\n    UserProfileComponent,\n    ThemeChooserComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeChooserComponent.html":{"url":"components/ThemeChooserComponent.html","title":"component - ThemeChooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThemeChooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/theme-chooser/theme-chooser.component.ts\n\n\n    \n        Description\n    \n    \n        Presentation component allowing the user to choose between visual themes\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-theme-chooser\n            \n\n            \n                styleUrls\n                ./theme-chooser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./theme-chooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                themeChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    LocalTheme\n                                \n                                \n                                    theme\n                                \n                                \n                                    newTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:54\n                            \n                        \n                \n                    \n                        Mutator setting the internal theme member variable of\nthis component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        themeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:69\n                            \n                        \n                \n                    \n                        Emitter providing the newly selected Theme to the container\ncomponent\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        LocalTheme\n                    \n                \n\n                \n                    \n                        getLocalTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:26\n                                \n                            \n                    \n                        \n                                Helper accessor making the Theme type available in the HTML\ntemplate\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:43\n                                \n                            \n                    \n                        \n                                Accessor returning the theme passed in via the container\nhousing this component\n\n\n                                \n                                \n                                \n                                    Returns :         Theme\n\n                                \n                        \n                    \n\n                \n                    \n                        settheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:54\n                                \n                            \n                    \n                        \n                                Mutator setting the internal theme member variable of\nthis component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The theme to update with\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        newTheme\n                    \n                \n\n\n                \n                    \n                        setnewTheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/theme-chooser/theme-chooser.component.ts:76\n                                \n                            \n                    \n                        \n                                Mutator emitting the themeChange event when the user selects a\nTheme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Theme to change to\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from \"@angular/core\";\nimport { Theme } from \"@core/model\";\n\n/**\n * Presentation component allowing the user to choose between visual themes\n */\n@Component({\n  selector: \"siltstride-theme-chooser\",\n  templateUrl: \"./theme-chooser.component.html\",\n  styleUrls: [\"./theme-chooser.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThemeChooserComponent {\n  /**\n   * Helper accessor making the {@link Theme} type available in the HTML\n   * template\n   * @returns {typeof Theme} The Theme type to be accessible\n   * @constructor\n   */\n  public get LocalTheme(): typeof Theme {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return Theme;\n  }\n\n  /**\n   * @ignore\n   * @type {Theme}\n   * @private\n   */\n  private _theme: Theme;\n\n  /**\n   * Accessor returning the [theme]{@link Theme} passed in via the container\n   * housing [this]{@link ThemeChooserComponent} component\n   * @returns {Theme} The theme\n   */\n  public get theme(): Theme {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this._theme;\n  }\n\n  /**\n   * Mutator setting the internal [theme]{@link Theme} member variable of\n   * [this]{@link ThemeChooserComponent} component\n   * @param {Theme} value The theme to update with\n   */\n  @Input()\n  public set theme(value: Theme) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid Theme!\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    this._theme = value;\n  }\n\n  /**\n   * Emitter providing the newly selected {@link Theme} to the container\n   * component\n   * @type {EventEmitter} Event containing the newly selected theme\n   * @private\n   */\n  @Output()\n  private themeChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Mutator emitting the {@link themeChange} event when the user selects a\n   * {@link Theme}\n   * @param {Theme} value Theme to change to\n   */\n  public set newTheme(value: Theme) {\n    this.themeChange.emit(value);\n  }\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        Theme\n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./theme-chooser.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Theme                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeChooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/theme.service.ts\n        \n\n            \n                Description\n            \n            \n                Adapted code from:\nClarity Theming Starter &\nAngular Folder Structure\nService used to pick from Theme.Dark and Theme.Light\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                themeSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    theme$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/theme.service.ts:24\n                            \n                        \n\n                \n                    \n                            Sets the application visual theme to what is saved in the user's browser\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTheme(theme: Theme)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/theme.service.ts:43\n                \n            \n\n\n            \n                \n                    Setter method changing the currently selected Theme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                Theme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Theme to change to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            themeSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/theme.service.ts:24\n                            \n                        \n\n                \n                    \n                        Stores the currently selected Theme\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        theme$\n                    \n                \n\n                \n                    \n                        gettheme$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/theme.service.ts:57\n                                \n                            \n                    \n                        \n                                Accessor returning the currently selected Theme\n\n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Theme } from \"@core/model\";\n\nconst darkThemeStyleSheet: StyleSheet = document.styleSheets[4];\n\n/**\n * Adapted code from:\n *\n * [Clarity Theming Starter]{@link https://github.com/mathisscott/clarity-theming-starter/blob/clarity-css-dark-theme-switcher/src/app/app.component.ts} &\n * [Angular Folder Structure]{@link https://github.com/mathisGarberg/angular-folder-structure/blob/master/src/app/layout/nav/nav.component.ts}\n *\n * Service used to pick from {@link Theme.Dark} and {@link Theme.Light}\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ThemeService {\n  /**\n   * Stores the currently selected {@link Theme}\n   * @type {BehaviorSubject} Subject containing the last chosen theme\n   * @private\n   */\n  private readonly themeSubject: BehaviorSubject;\n\n  /**\n   * Sets the application visual theme to what is saved in the user's browser\n   */\n  constructor() {\n    this.themeSubject = new BehaviorSubject(\n      (localStorage.getItem(\"siltstrideVisualTheme\") || \"light\") as Theme\n    );\n    toggleDarkThemeStyleSheet(\n      darkThemeStyleSheet,\n      this.themeSubject.value === Theme.Dark\n    );\n  }\n\n  /**\n   * Setter method changing the currently selected {@link Theme}\n   * @param {Theme} theme Theme to change to\n   */\n  public setTheme(theme: Theme): void {\n    this.themeSubject.next(theme);\n    localStorage.setItem(\n      \"siltstrideVisualTheme\",\n      this.themeSubject.value.toString()\n    );\n    toggleDarkThemeStyleSheet(darkThemeStyleSheet, theme === Theme.Dark);\n  }\n\n  /**\n   * Accessor returning the currently selected {@link Theme}\n   * @returns {Observable} Observable containing the currently selected\n   * theme\n   */\n  public get theme$(): Observable {\n    return this.themeSubject.asObservable();\n  }\n}\n\n/**\n * Helper function enabling/disabling the dark-theme.css\n * [StyleSheet]{@link https://developer.mozilla.org/en-US/docs/Web/API/StyleSheet}\n * @param {StyleSheet} styleSheet\n * @param {boolean} enable\n */\nconst toggleDarkThemeStyleSheet = (\n  styleSheet: StyleSheet,\n  enable: boolean\n): void => {\n  darkThemeStyleSheet.disabled = !enable;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptor/token.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor used to inject TokenWrapper in the\nAuthorization header of outgoing requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptor/token.interceptor.ts:33\n                \n            \n\n\n            \n                \n                    Interceptor method adding Authorization header to outgoing requests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Intercepted request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next event to occur\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Observable containing the\noutgoing request handler event\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"@core/service\";\nimport { concatMap, map } from \"rxjs/operators\";\nimport { TokenWrapper } from \"@core/model\";\n\n/**\n * Interceptor used to inject {@link TokenWrapper#accessToken} in the\n * Authorization header of outgoing requests\n */\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Interceptor method adding Authorization header to outgoing requests\n   * @param {HttpRequest} request Intercepted request\n   * @param {HttpHandler} next Next event to occur\n   * @returns {Observable>} Observable containing the\n   * outgoing request handler event\n   */\n  public intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const source = this.authService.token$;\n    return source.pipe(\n      map((token: TokenWrapper) => token.accessToken),\n      map((accessToken: string) =>\n        request.headers.append(\"Authorization\", `Bearer ${accessToken}`)\n      ),\n      map((httpHeaders: HttpHeaders) =>\n        request.clone({ headers: httpHeaders })\n      ),\n      concatMap((clone: HttpRequest) => next.handle(clone))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenWrapper.html":{"url":"classes/TokenWrapper.html","title":"class - TokenWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/token.model.ts\n        \n\n            \n                Description\n            \n            \n                Model wrapping Discord's Access Token response attributes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getTokenWrapperFromUrlFragment\n                            \n                            \n                                    Public\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    tokenType\n                                \n                                \n                                    expiresIn\n                                \n                                \n                                    scope\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getTokenWrapperFromUrlFragment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenWrapperFromUrlFragment(fragment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:93\n                \n            \n\n\n            \n                \n                    Helper transforming the provided URL fragment string into the equivalent\nTokenWrapper object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL fragment to transform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenWrapper\n\n                    \n                    \n                        Transformed object containing the access token\nresponse attributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/token.model.ts:117\n                \n            \n\n\n            \n                \n                    Helper method determining the validity of the TokenWrapper\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Token's validity status\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:24\n                                \n                            \n                    \n                        \n                                The access token\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tokenType\n                    \n                \n\n                \n                    \n                        gettokenType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:40\n                                \n                            \n                    \n                        \n                                The token type\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expiresIn\n                    \n                \n\n                \n                    \n                        getexpiresIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:62\n                                \n                            \n                    \n                        \n                                The expiration date for the token\n\n\n                                \n                                \n                                \n                                    Returns :         Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        scope\n                    \n                \n\n                \n                    \n                        getscope()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:77\n                                \n                            \n                    \n                        \n                                The scopes associated to the token\n\n\n                                \n                                \n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n                \n                    \n                        setscope(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/token.model.ts:82\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  plainToClass,\n  Transform,\n  TransformFnParams,\n  Type\n} from \"class-transformer\";\n\n/**\n * Model wrapping Discord's [Access Token response]{@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-response} attributes\n */\nexport class TokenWrapper {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private access_token: string;\n\n  /**\n   * The access token\n   * @returns {string}\n   */\n  public get accessToken(): string {\n    return this.access_token;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private token_type: string;\n\n  /**\n   * The token type\n   * @returns {string}\n   */\n  public get tokenType(): string {\n    return this.token_type;\n  }\n\n  /**\n   * @ignore\n   * @type {Date}\n   * @private\n   */\n  @Type(() => Number)\n  @Transform((params: TransformFnParams) => {\n    const expiration = new Date();\n    expiration.setSeconds(expiration.getSeconds() + params.value);\n    return expiration;\n  })\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private expires_in: Date;\n\n  /**\n   * The expiration date for the token\n   * @returns {Date}\n   */\n  public get expiresIn(): Date {\n    return this.expires_in;\n  }\n\n  /**\n   * @ignore\n   * @type {Array}\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private _scope: Array;\n  /**\n   * The scopes associated to the token\n   * @returns {Array}\n   */\n  public get scope(): Array {\n    return this._scope;\n  }\n  @Type(() => String)\n  @Transform((params: TransformFnParams) => (params.value).split(\"+\"))\n  public set scope(value: Array) {\n    this._scope = value;\n  }\n\n  /**\n   * Helper transforming the provided URL fragment string into the equivalent\n   * {@link TokenWrapper} object\n   * @param {string} fragment URL fragment to transform\n   * @returns {TokenWrapper} Transformed object containing the access token\n   * response attributes\n   */\n  public static getTokenWrapperFromUrlFragment(fragment: string): TokenWrapper {\n    const properties = fragment?.split(\"&\");\n    const obj: {\n      access_token: string;\n      token_type: string;\n      expires_in: string;\n      scope: string;\n    } = {\n      access_token: \"\",\n      token_type: \"\",\n      expires_in: \"\",\n      scope: \"\"\n    };\n    properties?.forEach((value: string, index: number) => {\n      const property = properties[index]?.split(\"=\");\n      obj[property[0]] = property[1];\n    });\n    return plainToClass(TokenWrapper, obj);\n  }\n\n  /**\n   * Helper method determining the validity of the {@link TokenWrapper#accessToken}\n   * @returns {boolean} Token's validity status\n   */\n  public isValid(): boolean {\n    const now = new Date();\n    return (\n      this.accessToken != null &&\n      this.tokenType != null &&\n      this.expiresIn != null &&\n      this.scope != null &&\n      now \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/user.model.ts\n        \n\n            \n                Description\n            \n            \n                User object as defined by Discord's user structure specification\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    username\n                                \n                                \n                                    discriminator\n                                \n                                \n                                    avatar\n                                \n                                \n                                    bot\n                                \n                                \n                                    system\n                                \n                                \n                                    mfaEnabled\n                                \n                                \n                                    locale\n                                \n                                \n                                    verified\n                                \n                                \n                                    email\n                                \n                                \n                                    flags\n                                \n                                \n                                    premiumType\n                                \n                                \n                                    publicFlags\n                                \n                                \n                                    avatarUrl\n                                \n                                \n                                    displayName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:18\n                                \n                            \n                    \n                        \n                                The User's id\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:36\n                                \n                            \n                    \n                        \n                                The User's username, not unique across the platform\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        discriminator\n                    \n                \n\n                \n                    \n                        getdiscriminator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:54\n                                \n                            \n                    \n                        \n                                The User's 4-digit Discord tag\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdiscriminator(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n\n                \n                    \n                        getavatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:72\n                                \n                            \n                    \n                        \n                                The User's avatar hash\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setavatar(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bot\n                    \n                \n\n                \n                    \n                        getbot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:90\n                                \n                            \n                    \n                        \n                                Whether the User belongs to an OAuth2 application\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setbot(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        system\n                    \n                \n\n                \n                    \n                        getsystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:108\n                                \n                            \n                    \n                        \n                                Whether the user is an Official Discord System user (part of the urgent message system)\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsystem(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mfaEnabled\n                    \n                \n\n                \n                    \n                        getmfaEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:126\n                                \n                            \n                    \n                        \n                                Whether the user has two factor enabled on their account\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:141\n                                \n                            \n                    \n                        \n                                The User's chosen language option\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlocale(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:144\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        verified\n                    \n                \n\n                \n                    \n                        getverified()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:159\n                                \n                            \n                    \n                        \n                                Whether the email on this account has been verified\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setverified(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:162\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:177\n                                \n                            \n                    \n                        \n                                The User's email\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setemail(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:180\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        flags\n                    \n                \n\n                \n                    \n                        getflags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:195\n                                \n                            \n                    \n                        \n                                The flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setflags(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:198\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        premiumType\n                    \n                \n\n                \n                    \n                        getpremiumType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:213\n                                \n                            \n                    \n                        \n                                The type of Nitro subscription on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        publicFlags\n                    \n                \n\n                \n                    \n                        getpublicFlags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:228\n                                \n                            \n                    \n                        \n                                The public flags on a User's account\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avatarUrl\n                    \n                \n\n                \n                    \n                        getavatarUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:236\n                                \n                            \n                    \n                        \n                                Helper accessor returning the unique avatar URL for this\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayName\n                    \n                \n\n                \n                    \n                        getdisplayName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/model/user.model.ts:245\n                                \n                            \n                    \n                        \n                                Helper accessor returning the User's username as displayed in Discord\nwith the User and User\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { environment } from \"@env\";\n\n/**\n * User object as defined by [Discord's user structure specification]{@link https://discord.com/developers/docs/resources/user#user-object-user-structure}\n */\nexport class User {\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _id: string;\n\n  /**\n   * The {@link User}'s id\n   * @returns {string}\n   */\n  public get id(): string {\n    return this._id;\n  }\n  public set id(value: string) {\n    this._id = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _username: string;\n\n  /**\n   * The {@link User}'s username, not unique across the platform\n   * @returns {string}\n   */\n  public get username(): string {\n    return this._username;\n  }\n  public set username(value: string) {\n    this._username = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _discriminator: string;\n\n  /**\n   * The {@link User}'s 4-digit Discord tag\n   * @returns {string}\n   */\n  public get discriminator(): string {\n    return this._discriminator;\n  }\n  public set discriminator(value: string) {\n    this._discriminator = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _avatar: string;\n\n  /**\n   * The {@link User}'s [avatar hash]{@link https://discord.com/developers/docs/reference#image-formatting}\n   * @returns {string}\n   */\n  public get avatar(): string {\n    return this._avatar;\n  }\n  public set avatar(value: string) {\n    this._avatar = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _bot?: boolean;\n\n  /**\n   * Whether the {@link User} belongs to an OAuth2 application\n   * @returns {boolean}\n   */\n  public get bot(): boolean {\n    return this._bot;\n  }\n  public set bot(value: boolean) {\n    this._bot = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _system?: boolean;\n\n  /**\n   * Whether the user is an Official Discord System user (part of the urgent message system)\n   * @returns {boolean}\n   */\n  public get system(): boolean {\n    return this._system;\n  }\n  public set system(value: boolean) {\n    this._system = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private mfa_enabled?: boolean;\n\n  /**\n   * Whether the user has two factor enabled on their account\n   * @returns {boolean}\n   */\n  public get mfaEnabled(): boolean {\n    return this.mfa_enabled;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _locale?: string;\n\n  /**\n   * The {@link User}'s chosen language option\n   * @returns {string}\n   */\n  public get locale(): string {\n    return this._locale;\n  }\n  public set locale(value: string) {\n    this._locale = value;\n  }\n\n  /**\n   * @ignore\n   * @type {boolean}\n   * @private\n   */\n  private _verified?: boolean;\n\n  /**\n   * Whether the email on this account has been verified\n   * @returns {boolean}\n   */\n  public get verified(): boolean {\n    return this._verified;\n  }\n  public set verified(value: boolean) {\n    this._verified = value;\n  }\n\n  /**\n   * @ignore\n   * @type {string}\n   * @private\n   */\n  private _email?: string;\n\n  /**\n   * The {@link User}'s email\n   * @returns {string}\n   */\n  public get email(): string {\n    return this._email;\n  }\n  public set email(value: string) {\n    this._email = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private _flags?: number;\n\n  /**\n   * The [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get flags(): number {\n    return this._flags;\n  }\n  public set flags(value: number) {\n    this._flags = value;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private premium_type?: number;\n\n  /**\n   * The [type of Nitro subscription]{@link https://discord.com/developers/docs/resources/user#user-object-premium-types} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get premiumType(): number {\n    return this.premium_type;\n  }\n\n  /**\n   * @ignore\n   * @type {number}\n   * @private\n   */\n  private public_flags?: number;\n\n  /**\n   * The public [flags]{@link https://discord.com/developers/docs/resources/user#user-object-user-flags} on a {@link User}'s account\n   * @returns {number}\n   */\n  public get publicFlags(): number {\n    return this.public_flags;\n  }\n\n  /**\n   * Helper accessor returning the unique avatar URL for [this]{@link User}\n   * @returns {string} The unique avatar URL\n   */\n  public get avatarUrl(): string {\n    return `${environment.discordCdnRootUrl}avatars/${this.id}/${this.avatar}.png`;\n  }\n\n  /**\n   * Helper accessor returning the {@link User}'s username as displayed in Discord\n   * with the {@link User#username} and {@link User#discriminator}\n   * @returns {string} The display name\n   */\n  public get displayName(): string {\n    return `${this.username}#${this.discriminator}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInterfaceModule.html":{"url":"modules/UserInterfaceModule.html","title":"module - UserInterfaceModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInterfaceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/user-interface/user-interface.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for exposing the UI component library to other areas of the application via the SharedModule\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ClarityModule } from \"@clr/angular\";\n\n/**\n * Module for exposing the UI component library to other areas of the application via the {@link SharedModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ClarityModule],\n  exports: [ClarityModule]\n})\nexport class UserInterfaceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserPreferencesComponent.html":{"url":"components/UserPreferencesComponent.html","title":"component - UserPreferencesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserPreferencesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/module/home/page/user-preferences/user-preferences.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-user-preferences\n            \n\n            \n                styleUrls\n                ./user-preferences.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-preferences.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    theme$\n                                \n                                \n                                    theme\n                                \n                                \n                                    title$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        theme$\n                    \n                \n\n                \n                    \n                        gettheme$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n\n                \n                    \n                        settheme(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        title$\n                    \n                \n\n                \n                    \n                        gettitle$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/module/home/page/user-preferences/user-preferences.component.ts:26\n                                \n                            \n                    \n                        \n                                Accessor retrieving the page title from HomeRoutingModule\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { ThemeService } from \"@core/service/theme.service\";\nimport { Observable } from \"rxjs\";\nimport { ActivatedRoute, Data } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { Theme } from \"@core/model/theme.model\";\n\n@Component({\n  selector: \"siltstride-user-preferences\",\n  templateUrl: \"./user-preferences.component.html\",\n  styleUrls: [\"./user-preferences.component.scss\"]\n})\nexport class UserPreferencesComponent implements OnInit {\n  public get theme$(): Observable {\n    return this.themeService.theme$;\n  }\n\n  public set theme(value: Theme) {\n    this.themeService.setTheme(value);\n  }\n\n  /**\n   * Accessor retrieving the page title from {@link HomeRoutingModule}\n   * @returns {Observable} Observable containing the page title\n   */\n  public get title$(): Observable {\n    return this.route.data.pipe(map((data: Data) => data[\"title\"] as string));\n  }\n\n  /**\n   * @ignore\n   * @param {ActivatedRoute} route\n   * @param {ThemeService} themeService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(\n    private route: ActivatedRoute,\n    private themeService: ThemeService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method,@typescript-eslint/no-empty-function\n  public ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ title$ | async }}\n\n\n    \n\n    \n                \n                    ./user-preferences.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title$ | async }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPreferencesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                siltstride-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/component/user-profile/user-profile.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:31\n                            \n                        \n                \n                    \n                        Mutator setting the user instance member for this component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:22\n                                \n                            \n                    \n                        \n                                Accessor retrieving the User object used for this component\n\n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n                \n                    \n                        setuser(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/component/user-profile/user-profile.component.ts:31\n                                \n                            \n                    \n                        \n                                Mutator setting the user instance member for this component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The incoming user value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { User } from \"@core/model\";\n\n@Component({\n  selector: \"siltstride-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserProfileComponent {\n  /**\n   * @ignore\n   * @type {User}\n   * @private\n   */\n  private _user: User;\n\n  /**\n   * Accessor retrieving the {@link User} object used for this component\n   * @returns {User} The user in this component\n   */\n  public get user(): User {\n    return this._user;\n  }\n\n  /**\n   * Mutator setting the [user]{@link User} instance member for this component\n   * @param {User} value The incoming user value\n   */\n  @Input()\n  public set user(value: User) {\n    if (value == null) {\n      throw new Error(\"Must provide a valid User object!\");\n    }\n    this._user = value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        {{ user.username }}\n        #{{ user.discriminator }}\n      \n    \n    ...\n  \n  \n    \n      Email\n    \n    \n      DM\n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                .card-media-image {\n  border-radius: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ user.username }}        #{{ user.discriminator }}              ...              Email              DM      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'siltstride-root'},{'name': 'AuthRedirectComponent', 'selector': 'siltstride-auth-redirect'},{'name': 'DashboardComponent', 'selector': 'siltstride-dashboard'},{'name': 'FooterComponent', 'selector': 'siltstride-footer'},{'name': 'HeaderComponent', 'selector': 'siltstride-header'},{'name': 'LayoutComponent', 'selector': 'siltstride-layout'},{'name': 'LoginComponent', 'selector': 'siltstride-login'},{'name': 'ServerComponent', 'selector': 'siltstride-server'},{'name': 'ThemeChooserComponent', 'selector': 'siltstride-theme-chooser'},{'name': 'UserPreferencesComponent', 'selector': 'siltstride-user-preferences'},{'name': 'UserProfileComponent', 'selector': 'siltstride-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/user.service.ts:24\n                \n            \n\n\n            \n                \n                    Retrieve the current User's information from Discord\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable containing the current user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { EMPTY, Observable } from \"rxjs\";\nimport { User } from \"@core/model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"@env\";\nimport { catchError, map, take } from \"rxjs/operators\";\nimport { plainToClass } from \"class-transformer\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService {\n  /**\n   * @ignore\n   * @param {HttpClient} http\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieve the current {@link User}'s information from Discord\n   * @returns {Observable} Observable containing the current user\n   * @private\n   */\n  public getCurrentUser(): Observable {\n    return this.http\n      .get(`${environment.discordApiRootUrl}/users/@me`)\n      .pipe(\n        take(1),\n        map((user: User) => plainToClass(User, user)),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        catchError((error) => EMPTY)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/helper/mouse-parallax.helper.ts\n            \n            variable\n            mouseParallaxHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/import.guard.ts\n            \n            variable\n            throwIfAlreadyLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptor/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/model/token.model.ts\n            \n            class\n            TokenWrapper\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/user.model.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/resolver/current-user.resolver.ts\n            \n            guard\n            CurrentUserResolver\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/theme.service.ts\n            \n            variable\n            darkThemeStyleSheet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/service/theme.service.ts\n            \n            variable\n            toggleDarkThemeStyleSheet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/auth-redirect/presentation/auth-redirect.component.ts\n            \n            component\n            AuthRedirectComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layout/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/module/home/page/server/server.component.ts\n            \n            component\n            ServerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/module/home/page/user-preferences/user-preferences.component.ts\n            \n            component\n            UserPreferencesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/component/theme-chooser/theme-chooser.component.ts\n            \n            component\n            ThemeChooserComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/component/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/safe-resource-url.pipe.ts\n            \n            pipe\n            SafeResourceUrlPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            @webcomponents/webcomponentsjs : ^2.0.0\n        \n            class-transformer : ^0.3.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Theme   (src/.../theme.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/model/theme.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Theme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSiltstride Admin\nFolder Structure\nFollowed these guides for scaffolding folder structure:\n\nHow to define a highly scalable folder structure for your Angular project\nAngular Folder Structure\n\nThese guides have overlapping concepts\nPresentation/Container components\nImplementing this common practice to isolate business logic from presentation.\nFollowed these guides for this pattern:\n\nAn enterprise approach to the Smart and Dumb components pattern in Angular\n\nGetting Started\nAfter cloning the repository, one can simply run npm run start in a terminal to start the webpack dev server and see live updates.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInterfaceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthRedirectComponent\n\nAuthRedirectComponent\n\nAppModule -->\n\nAuthRedirectComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe \n\nSafeResourceUrlPipe  -->\n\nSharedModule->SafeResourceUrlPipe \n\n\n\n\n\nThemeChooserComponent \n\nThemeChooserComponent \n\nThemeChooserComponent  -->\n\nSharedModule->ThemeChooserComponent \n\n\n\n\n\nUserInterfaceModule \n\nUserInterfaceModule \n\nUserInterfaceModule  -->\n\nSharedModule->UserInterfaceModule \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nSharedModule->UserProfileComponent \n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nUserInterfaceModule\n\nUserInterfaceModule\n\nCoreModule -->\n\nUserInterfaceModule->CoreModule\n\n\n\nSharedModule -->\n\nUserInterfaceModule->SharedModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nHomeModule -->\n\nDashboardComponent->HomeModule\n\n\n\n\n\nServerComponent\n\nServerComponent\n\nHomeModule -->\n\nServerComponent->HomeModule\n\n\n\n\n\nUserPreferencesComponent\n\nUserPreferencesComponent\n\nHomeModule -->\n\nUserPreferencesComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSafeResourceUrlPipe\n\nSafeResourceUrlPipe\n\nSharedModule -->\n\nSafeResourceUrlPipe->SharedModule\n\n\n\n\n\nThemeChooserComponent\n\nThemeChooserComponent\n\nSharedModule -->\n\nThemeChooserComponent->SharedModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nSharedModule -->\n\nUserProfileComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            darkThemeStyleSheet   (src/.../theme.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mouseParallaxHelper   (src/.../mouse-parallax.helper.ts)\n                        \n                        \n                            throwIfAlreadyLoaded   (src/.../import.guard.ts)\n                        \n                        \n                            toggleDarkThemeStyleSheet   (src/.../theme.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/service/theme.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            darkThemeStyleSheet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StyleSheet\n\n                        \n                    \n                    \n                        \n                            Default value : document.styleSheets[4]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleDarkThemeStyleSheet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  styleSheet: StyleSheet,\n  enable: boolean\n): void => {\n  darkThemeStyleSheet.disabled = !enable;\n}\n                        \n                    \n\n                \n                    \n                        Helper function enabling/disabling the dark-theme.css\nStyleSheet\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/helper/mouse-parallax.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mouseParallaxHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : (\n  element: HTMLElement,\n  event: MouseEvent\n): void => {\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  element.style.setProperty(\n    \"--mouseX\",\n    `${(event.clientX * 9) / offsetWidth}%`\n  );\n  element.style.setProperty(\n    \"--mouseY\",\n    `${(event.clientY * 16) / offsetHeight}%`\n  );\n}\n                        \n                    \n\n                \n                    \n                        Visual parallax effect helper function designed to be tied to the\nGlobalEventHandlers#onmousemove\nevent of any HTMLElement\nUsed this Stack Overflow post\nto determine parallax logic\n\n                    \n                \n\n            \n        \n\n    src/app/core/import.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            throwIfAlreadyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  parentModule: CoreModule,\n  moduleName: string\n): void => {\n  if (parentModule) {\n    throw new Error(\n      `${moduleName} has already been loaded. Import ${moduleName} modules in the AppModule only.`\n    );\n  }\n}\n                        \n                    \n\n                \n                    \n                        Helper function preventing the CoreModule from being imported more than once as implemented in the Angular reference documentation\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
